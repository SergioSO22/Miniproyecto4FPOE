#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (mmap) failed to map 1048576 bytes for G1 virtual space
# Possible reasons:
#   The system is out of physical RAM or swap space
#   The process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap
# Possible solutions:
#   Reduce memory load on the system
#   Increase physical memory or swap space
#   Check if swap backing store is full
#   Decrease Java heap size (-Xmx/-Xms)
#   Decrease number of Java threads
#   Decrease Java thread stack sizes (-Xss)
#   Set larger code cache with -XX:ReservedCodeCacheSize=
#   JVM is running with Unscaled Compressed Oops mode in which the Java heap is
#     placed in the first 4GB address space. The Java Heap base address is the
#     maximum limit for the native heap growth. Please use -XX:HeapBaseMinAddress
#     to set the Java Heap base and to place the Java Heap above 4GB virtual address.
# This output file may be truncated or incomplete.
#
#  Out of Memory Error (os_windows.cpp:3527), pid=9724, tid=5212
#
# JRE version: Java(TM) SE Runtime Environment (19.0+36) (build 19+36-2238)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (19+36-2238, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#

---------------  S U M M A R Y ------------

Command Line: -Dfile.encoding=UTF-8 --module-path=C:\Users\jazam\OneDrive\Escritorio\miniProyecto4\build\classes SupermercadoUV.MiniProyecto4

Host: Intel(R) Pentium(R) CPU  N3540  @ 2.16GHz, 4 cores, 3G,  Windows 10 , 64 bit Build 19041 (10.0.19041.2364)
Time: Wed Jan 18 03:03:00 2023 Hora est. Pacífico, Sudamérica elapsed time: 4.348622 seconds (0d 0h 0m 4s)

---------------  T H R E A D  ---------------

Current thread (0x0000022c69b8a010):  JavaThread "Image Fetcher 0" daemon [_thread_in_vm, id=5212, stack(0x00000081b0a00000,0x00000081b0b00000)]

Stack: [0x00000081b0a00000,0x00000081b0b00000]
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [jvm.dll+0x6ee8fa]
V  [jvm.dll+0x857a1e]
V  [jvm.dll+0x85940e]
V  [jvm.dll+0x859ac3]
V  [jvm.dll+0x28291f]
V  [jvm.dll+0x6eb6e9]
V  [jvm.dll+0x6e028a]
V  [jvm.dll+0x357136]
V  [jvm.dll+0x35eb96]
V  [jvm.dll+0x3b524b]
V  [jvm.dll+0x3b5874]
V  [jvm.dll+0x3b5426]
V  [jvm.dll+0x32cb34]
V  [jvm.dll+0x32ac26]
V  [jvm.dll+0x681ed3]
V  [jvm.dll+0x243ca2]
V  [jvm.dll+0x81e637]
V  [jvm.dll+0x3dc6da]
C  0x0000022c5908d272

Java frames: (J=compiled Java code, j=interpreted, Vv=VM code)
j  java.awt.image.DataBufferInt.<init>(I)V+11 java.desktop@19
j  java.awt.image.Raster.createPackedRaster(III[ILjava/awt/Point;)Ljava/awt/image/WritableRaster;+69 java.desktop@19
j  java.awt.image.DirectColorModel.createCompatibleWritableRaster(II)Ljava/awt/image/WritableRaster;+83 java.desktop@19
j  sun.awt.image.ImageRepresentation.createBufferedImage()V+18 java.desktop@19
J 1150 c1 sun.awt.image.ImageRepresentation.setPixels(IIIILjava/awt/image/ColorModel;[III)V java.desktop@19 (527 bytes) @ 0x0000022c51d115ac [0x0000022c51d11320+0x000000000000028c]
J 1208 c2 sun.awt.image.ImageDecoder.setPixels(IIIILjava/awt/image/ColorModel;[III)I java.desktop@19 (58 bytes) @ 0x0000022c5966f8c0 [0x0000022c5966f380+0x0000000000000540]
J 1199% c2 sun.awt.image.PNGImageDecoder.produceImage()V java.desktop@19 (1917 bytes) @ 0x0000022c59665830 [0x0000022c596655a0+0x0000000000000290]
j  sun.awt.image.InputStreamImageSource.doFetch()V+51 java.desktop@19
j  sun.awt.image.ImageFetcher.fetchloop()V+31 java.desktop@19
j  sun.awt.image.ImageFetcher.run()V+5 java.desktop@19
v  ~StubRoutines::call_stub 0x0000022c59061017

Compiled method (c1)    4429 1150   !   3       sun.awt.image.ImageRepresentation::setPixels (527 bytes)
 total in heap  [0x0000022c51d10f90,0x0000022c51d143d0] = 13376
 relocation     [0x0000022c51d110f0,0x0000022c51d11320] = 560
 main code      [0x0000022c51d11320,0x0000022c51d13240] = 7968
 stub code      [0x0000022c51d13240,0x0000022c51d133a8] = 360
 metadata       [0x0000022c51d133a8,0x0000022c51d133d0] = 40
 scopes data    [0x0000022c51d133d0,0x0000022c51d13c60] = 2192
 scopes pcs     [0x0000022c51d13c60,0x0000022c51d13ff0] = 912
 dependencies   [0x0000022c51d13ff0,0x0000022c51d13ff8] = 8
 handler table  [0x0000022c51d13ff8,0x0000022c51d14358] = 864
 nul chk table  [0x0000022c51d14358,0x0000022c51d143d0] = 120

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation'
  # this:     rdx:rdx   = 'sun/awt/image/ImageRepresentation'
  # parm0:    r8        = int
  # parm1:    r9        = int
  # parm2:    rdi       = int
  # parm3:    rsi       = int
  # parm4:    rcx:rcx   = 'java/awt/image/ColorModel'
  # parm5:    [sp+0x120]   = '[I'  (sp of caller)
  # parm6:    [sp+0x128]   = int
  # parm7:    [sp+0x130]   = int
  0x0000022c51d11320: 448b 5208 | 49bb 0000 | 0000 0800 | 0000 4d03 | d34c 3bd0 

  0x0000022c51d11334: ;   {runtime_call ic_miss_stub}
  0x0000022c51d11334: 0f85 4604 | 3b07 660f | 1f44 0000 
[Verified Entry Point]
  0x0000022c51d11340: 8984 2400 | 90ff ff55 | 4881 ec10 | 0100 0048 | 8954 2468 | 4489 8424 | 8000 0000 | 4489 4c24 
  0x0000022c51d11360: 7c89 7c24 | 7889 b424 | 8400 0000 | 4889 4c24 

  0x0000022c51d11370: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d11370: 7048 bb58 | 22f8 652c | 0200 008b | 83cc 0000 | 0083 c002 | 8983 cc00 | 0000 25fe | 0700 0083 
  0x0000022c51d11390: f800 0f84 | fb1b 0000 | 8b5a 4048 

  0x0000022c51d1139c: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d1139c: 83fb 0048 | b858 22f8 | 652c 0200 | 0049 bb10 | 0100 0000 | 0000 000f | 840a 0000 | 0049 bb20 
  0x0000022c51d113bc: 0100 0000 | 0000 004e | 8b2c 184d | 8d6d 014e | 892c 180f | 84c4 0000 | 0048 3b03 

  0x0000022c51d113d8: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d113d8: 488b c349 | bb58 22f8 | 652c 0200 | 008b 4008 | 49ba 0000 | 0000 0800 | 0000 4903 | c249 3b83 
  0x0000022c51d113f8: 4001 0000 | 750d 4983 | 8348 0100 | 0001 e966 | 0000 0049 | 3b83 5001 | 0000 750d | 4983 8358 
  0x0000022c51d11418: 0100 0001 | e950 0000 | 0049 81bb | 4001 0000 | 0000 0000 | 7517 4989 | 8340 0100 | 0049 c783 
  0x0000022c51d11438: 4801 0000 | 0100 0000 | e92c 0000 | 0049 81bb | 5001 0000 | 0000 0000 | 7517 4989 | 8350 0100 
  0x0000022c51d11458: 0049 c783 | 5801 0000 | 0100 0000 | e908 0000 | 0049 8383 | 3001 0000 

  0x0000022c51d11470: ;   {oop(NULL)}
  0x0000022c51d11470: 0149 b800 | 0000 0000 | 0000 0041 | b900 0000 | 0048 8bd3 | 9048 b8a0 | 300a 0108 

  0x0000022c51d1148c: ;   {virtual_call}
  0x0000022c51d1148c: 0000 00e8 

  0x0000022c51d11490: ; ImmutableOopMap {[104]=Oop [112]=Oop [288]=Oop }
                      ;*invokevirtual checkSecurity {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@17 (line 550)
  0x0000022c51d11490: 2cae ffff | 488b 5424 | 6848 8db4 | 24f8 0000 | 0048 8956 | 0848 8b02 | 4883 c801 | 4889 06f0 
  0x0000022c51d114b0: 480f b132 | 0f84 1200 | 0000 482b | c448 2507 | f0ff ff48 | 8906 0f85 | ed1a 0000 | 8b72 4c48 
  0x0000022c51d114d0: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d114d0: 83fe 0048 | be58 22f8 | 652c 0200 | 0048 bf68 | 0100 0000 | 0000 000f | 850a 0000 | 0048 bf78 
  0x0000022c51d114f0: 0100 0000 | 0000 0048 | 8b1c 3e48 | 8d5b 0148 | 891c 3e0f | 85a8 0000 | 008b 7254 | 4883 fe00 
  0x0000022c51d11510: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d11510: 48be 5822 | f865 2c02 | 0000 48bf | 8801 0000 | 0000 0000 | 0f85 0a00 | 0000 48bf | 9801 0000 
  0x0000022c51d11530: 0000 0000 | 488b 1c3e | 488d 5b01 | 4889 1c3e | 0f85 2e00 | 0000 488b | 4c24 7041 | 0fbe 7740 
  0x0000022c51d11550: 83fe 000f | 8573 1a00 | 004c 8bd1 | 4489 5254 | 488b f248 | 33f1 48c1 | ee14 4883 | fe00 0f85 
  0x0000022c51d11570: 731a 0000 

  0x0000022c51d11574: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d11574: 488b f248 | bf58 22f8 | 652c 0200 

  0x0000022c51d11580: ;   {metadata('sun/awt/image/ImageRepresentation')}
  0x0000022c51d11580: 0049 ba98 | 520a 0108 | 0000 004c | 8997 b801 | 0000 4883 | 87c0 0100 | 0001 488b | f248 8bd6 
  0x0000022c51d115a0: 0f1f 8000 

  0x0000022c51d115a4: ;   {optimized virtual_call}
  0x0000022c51d115a4: 0000 00e8 

  0x0000022c51d115a8: ; ImmutableOopMap {[104]=Oop [112]=Oop [256]=Oop [288]=Oop }
                      ;*invokevirtual createBufferedImage {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@47 (line 559)
  0x0000022c51d115a8: a91c 0000 | 488b 5424 | 688b 5c24 | 784c 8bc2 

  0x0000022c51d115b8: ;   {metadata({type array int})}
  0x0000022c51d115b8: 48ba b025 | 0000 0800 | 0000 4863 | db48 8bfb | 4881 fbff | ffff 000f | 872a 1a00 | 0048 be17 
  0x0000022c51d115d8: 0000 0000 | 0000 0048 | 8d34 9e48 | 83e6 f849 | 8b87 f800 | 0000 488d | 3430 493b | b708 0100 
  0x0000022c51d115f8: 000f 8700 | 1a00 0049 | 89b7 f800 | 0000 482b | f048 c700 | 0100 0000 | 488b ca49 | ba00 0000 
  0x0000022c51d11618: 0008 0000 | 0049 2bca | 8948 0889 | 580c 4883 | ee10 0f84 | 1e00 0000 | 4885 f60f | 8415 0000 
  0x0000022c51d11638: 0048 33db | 48c1 ee02 | 48d1 ee48 | 895c f008 | 4883 ee01 | 75f5 4889 | 8424 8800 | 0000 418b 
  0x0000022c51d11658: 5054 4883 | fa00 7516 

  0x0000022c51d11660: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d11660: 48bf 5822 | f865 2c02 | 0000 808f | d901 0000 | 01e9 d200 

  0x0000022c51d11674: ;   {metadata('java/awt/image/IndexColorModel')}
  0x0000022c51d11674: 0000 48bb | 88f6 0601 | 0800 0000 | 8b72 0849 | ba00 0000 | 0008 0000 | 0049 03f2 | 483b de0f 
  0x0000022c51d11694: 8593 0000 

  0x0000022c51d11698: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d11698: 0048 bf58 | 22f8 652c | 0200 008b | 5a08 49ba | 0000 0000 | 0800 0000 | 4903 da48 | 3b9f f001 
  0x0000022c51d116b8: 0000 750d | 4883 87f8 | 0100 0001 | e984 0000 | 0048 3b9f | 0002 0000 | 750d 4883 | 8708 0200 
  0x0000022c51d116d8: 0001 e96e | 0000 0048 | 81bf f001 | 0000 0000 | 0000 7517 | 4889 9ff0 | 0100 0048 | c787 f801 
  0x0000022c51d116f8: 0000 0100 | 0000 e94a | 0000 0048 | 81bf 0002 | 0000 0000 | 0000 7517 | 4889 9f00 | 0200 0048 
  0x0000022c51d11718: c787 0802 | 0000 0100 | 0000 e926 | 0000 00e9 | 2100 0000 

  0x0000022c51d1172c: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d1172c: 48bf 5822 | f865 2c02 | 0000 4883 | afe0 0100 | 0001 e905 | 0000 00e9 | 0500 0000 | 4833 d2eb 
  0x0000022c51d1174c: 0a48 ba01 | 0000 0000 | 0000 0083 

  0x0000022c51d11758: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d11758: fa00 48ba | 5822 f865 | 2c02 0000 | 48be 2802 | 0000 0000 | 0000 0f85 | 0a00 0000 | 48be 1802 
  0x0000022c51d11778: 0000 0000 | 0000 488b | 3c32 488d | 7f01 4889 | 3c32 0f85 | 0d00 0000 | 488b 4c24 | 7049 8bd0 
  0x0000022c51d11798: e929 0000 | 0049 8bd0 

  0x0000022c51d117a0: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d117a0: 48be 5822 | f865 2c02 | 0000 4883 | 8638 0200 | 0001 498b 

  0x0000022c51d117b4: ;   {optimized virtual_call}
  0x0000022c51d117b4: d066 90e8 

  0x0000022c51d117b8: ; ImmutableOopMap {[104]=Oop [112]=Oop [136]=Oop [256]=Oop [288]=Oop }
                      ;*invokevirtual convertToRGB {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@66 (line 569)
  0x0000022c51d117b8: c402 3b07 | 488b 4c24 | 7048 8b54 | 2468 8b72 | 5448 3bce 

  0x0000022c51d117cc: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d117cc: 48be 5822 | f865 2c02 | 0000 48bf | 7002 0000 | 0000 0000 | 0f85 0a00 | 0000 48bf | 8002 0000 
  0x0000022c51d117ec: 0000 0000 | 488b 1c3e | 488d 5b01 | 4889 1c3e | 0f85 3b01 | 0000 8b72 | 5048 83fe 

  0x0000022c51d11808: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d11808: 0075 1648 | b858 22f8 | 652c 0200 | 0080 8889 | 0200 0001 | e9d4 0000 

  0x0000022c51d11820: ;   {metadata('sun/awt/image/IntegerComponentRaster')}
  0x0000022c51d11820: 0049 b8c0 | d90a 0108 | 0000 008b | 4608 49ba | 0000 0000 | 0800 0000 | 4903 c24c | 3b40 500f 
  0x0000022c51d11840: 8594 0000 

  0x0000022c51d11844: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d11844: 0048 b858 | 22f8 652c | 0200 0044 | 8b46 0849 | ba00 0000 | 0008 0000 | 004d 03c2 | 4c3b 80a0 
  0x0000022c51d11864: 0200 0075 | 0d48 8380 | a802 0000 | 01e9 8400 | 0000 4c3b | 80b0 0200 | 0075 0d48 | 8380 b802 
  0x0000022c51d11884: 0000 01e9 | 6e00 0000 | 4881 b8a0 | 0200 0000 | 0000 0075 | 174c 8980 | a002 0000 | 48c7 80a8 
  0x0000022c51d118a4: 0200 0001 | 0000 00e9 | 4a00 0000 | 4881 b8b0 | 0200 0000 | 0000 0075 | 174c 8980 | b002 0000 
  0x0000022c51d118c4: 48c7 80b8 | 0200 0001 | 0000 00e9 | 2600 0000 | e921 0000 

  0x0000022c51d118d8: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d118d8: 0048 b858 | 22f8 652c | 0200 0048 | 83a8 9002 | 0000 01e9 | 0500 0000 | e905 0000 | 0048 33ff 
  0x0000022c51d118f8: eb0a 48bf | 0100 0000 | 0000 0000 

  0x0000022c51d11904: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d11904: 83ff 0048 | bf58 22f8 | 652c 0200 | 0048 bbd8 | 0200 0000 | 0000 000f | 850a 0000 | 0048 bbc8 
  0x0000022c51d11924: 0200 0000 | 0000 0048 | 8b04 1f48 | 8d40 0148 | 8904 1f0f | 85f8 0f00 | 0048 3b01 

  0x0000022c51d11940: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d11940: 488b f148 | bf58 22f8 | 652c 0200 | 008b 7608 | 49ba 0000 | 0000 0800 | 0000 4903 | f248 3bb7 
  0x0000022c51d11960: 5804 0000 | 750d 4883 | 8760 0400 | 0001 e966 | 0000 0048 | 3bb7 6804 | 0000 750d | 4883 8770 
  0x0000022c51d11980: 0400 0001 | e950 0000 | 0048 81bf | 5804 0000 | 0000 0000 | 7517 4889 | b758 0400 | 0048 c787 
  0x0000022c51d119a0: 6004 0000 | 0100 0000 | e92c 0000 | 0048 81bf | 6804 0000 | 0000 0000 | 7517 4889 | b768 0400 
  0x0000022c51d119c0: 0048 c787 | 7004 0000 | 0100 0000 | e908 0000 | 0048 8387 | 4804 0000 | 0148 8bd1 | 9048 b8ff 
  0x0000022c51d119e0: ffff ffff 

  0x0000022c51d119e4: ;   {virtual_call}
  0x0000022c51d119e4: ffff ffe8 

  0x0000022c51d119e8: ; ImmutableOopMap {[104]=Oop [112]=Oop [136]=Oop [256]=Oop [288]=Oop }
                      ;*invokevirtual getTransparency {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@176 (line 589)
  0x0000022c51d119e8: 9403 3b07 

  0x0000022c51d119ec: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d119ec: 83f8 0148 | ba58 22f8 | 652c 0200 | 0048 be80 | 0400 0000 | 0000 000f | 840a 0000 | 0048 be90 
  0x0000022c51d11a0c: 0400 0000 | 0000 0048 | 8b3c 3248 | 8d7f 0148 | 893c 320f | 8417 0100 | 0048 8b54 | 2468 8b72 
  0x0000022c51d11a2c: 5448 3b06 

  0x0000022c51d11a30: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d11a30: 488b fe48 | bb58 22f8 | 652c 0200 | 008b 7f08 | 49ba 0000 | 0000 0800 | 0000 4903 | fa48 3bbb 
  0x0000022c51d11a50: b004 0000 | 750d 4883 | 83b8 0400 | 0001 e966 | 0000 0048 | 3bbb c004 | 0000 750d | 4883 83c8 
  0x0000022c51d11a70: 0400 0001 | e950 0000 | 0048 81bb | b004 0000 | 0000 0000 | 7517 4889 | bbb0 0400 | 0048 c783 
  0x0000022c51d11a90: b804 0000 | 0100 0000 | e92c 0000 | 0048 81bb | c004 0000 | 0000 0000 | 7517 4889 | bbc0 0400 
  0x0000022c51d11ab0: 0048 c783 | c804 0000 | 0100 0000 | e908 0000 | 0048 8383 | a004 0000 | 0148 8bd6 | 9048 b8ff 
  0x0000022c51d11ad0: ffff ffff 

  0x0000022c51d11ad4: ;   {virtual_call}
  0x0000022c51d11ad4: ffff ffe8 

  0x0000022c51d11ad8: ; ImmutableOopMap {[104]=Oop [112]=Oop [136]=Oop [256]=Oop [288]=Oop }
                      ;*invokevirtual getTransparency {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@187 (line 590)
  0x0000022c51d11ad8: a402 3b07 

  0x0000022c51d11adc: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d11adc: 83f8 0148 | ba58 22f8 | 652c 0200 | 0048 bed8 | 0400 0000 | 0000 000f | 850a 0000 | 0048 bee8 
  0x0000022c51d11afc: 0400 0000 | 0000 0048 | 8b3c 3248 | 8d7f 0148 | 893c 320f | 8527 0000 | 0048 8b54 

  0x0000022c51d11b18: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d11b18: 2468 48be | 5822 f865 | 2c02 0000 | 4883 86f8 | 0400 0001 | 488b 5424 | 6866 0f1f 

  0x0000022c51d11b34: ;   {optimized virtual_call}
  0x0000022c51d11b34: 4400 00e8 

  0x0000022c51d11b38: ; ImmutableOopMap {[104]=Oop [112]=Oop [136]=Oop [256]=Oop [288]=Oop }
                      ;*invokevirtual convertToRGB {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@195 (line 591)
  0x0000022c51d11b38: 44ff 3a07 | 488b 5424 | 680f be72 | 3d83 fe00 

  0x0000022c51d11b48: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d11b48: 48be 5822 | f865 2c02 | 0000 48bf | 3005 0000 | 0000 0000 | 0f84 0a00 | 0000 48bf | 4005 0000 
  0x0000022c51d11b68: 0000 0000 | 488b 1c3e | 488d 5b01 | 4889 1c3e | 0f84 6009 | 0000 8b72 | 5048 83fe 

  0x0000022c51d11b84: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d11b84: 0075 1648 | bb58 22f8 | 652c 0200 | 0080 8b49 | 0500 0001 | e9d3 0000 

  0x0000022c51d11b9c: ;   {metadata('sun/awt/image/IntegerComponentRaster')}
  0x0000022c51d11b9c: 0048 b8c0 | d90a 0108 | 0000 008b | 5e08 49ba | 0000 0000 | 0800 0000 | 4903 da48 | 3b43 500f 
  0x0000022c51d11bbc: 8593 0000 

  0x0000022c51d11bc0: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d11bc0: 0048 bb58 | 22f8 652c | 0200 008b | 4608 49ba | 0000 0000 | 0800 0000 | 4903 c248 | 3b83 6005 
  0x0000022c51d11be0: 0000 750d | 4883 8368 | 0500 0001 | e97f 0000 | 0048 3b83 | 7005 0000 | 750d 4883 | 8378 0500 
  0x0000022c51d11c00: 0001 e969 | 0000 0048 | 81bb 6005 | 0000 0000 | 0000 7517 | 4889 8360 | 0500 0048 | c783 6805 
  0x0000022c51d11c20: 0000 0100 | 0000 e945 | 0000 0048 | 81bb 7005 | 0000 0000 | 0000 7517 | 4889 8370 | 0500 0048 
  0x0000022c51d11c40: c783 7805 | 0000 0100 | 0000 e921 | 0000 00e9 | 1c00 0000 

  0x0000022c51d11c54: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d11c54: 48bb 5822 | f865 2c02 | 0000 4883 | ab50 0500 | 0001 e9a8 | 1300 00e9 | 0000 0000 | 4889 b424 
  0x0000022c51d11c74: 9000 0000 

  0x0000022c51d11c78: ; implicit exception: dispatches to 0x0000022c51d1301c
  0x0000022c51d11c78: 483b 0648 

  0x0000022c51d11c7c: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d11c7c: 8bfe 48bb | 5822 f865 | 2c02 0000 | 8b7f 0849 | ba00 0000 | 0008 0000 | 0049 03fa | 483b bb98 
  0x0000022c51d11c9c: 0500 0075 | 0d48 8383 | a005 0000 | 01e9 6600 | 0000 483b | bba8 0500 | 0075 0d48 | 8383 b005 
  0x0000022c51d11cbc: 0000 01e9 | 5000 0000 | 4881 bb98 | 0500 0000 | 0000 0075 | 1748 89bb | 9805 0000 | 48c7 83a0 
  0x0000022c51d11cdc: 0500 0001 | 0000 00e9 | 2c00 0000 | 4881 bba8 | 0500 0000 | 0000 0075 | 1748 89bb | a805 0000 
  0x0000022c51d11cfc: 48c7 83b0 | 0500 0001 | 0000 00e9 | 0800 0000 | 4883 8388 | 0500 0001 | 488b d666 | 0f1f 4400 
  0x0000022c51d11d1c: 0048 b8ff | ffff ffff 

  0x0000022c51d11d24: ;   {virtual_call}
  0x0000022c51d11d24: ffff ffe8 

  0x0000022c51d11d28: ; ImmutableOopMap {[104]=Oop [112]=Oop [136]=Oop [144]=Oop [256]=Oop [288]=Oop }
                      ;*invokevirtual getDataStorage {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@216 (line 597)
  0x0000022c51d11d28: 5400 3b07 | 4889 8424 | 9800 0000 | 488b 5424 | 688b 7254 

  0x0000022c51d11d3c: ; implicit exception: dispatches to 0x0000022c51d13021
  0x0000022c51d11d3c: 483b 064c 

  0x0000022c51d11d40: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d11d40: 8bc6 48bf | 5822 f865 | 2c02 0000 | 458b 4008 | 49ba 0000 | 0000 0800 | 0000 4d03 | c24c 3b87 
  0x0000022c51d11d60: d005 0000 | 750d 4883 | 87d8 0500 | 0001 e966 | 0000 004c | 3b87 e005 | 0000 750d | 4883 87e8 
  0x0000022c51d11d80: 0500 0001 | e950 0000 | 0048 81bf | d005 0000 | 0000 0000 | 7517 4c89 | 87d0 0500 | 0048 c787 
  0x0000022c51d11da0: d805 0000 | 0100 0000 | e92c 0000 | 0048 81bf | e005 0000 | 0000 0000 | 7517 4c89 | 87e0 0500 
  0x0000022c51d11dc0: 0048 c787 | e805 0000 | 0100 0000 | e908 0000 | 0048 8387 | c005 0000 | 014c 8b44 | 2470 488b 
  0x0000022c51d11de0: d60f 1f40 | 0048 b8ff | ffff ffff 

  0x0000022c51d11dec: ;   {virtual_call}
  0x0000022c51d11dec: ffff ffe8 

  0x0000022c51d11df0: ; ImmutableOopMap {[104]=Oop [112]=Oop [136]=Oop [144]=Oop [152]=Oop [256]=Oop [288]=Oop }
                      ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@227 (line 598)
  0x0000022c51d11df0: 8cff 3a07 

  0x0000022c51d11df4: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d11df4: 83f8 0048 | ba58 22f8 | 652c 0200 | 0048 bef8 | 0500 0000 | 0000 000f | 840a 0000 | 0048 be08 
  0x0000022c51d11e14: 0600 0000 | 0000 0048 | 8b3c 3248 | 8d7f 0148 | 893c 320f | 8421 0300 | 0048 8b94 | 2490 0000 
  0x0000022c51d11e34: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d11e34: 0048 bf58 | 22f8 652c | 0200 008b | 5208 49ba | 0000 0000 | 0800 0000 | 4903 d248 | 3b97 2806 
  0x0000022c51d11e54: 0000 750d | 4883 8730 | 0600 0001 | e966 0000 | 0048 3b97 | 3806 0000 | 750d 4883 | 8740 0600 
  0x0000022c51d11e74: 0001 e950 | 0000 0048 | 81bf 2806 | 0000 0000 | 0000 7517 | 4889 9728 | 0600 0048 | c787 3006 
  0x0000022c51d11e94: 0000 0100 | 0000 e92c | 0000 0048 | 81bf 3806 | 0000 0000 | 0000 7517 | 4889 9738 | 0600 0048 
  0x0000022c51d11eb4: c787 4006 | 0000 0100 | 0000 e908 | 0000 0048 | 8387 1806 | 0000 0148 | 8b94 2490 | 0000 0066 
  0x0000022c51d11ed4: 9048 b8ff | ffff ffff 

  0x0000022c51d11edc: ;   {virtual_call}
  0x0000022c51d11edc: ffff ffe8 

  0x0000022c51d11ee0: ; ImmutableOopMap {[104]=Oop [144]=Oop [152]=Oop [256]=Oop [288]=Oop }
                      ;*invokevirtual getScanlineStride {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@235 (line 599)
  0x0000022c51d11ee0: 9cfe 3a07 | 8984 24a4 | 0000 0048 | 8bd0 448b | 4c24 7c41 | 0faf d103 | 9424 8000 | 0000 8b9c 
  0x0000022c51d11f00: 2428 0100 | 00b9 0000 | 0000 e939 | 0100 0090 | 898c 24ac | 0000 008b | 9c24 a000 | 0000 488b 
  0x0000022c51d11f20: 8c24 9800 

  0x0000022c51d11f24: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d11f24: 0000 49b8 | 5822 f865 | 2c02 0000 | 4983 8070 | 0600 0001 | 4c8b da48 | 8bd0 4c8b | c34c 8bc9 
  0x0000022c51d11f44: 498b fb8b | 7424 7889 | 9c24 a000 | 0000 4489 | 9c24 a800 | 0000 4885 | d20f 84c3 | 1000 004d 
  0x0000022c51d11f64: 85c9 0f84 | ba10 0000 | 4585 c00f | 8cb1 1000 | 0085 ff0f | 8ca9 1000 | 0049 8d0c | 303b 4a0c 
  0x0000022c51d11f84: 0f87 9c10 | 0000 488d | 0c37 413b | 490c 0f87 | 8e10 0000 | 85f6 0f8c | 8610 0000 | 4d63 c048 
  0x0000022c51d11fa4: 63ff 4a8d | 4c82 1049 | 8d54 b910 | 4c8b c648 | 83ec 2040 | f6c4 0f0f | 8412 0000 | 0048 83ec 
  0x0000022c51d11fc4: ;   {runtime_call StubRoutines (2)}
  0x0000022c51d11fc4: 08e8 1631 | 3907 4883 | c408 e905 

  0x0000022c51d11fd0: ;   {runtime_call StubRoutines (2)}
  0x0000022c51d11fd0: 0000 00e8 | 0831 3907 | 4883 c420 | 8b94 24a8 | 0000 0003 | 9424 a400 | 0000 8b8c | 24ac 0000 
  0x0000022c51d11ff0: 0083 c101 | 8b9c 24a0 | 0000 0003 | 9c24 3001 

  0x0000022c51d12000: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12000: 0000 49b8 | 5822 f865 | 2c02 0000 | 418b b0d0 | 0000 0083 | c602 4189 | b0d0 0000 | 0081 e6fe 
  0x0000022c51d12020: 3f00 0083 | fe00 0f84 | 0510 0000 | 4d8b 9780 

  0x0000022c51d12030: ; ImmutableOopMap {[104]=Oop [144]=Oop [152]=Oop [256]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.ImageRepresentation::setPixels@287 (line 601)
                      ;   {poll}
  0x0000022c51d12030: 0300 0041 

  0x0000022c51d12034: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12034: 8502 49b8 | 5822 f865 | 2c02 0000 | 4183 8080 | 0600 0001 | 899c 24a0 | 0000 0048 | 8b84 2420 
  0x0000022c51d12054: 0100 008b | b424 8400 | 0000 3bce 

  0x0000022c51d12060: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12060: 49b8 5822 | f865 2c02 | 0000 49bb | 6006 0000 | 0000 0000 | 0f8c 0a00 | 0000 49bb | 5006 0000 
  0x0000022c51d12080: 0000 0000 | 4b8b 1c18 | 488d 5b01 | 4b89 1c18 | 0f8c 7afe | ffff 488b | b424 9000 | 0000 4c8b 
  0x0000022c51d120a0: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d120a0: c648 ba58 | 22f8 652c | 0200 0048 | 8382 9806 

  0x0000022c51d120b0: ;   {metadata(method data for {method} {0x0000022c65c940e0} 'markDirty' '()V' in 'sun/awt/image/SunWritableRaster')}
  0x0000022c51d120b0: 0000 0149 | b868 37f8 | 652c 0200 | 0041 8b90 | cc00 0000 | 83c2 0241 | 8990 cc00 | 0000 81e2 
  0x0000022c51d120d0: feff 1f00 | 83fa 000f | 8475 0f00 | 0044 8b46 | 3849 3b00 

  0x0000022c51d120e4: ;   {metadata(method data for {method} {0x0000022c65c940e0} 'markDirty' '()V' in 'sun/awt/image/SunWritableRaster')}
  0x0000022c51d120e4: 498b d048 | be68 37f8 | 652c 0200 | 0048 8386 | 1001 0000 

  0x0000022c51d120f8: ;   {metadata(method data for {method} {0x0000022c659f6aa0} 'markDirty' '()V' in 'sun/java2d/StateTrackableDelegate')}
  0x0000022c51d120f8: 0148 bad8 | 10f8 652c | 0200 008b | b2cc 0000 | 0083 c602 | 89b2 cc00 | 0000 81e6 | feff 1f00 
  0x0000022c51d12118: 83fe 000f | 8457 0f00 | 0041 0fbe | 5740 83fa | 000f 856a | 0f00 0041 | c740 1400 

  0x0000022c51d12134: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12134: 0000 0049 | b858 22f8 | 652c 0200 | 0041 8380 | d006 0000 | 01e9 6803 | 0000 488b | b424 9000 
  0x0000022c51d12154: 0000 448b | 4c24 7c8b | bc24 2801 | 0000 e905 | 0300 0090 | 488b c7b9 | 0000 0000 | 8984 24b0 
  0x0000022c51d12174: 0000 0044 | 898c 24bc | 0000 0089 | bc24 c000 | 0000 e96b | 0100 000f | 1f44 0000 | 898c 24b8 
  0x0000022c51d12194: 0000 008b | 8424 b000 | 0000 488b | b424 2001 | 0000 488b | 4c24 7048 | 8bf8 83c7 | 0189 bc24 
  0x0000022c51d121b4: b400 0000 

  0x0000022c51d121b8: ; implicit exception: dispatches to 0x0000022c51d130b5
  0x0000022c51d121b8: 3b46 0c0f | 83fe 0e00 | 0048 63c0 | 8b44 8610 

  0x0000022c51d121c8: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d121c8: 488b f148 | bf58 22f8 | 652c 0200 | 008b 7608 | 49ba 0000 | 0000 0800 | 0000 4903 | f248 3bb7 
  0x0000022c51d121e8: 3807 0000 | 750d 4883 | 8740 0700 | 0001 e966 | 0000 0048 | 3bb7 4807 | 0000 750d | 4883 8750 
  0x0000022c51d12208: 0700 0001 | e950 0000 | 0048 81bf | 3807 0000 | 0000 0000 | 7517 4889 | b738 0700 | 0048 c787 
  0x0000022c51d12228: 4007 0000 | 0100 0000 | e92c 0000 | 0048 81bf | 4807 0000 | 0000 0000 | 7517 4889 | b748 0700 
  0x0000022c51d12248: 0048 c787 | 5007 0000 | 0100 0000 | e908 0000 | 0048 8387 | 2807 0000 | 014c 8bc0 | 488b d166 
  0x0000022c51d12268: 0f1f 4400 | 0048 b8ff | ffff ffff 

  0x0000022c51d12274: ;   {virtual_call}
  0x0000022c51d12274: ffff ffe8 

  0x0000022c51d12278: ; ImmutableOopMap {[104]=Oop [112]=Oop [136]=Oop [144]=Oop [256]=Oop [288]=Oop }
                      ;*invokevirtual getRGB {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@337 (line 613)
  0x0000022c51d12278: 04fb 3a07 | 8b8c 24b8 | 0000 0048 | 8b9c 2488 | 0000 003b | 4b0c 0f83 | 390e 0000 | 4c63 c142 
  0x0000022c51d12298: 8944 8310 

  0x0000022c51d1229c: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d1229c: 83c1 0149 | b858 22f8 | 652c 0200 | 0045 8b88 | d000 0000 | 4183 c102 | 4589 88d0 | 0000 0041 
  0x0000022c51d122bc: 81e1 fe3f | 0000 4183 | f900 0f84 | 0f0e 0000 | 4d8b 9780 

  0x0000022c51d122d0: ; ImmutableOopMap {rbx=Oop [104]=Oop [112]=Oop [136]=Oop [144]=Oop [256]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.ImageRepresentation::setPixels@344 (line 612)
                      ;   {poll}
  0x0000022c51d122d0: 0300 0041 

  0x0000022c51d122d4: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d122d4: 8502 49b8 | 5822 f865 | 2c02 0000 | 4183 8060 | 0700 0001 | 8b84 24b4 | 0000 0089 | 8424 b000 
  0x0000022c51d122f4: 0000 8b7c | 2478 3bcf 

  0x0000022c51d122fc: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d122fc: 48bb 5822 | f865 2c02 | 0000 48be | 1807 0000 | 0000 0000 | 0f8c 0a00 | 0000 48be | 0807 0000 
  0x0000022c51d1231c: 0000 0000 | 488b 0433 | 488d 4001 | 4889 0433 | 0f8c 5efe | ffff 488b | 9c24 8800 | 0000 488b 
  0x0000022c51d1233c: b424 9000 

  0x0000022c51d12340: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12340: 0000 49b8 | 5822 f865 | 2c02 0000 | 8b76 0849 | ba00 0000 | 0008 0000 | 0049 03f2 | 493b b088 
  0x0000022c51d12360: 0700 0075 | 0d49 8380 | 9007 0000 | 01e9 6600 | 0000 493b | b098 0700 | 0075 0d49 | 8380 a007 
  0x0000022c51d12380: 0000 01e9 | 5000 0000 | 4981 b888 | 0700 0000 | 0000 0075 | 1749 89b0 | 8807 0000 | 49c7 8090 
  0x0000022c51d123a0: 0700 0001 | 0000 00e9 | 2c00 0000 | 4981 b898 | 0700 0000 | 0000 0075 | 1749 89b0 | 9807 0000 
  0x0000022c51d123c0: 49c7 80a0 | 0700 0001 | 0000 00e9 | 0800 0000 | 4983 8078 | 0700 0001 | 448b 8424 | 8000 0000 
  0x0000022c51d123e0: 448b 8c24 | bc00 0000 | 8b7c 2478 | be01 0000 | 0048 8bcb | 488b 9424 | 9000 0000 | 9048 b8ff 
  0x0000022c51d12400: ffff ffff 

  0x0000022c51d12404: ;   {virtual_call}
  0x0000022c51d12404: ffff ffe8 

  0x0000022c51d12408: ; ImmutableOopMap {[104]=Oop [112]=Oop [136]=Oop [144]=Oop [256]=Oop [288]=Oop }
                      ;*invokevirtual setDataElements {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@356 (line 615)
  0x0000022c51d12408: 74f9 3a07 | 448b 8c24 | bc00 0000 | 4183 c101 | 8bbc 24c0 | 0000 0003 | bc24 3001 

  0x0000022c51d12424: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12424: 0000 49b8 | 5822 f865 | 2c02 0000 | 418b 90d0 | 0000 0083 | c202 4189 | 90d0 0000 | 0081 e2fe 
  0x0000022c51d12444: 3f00 0083 | fa00 0f84 | ac0c 0000 | 4d8b 9780 

  0x0000022c51d12454: ; ImmutableOopMap {[104]=Oop [112]=Oop [136]=Oop [144]=Oop [256]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.ImageRepresentation::setPixels@369 (line 610)
                      ;   {poll}
  0x0000022c51d12454: 0300 0041 

  0x0000022c51d12458: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12458: 8502 49b8 | 5822 f865 | 2c02 0000 | 4183 80b0 | 0700 0001 | 8bb4 2484 | 0000 008b | 5c24 7c4c 
  0x0000022c51d12478: 8bde 4403 | db45 3bcb 

  0x0000022c51d12480: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12480: 49bb 5822 | f865 2c02 | 0000 48b9 | f806 0000 | 0000 0000 | 0f8c 0a00 | 0000 48b9 | e806 0000 
  0x0000022c51d124a0: 0000 0000 | 498b 040b | 488d 4001 | 4989 040b | 0f8c b2fc | ffff 488b | 5424 6844 | 8b42 2841 
  0x0000022c51d124c0: 83c8 0844 

  0x0000022c51d124c4: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d124c4: 8942 2849 | b858 22f8 | 652c 0200 | 0041 8380 | c807 0000 | 01e9 1809 | 0000 448b | 4c24 7c8b 
  0x0000022c51d124e4: b424 2801 

  0x0000022c51d124e8: ;   {oop(NULL)}
  0x0000022c51d124e8: 0000 48bf | 0000 0000 | 0000 0000 | e9d3 0300 | 000f 1f80 | 0000 0000 | 448b 8424 | 8000 0000 
  0x0000022c51d12508: 488b de48 | 89bc 24c8 | 0000 0044 | 898c 24d4 | 0000 0089 | b424 c400 | 0000 e9f5 | 0200 0090 
  0x0000022c51d12528: 4489 8424 | d000 0000 | 4c8b db41 | 83c3 013b | 580c 0f83 | e70b 0000 | 4863 db8b | 5c98 104c 
  0x0000022c51d12548: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12548: 8be9 49be | 5822 f865 | 2c02 0000 | 458b 6d08 | 49ba 0000 | 0000 0800 | 0000 4d03 | ea4d 3bae 
  0x0000022c51d12568: 3008 0000 | 750d 4983 | 8638 0800 | 0001 e966 | 0000 004d | 3bae 4008 | 0000 750d | 4983 8648 
  0x0000022c51d12588: 0800 0001 | e950 0000 | 0049 81be | 3008 0000 | 0000 0000 | 7517 4d89 | ae30 0800 | 0049 c786 
  0x0000022c51d125a8: 3808 0000 | 0100 0000 | e92c 0000 | 0049 81be | 4008 0000 | 0000 0000 | 7517 4d89 | ae40 0800 
  0x0000022c51d125c8: 0049 c786 | 4808 0000 | 0100 0000 | e908 0000 | 0049 8386 | 2008 0000 | 014c 8bc3 | 488b d144 
  0x0000022c51d125e8: 899c 24d8 | 0000 0066 | 0f1f 4400 | 0048 b8ff | ffff ffff 

  0x0000022c51d125fc: ;   {virtual_call}
  0x0000022c51d125fc: ffff ffe8 

  0x0000022c51d12600: ; ImmutableOopMap {[104]=Oop [112]=Oop [200]=Oop [256]=Oop [288]=Oop }
                      ;*invokevirtual getRGB {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@426 (line 627)
  0x0000022c51d12600: 7cf7 3a07 | 488b 5424 | 688b 7254 

  0x0000022c51d1260c: ; implicit exception: dispatches to 0x0000022c51d13135
  0x0000022c51d1260c: 483b 064c 

  0x0000022c51d12610: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12610: 8bc6 49b9 | 5822 f865 | 2c02 0000 | 458b 4008 | 49ba 0000 | 0000 0800 | 0000 4d03 | c24d 3b81 
  0x0000022c51d12630: 6808 0000 | 750d 4983 | 8170 0800 | 0001 e966 | 0000 004d | 3b81 7808 | 0000 750d | 4983 8180 
  0x0000022c51d12650: 0800 0001 | e950 0000 | 0049 81b9 | 6808 0000 | 0000 0000 | 7517 4d89 | 8168 0800 | 0049 c781 
  0x0000022c51d12670: 7008 0000 | 0100 0000 | e92c 0000 | 0049 81b9 | 7808 0000 | 0000 0000 | 7517 4d89 | 8178 0800 
  0x0000022c51d12690: 0049 c781 | 8008 0000 | 0100 0000 | e908 0000 | 0049 8381 | 5808 0000 | 014c 8bc0 | 4c8b 8c24 
  0x0000022c51d126b0: c800 0000 | 488b d666 | 0f1f 4400 | 0048 b8ff | ffff ffff 

  0x0000022c51d126c4: ;   {virtual_call}
  0x0000022c51d126c4: ffff ffe8 

  0x0000022c51d126c8: ; ImmutableOopMap {[104]=Oop [112]=Oop [256]=Oop [288]=Oop }
                      ;*invokevirtual getDataElements {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@439 (line 628)
  0x0000022c51d126c8: b4f6 3a07 | 488b 5424 | 688b 7250 

  0x0000022c51d126d4: ; implicit exception: dispatches to 0x0000022c51d1313a
  0x0000022c51d126d4: 483b 064c 

  0x0000022c51d126d8: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d126d8: 8bc6 49b9 | 5822 f865 | 2c02 0000 | 458b 4008 | 49ba 0000 | 0000 0800 | 0000 4d03 | c24d 3b81 
  0x0000022c51d126f8: a008 0000 | 750d 4983 | 81a8 0800 | 0001 e966 | 0000 004d | 3b81 b008 | 0000 750d | 4983 81b8 
  0x0000022c51d12718: 0800 0001 | e950 0000 | 0049 81b9 | a008 0000 | 0000 0000 | 7517 4d89 | 81a0 0800 | 0049 c781 
  0x0000022c51d12738: a808 0000 | 0100 0000 | e92c 0000 | 0049 81b9 | b008 0000 | 0000 0000 | 7517 4d89 | 81b0 0800 
  0x0000022c51d12758: 0049 c781 | b808 0000 | 0100 0000 | e908 0000 | 0049 8381 | 9008 0000 | 0144 8b84 | 24d0 0000 
  0x0000022c51d12778: 0044 8b8c | 24d4 0000 | 0048 8bf8 | 488b d648 | 8984 24e0 | 0000 0066 | 0f1f 4400 | 0048 b8ff 
  0x0000022c51d12798: ffff ffff 

  0x0000022c51d1279c: ;   {virtual_call}
  0x0000022c51d1279c: ffff ffe8 

  0x0000022c51d127a0: ; ImmutableOopMap {[104]=Oop [112]=Oop [224]=Oop [256]=Oop [288]=Oop }
                      ;*invokevirtual setDataElements {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@454 (line 629)
  0x0000022c51d127a0: dcf5 3a07 | 448b 8424 | d000 0000 | 4183 c001 

  0x0000022c51d127b0: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d127b0: 48ba 5822 | f865 2c02 | 0000 448b | 8ad0 0000 | 0041 83c1 | 0244 898a | d000 0000 | 4181 e1fe 
  0x0000022c51d127d0: 3f00 0041 | 83f9 000f | 8462 0900 | 004d 8b97 

  0x0000022c51d127e0: ; ImmutableOopMap {[104]=Oop [112]=Oop [224]=Oop [256]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.ImageRepresentation::setPixels@460 (line 626)
  0x0000022c51d127e0: 8003 0000 

  0x0000022c51d127e4: ;   {poll}
  0x0000022c51d127e4: 4185 0248 | ba58 22f8 | 652c 0200 | 0083 82c8 | 0800 0001 | 488b bc24 | e000 0000 | 8b9c 24d8 
  0x0000022c51d12804: 0000 0048 | 89bc 24c8 | 0000 0048 | 8b84 2420 | 0100 0048 | 8b4c 2470 | 448b 9c24 | 8000 0000 
  0x0000022c51d12824: 4403 5c24 | 7845 3bc3 

  0x0000022c51d1282c: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d1282c: 49bb 5822 | f865 2c02 | 0000 49bd | 1008 0000 | 0000 0000 | 0f8c 0a00 | 0000 49bd | 0008 0000 
  0x0000022c51d1284c: 0000 0000 | 4f8b 342b | 4d8d 7601 | 4f89 342b | 0f8c c6fc | ffff 488b | bc24 c800 | 0000 448b 
  0x0000022c51d1286c: 8c24 d400 | 0000 4183 | c101 8bb4 | 24c4 0000 | 0003 b424 | 3001 0000 

  0x0000022c51d12884: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12884: 48ba 5822 | f865 2c02 | 0000 448b | 82d0 0000 | 0041 83c0 | 0244 8982 | d000 0000 | 4181 e0fe 
  0x0000022c51d128a4: 3f00 0041 | 83f8 000f | 84af 0800 | 004d 8b97 

  0x0000022c51d128b4: ; ImmutableOopMap {rdi=Oop [104]=Oop [112]=Oop [256]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.ImageRepresentation::setPixels@473 (line 624)
  0x0000022c51d128b4: 8003 0000 

  0x0000022c51d128b8: ;   {poll}
  0x0000022c51d128b8: 4185 0248 | ba58 22f8 | 652c 0200 | 0083 82e0 | 0800 0001 | 488b 8424 | 2001 0000 | 488b 4c24 
  0x0000022c51d128d8: 7044 8b84 | 2484 0000 | 0044 0344 | 247c 453b 

  0x0000022c51d128e8: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d128e8: c849 b858 | 22f8 652c | 0200 0048 | bbf0 0700 | 0000 0000 | 000f 8c0a | 0000 0048 | bbe0 0700 
  0x0000022c51d12908: 0000 0000 | 004d 8b1c | 184d 8d5b | 014d 891c | 180f 8ce1 | fbff ff48 | 8b54 2468 | 448b 4228 
  0x0000022c51d12928: 4183 c808 | 4489 4228 | e9c1 0400 | 0044 8b84 | 2428 0100 | 0048 83fe 

  0x0000022c51d12940: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12940: 0075 1648 | bf58 22f8 | 652c 0200 | 0080 8fe1 | 0200 0001 | e9d3 0000 

  0x0000022c51d12958: ;   {metadata('sun/awt/image/IntegerComponentRaster')}
  0x0000022c51d12958: 0048 bbc0 | d90a 0108 | 0000 008b | 7e08 49ba | 0000 0000 | 0800 0000 | 4903 fa48 | 3b5f 500f 
  0x0000022c51d12978: 8593 0000 

  0x0000022c51d1297c: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d1297c: 0048 bf58 | 22f8 652c | 0200 008b | 5e08 49ba | 0000 0000 | 0800 0000 | 4903 da48 | 3b9f f802 
  0x0000022c51d1299c: 0000 750d | 4883 8700 | 0300 0001 | e97f 0000 | 0048 3b9f | 0803 0000 | 750d 4883 | 8710 0300 
  0x0000022c51d129bc: 0001 e969 | 0000 0048 | 81bf f802 | 0000 0000 | 0000 7517 | 4889 9ff8 | 0200 0048 | c787 0003 
  0x0000022c51d129dc: 0000 0100 | 0000 e945 | 0000 0048 | 81bf 0803 | 0000 0000 | 0000 7517 | 4889 9f08 | 0300 0048 
  0x0000022c51d129fc: c787 1003 | 0000 0100 | 0000 e921 | 0000 00e9 | 1c00 0000 

  0x0000022c51d12a10: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12a10: 48bf 5822 | f865 2c02 | 0000 4883 | afe8 0200 | 0001 e95a | 0700 00e9 | 0000 0000 | 488b de48 
  0x0000022c51d12a30: 899c 24e8 | 0000 0041 

  0x0000022c51d12a38: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12a38: 83f8 0049 | b958 22f8 | 652c 0200 | 0048 bf20 | 0300 0000 | 0000 000f | 850a 0000 | 0048 bf30 
  0x0000022c51d12a58: 0300 0000 | 0000 0049 | 8b34 3948 | 8d76 0149 | 8934 398b | 8424 3001 | 0000 0f85 | 3a00 0000 
  0x0000022c51d12a78: 3b44 2478 

  0x0000022c51d12a7c: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12a7c: 49b9 5822 | f865 2c02 | 0000 48bf | 5003 0000 | 0000 0000 | 0f84 0a00 | 0000 48bf | 4003 0000 
  0x0000022c51d12a9c: 0000 0000 | 498b 3439 | 488d 7601 | 4989 3439 | 0f84 4a02 | 0000 448b | 4c24 7ce9 | e701 0000 
  0x0000022c51d12abc: 0f1f 4000 | 4489 8c24 | dc00 0000 

  0x0000022c51d12ac8: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12ac8: 48bf 5822 | f865 2c02 | 0000 4883 | 87d0 0300 | 0001 488b | d04d 8bf0 | 4d8b c64c | 8bcb bf00 
  0x0000022c51d12ae8: 0000 008b | 7424 7844 | 89b4 24f0 | 0000 0048 | 85d2 0f84 | 8a06 0000 | 4585 c00f | 8c81 0600 
  0x0000022c51d12b08: 0049 8d0c | 303b 4a0c | 0f87 7406 | 0000 488d | 0c37 413b | 490c 0f87 | 6606 0000 | 85f6 0f8c 
  0x0000022c51d12b28: 5e06 0000 | 4d63 c048 | 63ff 4a8d | 4c82 1049 | 8d54 b910 | 4c8b c648 | 83ec 2040 | f6c4 0f0f 
  0x0000022c51d12b48: 8412 0000 | 0048 83ec 

  0x0000022c51d12b50: ;   {runtime_call StubRoutines (2)}
  0x0000022c51d12b50: 08e8 ea23 | 3907 4883 | c408 e905 

  0x0000022c51d12b5c: ;   {runtime_call StubRoutines (2)}
  0x0000022c51d12b5c: 0000 00e8 | dc23 3907 | 4883 c420 | 488b 9c24 | e800 0000 

  0x0000022c51d12b70: ; implicit exception: dispatches to 0x0000022c51d13199
  0x0000022c51d12b70: 483b 034c 

  0x0000022c51d12b74: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12b74: 8bc3 49b9 | 5822 f865 | 2c02 0000 | 458b 4008 | 49ba 0000 | 0000 0800 | 0000 4d03 | c24d 3b81 
  0x0000022c51d12b94: f003 0000 | 750d 4983 | 81f8 0300 | 0001 e966 | 0000 004d | 3b81 0004 | 0000 750d | 4983 8108 
  0x0000022c51d12bb4: 0400 0001 | e950 0000 | 0049 81b9 | f003 0000 | 0000 0000 | 7517 4d89 | 81f0 0300 | 0049 c781 
  0x0000022c51d12bd4: f803 0000 | 0100 0000 | e92c 0000 | 0049 81b9 | 0004 0000 | 0000 0000 | 7517 4d89 | 8100 0400 
  0x0000022c51d12bf4: 0049 c781 | 0804 0000 | 0100 0000 | e908 0000 | 0049 8381 | e003 0000 | 0144 8b84 | 2480 0000 
  0x0000022c51d12c14: 0044 8b8c | 24dc 0000 | 008b 7c24 | 78be 0100 | 0000 488b | 8c24 8800 | 0000 488b | d30f 1f40 
  0x0000022c51d12c34: 0048 b8ff | ffff ffff 

  0x0000022c51d12c3c: ;   {virtual_call}
  0x0000022c51d12c3c: ffff ffe8 

  0x0000022c51d12c40: ; ImmutableOopMap {[104]=Oop [136]=Oop [232]=Oop [256]=Oop [288]=Oop }
                      ;*invokevirtual setDataElements {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@155 (line 584)
  0x0000022c51d12c40: 3cf1 3a07 | 448b 8c24 | dc00 0000 | 4183 c101 | 448b 8424 | f000 0000 | 4403 8424 | 3001 0000 
  0x0000022c51d12c60: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12c60: 48bf 5822 | f865 2c02 | 0000 8bb7 | d000 0000 | 83c6 0289 | b7d0 0000 | 0081 e6fe | 3f00 0083 
  0x0000022c51d12c80: fe00 0f84 | 1605 0000 | 4d8b 9780 

  0x0000022c51d12c8c: ; ImmutableOopMap {[104]=Oop [136]=Oop [232]=Oop [256]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.ImageRepresentation::setPixels@168 (line 582)
                      ;   {poll}
  0x0000022c51d12c8c: 0300 0041 

  0x0000022c51d12c90: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12c90: 8502 48bf | 5822 f865 | 2c02 0000 | 8387 1804 | 0000 0148 | 8b9c 2488 | 0000 0048 | 8b84 2420 
  0x0000022c51d12cb0: 0100 008b | b424 8400 | 0000 0374 | 247c 443b 

  0x0000022c51d12cc0: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12cc0: ce48 bf58 | 22f8 652c | 0200 0048 | beb0 0300 | 0000 0000 | 000f 8d0a | 0000 0048 | bec0 0300 
  0x0000022c51d12ce0: 0000 0000 | 004c 8b2c | 374d 8d6d | 014c 892c | 370f 8dee | 0000 00e9 | c4fd ffff | 488b 8424 
  0x0000022c51d12d00: 2001 0000 

  0x0000022c51d12d04: ; implicit exception: dispatches to 0x0000022c51d131bf
  0x0000022c51d12d04: 483b 034c 

  0x0000022c51d12d08: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12d08: 8bc3 49b9 | 5822 f865 | 2c02 0000 | 458b 4008 | 49ba 0000 | 0000 0800 | 0000 4d03 | c24d 3b81 
  0x0000022c51d12d28: 7003 0000 | 750d 4983 | 8178 0300 | 0001 e966 | 0000 004d | 3b81 8003 | 0000 750d | 4983 8188 
  0x0000022c51d12d48: 0300 0001 | e950 0000 | 0049 81b9 | 7003 0000 | 0000 0000 | 7517 4d89 | 8170 0300 | 0049 c781 
  0x0000022c51d12d68: 7803 0000 | 0100 0000 | e92c 0000 | 0049 81b9 | 8003 0000 | 0000 0000 | 7517 4d89 | 8180 0300 
  0x0000022c51d12d88: 0049 c781 | 8803 0000 | 0100 0000 | e908 0000 | 0049 8381 | 6003 0000 | 0144 8b84 | 2480 0000 
  0x0000022c51d12da8: 0044 8b4c | 247c 8b7c | 2478 8bb4 | 2484 0000 | 0048 8bc8 | 488b d366 | 0f1f 4400 | 0048 b848 
  0x0000022c51d12dc8: dd0a 0108 

  0x0000022c51d12dcc: ;   {virtual_call}
  0x0000022c51d12dcc: 0000 00e8 

  0x0000022c51d12dd0: ; ImmutableOopMap {[104]=Oop [256]=Oop }
                      ;*invokevirtual setDataElements {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@117 (line 578)
  0x0000022c51d12dd0: ac73 0000 

  0x0000022c51d12dd4: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12dd4: 48b8 5822 | f865 2c02 | 0000 8380 | 9803 0000 

  0x0000022c51d12de4: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12de4: 0148 b858 | 22f8 652c | 0200 0083 | 8030 0400 | 0001 488d | 8424 f800 | 0000 4c8b | 004d 85c0 
  0x0000022c51d12e04: 0f84 0f00 | 0000 4c8b | 4808 f04d | 0fb1 010f | 85ab 0300 

  0x0000022c51d12e18: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12e18: 0049 b858 | 22f8 652c | 0200 0041 | 8380 f808 | 0000 0148 | 8b54 2468 | 448b 4228 | 4183 e010 
  0x0000022c51d12e38: 4183 f800 

  0x0000022c51d12e3c: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12e3c: 49b8 5822 | f865 2c02 | 0000 49b9 | 1009 0000 | 0000 0000 | 0f85 0a00 | 0000 49b9 | 2009 0000 
  0x0000022c51d12e5c: 0000 0000 | 4b8b 3c08 | 488d 7f01 | 4b89 3c08 | 0f85 c200 | 0000 8b9c | 2484 0000 | 008b 4c24 
  0x0000022c51d12e7c: 788b 7424 | 7c8b bc24 | 8000 0000 | 448b 4244 

  0x0000022c51d12e8c: ;   {metadata(method data for {method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12e8c: 4c8b ca48 | b858 22f8 | 652c 0200 | 0045 8b49 | 0849 ba00 | 0000 0008 | 0000 004d | 03ca 4c3b 
  0x0000022c51d12eac: 8840 0900 | 0075 0d48 | 8380 4809 | 0000 01e9 | 6600 0000 | 4c3b 8850 | 0900 0075 | 0d48 8380 
  0x0000022c51d12ecc: 5809 0000 | 01e9 5000 | 0000 4881 | b840 0900 | 0000 0000 | 0075 174c | 8988 4009 | 0000 48c7 
  0x0000022c51d12eec: 8048 0900 | 0001 0000 | 00e9 2c00 | 0000 4881 | b850 0900 | 0000 0000 | 0075 174c | 8988 5009 
  0x0000022c51d12f0c: 0000 48c7 | 8058 0900 | 0001 0000 | 00e9 0800 | 0000 4883 | 8030 0900 | 0001 41b9 | 0800 0000 
  0x0000022c51d12f2c: ;   {optimized virtual_call}
  0x0000022c51d12f2c: 891c 24e8 

  0x0000022c51d12f30: ; ImmutableOopMap {}
                      ;*invokevirtual newInfo {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@523 (line 640)
  0x0000022c51d12f30: aca5 ffff | 4881 c410 | 0100 005d 

  0x0000022c51d12f3c: ;   {poll_return}
  0x0000022c51d12f3c: 493b a778 | 0300 000f | 8791 0200 | 00c3 498b | 8720 0400 | 004d 33d2 | 4d89 9720 | 0400 004d 
  0x0000022c51d12f5c: 33d2 4d89 | 9728 0400 | 0048 8bf0 | 488d 8424 | f800 0000 | 488b 3848 | 85ff 0f84 | 0f00 0000 
  0x0000022c51d12f7c: 488b 5808 | f048 0fb1 | 3b0f 8565 | 0200 0048 | 8bc6 e990 

  0x0000022c51d12f90: ;   {metadata({method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d12f90: 0200 0049 | ba00 05db | 652c 0200 | 004c 8954 | 2408 48c7 | 0424 ffff 

  0x0000022c51d12fa8: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000022c51d12fa8: ffff e8d1 

  0x0000022c51d12fac: ; ImmutableOopMap {rdx=Oop rcx=Oop [104]=Oop [112]=Oop [288]=Oop }
                      ;*synchronization entry
                      ; - sun.awt.image.ImageRepresentation::setPixels@-1 (line 546)
  0x0000022c51d12fac: 0046 07e9 | e4e3 ffff 

  0x0000022c51d12fb4: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000022c51d12fb4: e867 d43c 

  0x0000022c51d12fb8: ; ImmutableOopMap {rbx=Oop [104]=Oop [112]=Oop [288]=Oop }
                      ;*invokevirtual checkSecurity {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@17 (line 550)
  0x0000022c51d12fb8: 0748 8954 | 2408 4889 

  0x0000022c51d12fc0: ;   {runtime_call monitorenter_nofpu Runtime1 stub}
  0x0000022c51d12fc0: 3424 e839 

  0x0000022c51d12fc4: ; ImmutableOopMap {rdx=Oop [104]=Oop [112]=Oop [256]=Oop [288]=Oop }
                      ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@25 (line 554)
  0x0000022c51d12fc4: 0846 07e9 | 00e5 ffff | 8b72 5448 | 83fe 000f | 8480 e5ff | ff48 8934 

  0x0000022c51d12fdc: ;   {runtime_call g1_pre_barrier_slow}
  0x0000022c51d12fdc: 24e8 9efa | 4507 e972 | e5ff ff48 | 83f9 000f | 8483 e5ff | ff48 8914 

  0x0000022c51d12ff4: ;   {runtime_call g1_post_barrier_slow}
  0x0000022c51d12ff4: 24e8 86f7 | 4507 e975 

  0x0000022c51d12ffc: ;   {runtime_call new_type_array Runtime1 stub}
  0x0000022c51d12ffc: e5ff ffe8 

  0x0000022c51d13000: ; ImmutableOopMap {r8=Oop [104]=Oop [112]=Oop [256]=Oop [288]=Oop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@51 (line 562)
  0x0000022c51d13000: fcc4 3c07 | e945 e6ff 

  0x0000022c51d13008: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000022c51d13008: ffe8 12d4 

  0x0000022c51d1300c: ; ImmutableOopMap {rcx=Oop [104]=Oop [112]=Oop [136]=Oop [256]=Oop [288]=Oop }
                      ;*invokevirtual getTransparency {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@176 (line 589)
                      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000022c51d1300c: 3c07 e80d 

  0x0000022c51d13010: ; ImmutableOopMap {rdx=Oop rsi=Oop [104]=Oop [112]=Oop [136]=Oop [256]=Oop [288]=Oop }
                      ;*invokevirtual getTransparency {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@187 (line 590)
  0x0000022c51d13010: d43c 0748 

  0x0000022c51d13014: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x0000022c51d13014: 8934 24e8 

  0x0000022c51d13018: ; ImmutableOopMap {rdx=Oop [104]=Oop [112]=Oop [136]=Oop [256]=Oop [288]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@209 (line 595)
  0x0000022c51d13018: 84c5 4507 

  0x0000022c51d1301c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000022c51d1301c: e8ff d33c 

  0x0000022c51d13020: ; ImmutableOopMap {rdx=Oop rsi=Oop [104]=Oop [112]=Oop [136]=Oop [144]=Oop [256]=Oop [288]=Oop }
                      ;*invokevirtual getDataStorage {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@216 (line 597)
                      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000022c51d13020: 07e8 fad3 

  0x0000022c51d13024: ; ImmutableOopMap {rax=Oop rdx=Oop rsi=Oop [104]=Oop [112]=Oop [136]=Oop [144]=Oop [152]=Oop [256]=Oop [288]=Oop }
                      ;*invokevirtual equals {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@227 (line 598)
                      ;   {static_call}
  0x0000022c51d13024: 3c07 90e8 

  0x0000022c51d13028: ; ImmutableOopMap {[104]=Oop [144]=Oop [152]=Oop [256]=Oop [288]=Oop }
                      ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@267 (line 602)
  0x0000022c51d13028: 54f0 3a07 | e9ab efff 

  0x0000022c51d13030: ;   {metadata({method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d13030: ff49 ba00 | 05db 652c | 0200 004c | 8954 2408 | 48c7 0424 | 1f01 0000 

  0x0000022c51d13048: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000022c51d13048: e833 0046 

  0x0000022c51d1304c: ; ImmutableOopMap {[104]=Oop [144]=Oop [152]=Oop [256]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.ImageRepresentation::setPixels@287 (line 601)
  0x0000022c51d1304c: 07e9 daef 

  0x0000022c51d13050: ;   {metadata({method} {0x0000022c65c940e0} 'markDirty' '()V' in 'sun/awt/image/SunWritableRaster')}
  0x0000022c51d13050: ffff 49ba | d840 c965 | 2c02 0000 | 4c89 5424 | 0848 c704 | 24ff ffff 

  0x0000022c51d13068: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000022c51d13068: ffe8 1200 

  0x0000022c51d1306c: ; ImmutableOopMap {rsi=Oop [104]=Oop [144]=Oop [256]=Oop }
                      ;*synchronization entry
                      ; - sun.awt.image.SunWritableRaster::markDirty@-1 (line 137)
                      ; - sun.awt.image.ImageRepresentation::setPixels@292 (line 607)
  0x0000022c51d1306c: 4607 e96a 

  0x0000022c51d13070: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000022c51d13070: f0ff ffe8 

  0x0000022c51d13074: ; ImmutableOopMap {r8=Oop [104]=Oop [256]=Oop }
                      ;*invokevirtual markDirty {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.SunWritableRaster::markDirty@4 (line 137)
                      ; - sun.awt.image.ImageRepresentation::setPixels@292 (line 607)
  0x0000022c51d13074: a8d3 3c07 

  0x0000022c51d13078: ;   {metadata({method} {0x0000022c659f6aa0} 'markDirty' '()V' in 'sun/java2d/StateTrackableDelegate')}
  0x0000022c51d13078: 49ba 986a | 9f65 2c02 | 0000 4c89 | 5424 0848 | c704 24ff 

  0x0000022c51d1308c: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000022c51d1308c: ffff ffe8 

  0x0000022c51d13090: ; ImmutableOopMap {r8=Oop [104]=Oop [256]=Oop }
                      ;*synchronization entry
                      ; - sun.java2d.StateTrackableDelegate::markDirty@-1 (line 254)
                      ; - sun.awt.image.SunWritableRaster::markDirty@4 (line 137)
                      ; - sun.awt.image.ImageRepresentation::setPixels@292 (line 607)
  0x0000022c51d13090: ecff 4507 | e988 f0ff | ff41 8b50 | 1448 83fa | 000f 8488 | f0ff ff48 

  0x0000022c51d130a8: ;   {runtime_call g1_pre_barrier_slow}
  0x0000022c51d130a8: 8914 24e8 | d0f9 4507 | e97a f0ff 

  0x0000022c51d130b4: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000022c51d130b4: ffe8 66d3 

  0x0000022c51d130b8: ; ImmutableOopMap {rsi=Oop rcx=Oop [104]=Oop [112]=Oop [136]=Oop [144]=Oop [256]=Oop [288]=Oop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@336 (line 613)
                      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000022c51d130b8: 3c07 e861 

  0x0000022c51d130bc: ; ImmutableOopMap {rsi=Oop rcx=Oop [104]=Oop [112]=Oop [136]=Oop [144]=Oop [256]=Oop [288]=Oop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@336 (line 613)
  0x0000022c51d130bc: d33c 0748 | 8904 2448 | 8974 2408 

  0x0000022c51d130c8: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000022c51d130c8: e853 dc3c 

  0x0000022c51d130cc: ; ImmutableOopMap {rsi=Oop rcx=Oop [104]=Oop [112]=Oop [136]=Oop [144]=Oop [256]=Oop [288]=Oop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@336 (line 613)
  0x0000022c51d130cc: 0748 890c | 2448 895c 

  0x0000022c51d130d4: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000022c51d130d4: 2408 e845 

  0x0000022c51d130d8: ; ImmutableOopMap {rbx=Oop [104]=Oop [112]=Oop [136]=Oop [144]=Oop [256]=Oop [288]=Oop }
                      ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@340 (line 613)
                      ;   {metadata({method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d130d8: dc3c 0749 | ba00 05db | 652c 0200 | 004c 8954 | 2408 48c7 | 0424 5801 

  0x0000022c51d130f0: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000022c51d130f0: 0000 e889 

  0x0000022c51d130f4: ; ImmutableOopMap {rbx=Oop [104]=Oop [112]=Oop [136]=Oop [144]=Oop [256]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.ImageRepresentation::setPixels@344 (line 612)
  0x0000022c51d130f4: ff45 07e9 | d0f1 ffff 

  0x0000022c51d130fc: ;   {metadata({method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d130fc: 49ba 0005 | db65 2c02 | 0000 4c89 | 5424 0848 | c704 2471 

  0x0000022c51d13110: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000022c51d13110: 0100 00e8 

  0x0000022c51d13114: ; ImmutableOopMap {[104]=Oop [112]=Oop [136]=Oop [144]=Oop [256]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.ImageRepresentation::setPixels@369 (line 610)
  0x0000022c51d13114: 68ff 4507 | e933 f3ff 

  0x0000022c51d1311c: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000022c51d1311c: ffe8 fed2 

  0x0000022c51d13120: ; ImmutableOopMap {rax=Oop rcx=Oop [104]=Oop [112]=Oop [200]=Oop [256]=Oop [288]=Oop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@425 (line 627)
                      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000022c51d13120: 3c07 e8f9 

  0x0000022c51d13124: ; ImmutableOopMap {rax=Oop rcx=Oop [104]=Oop [112]=Oop [200]=Oop [256]=Oop [288]=Oop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@425 (line 627)
  0x0000022c51d13124: d23c 0748 | 891c 2448 | 8944 2408 

  0x0000022c51d13130: ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x0000022c51d13130: e8eb db3c 

  0x0000022c51d13134: ; ImmutableOopMap {rax=Oop rcx=Oop [104]=Oop [112]=Oop [200]=Oop [256]=Oop [288]=Oop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@425 (line 627)
                      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000022c51d13134: 07e8 e6d2 

  0x0000022c51d13138: ; ImmutableOopMap {rdx=Oop rsi=Oop [104]=Oop [112]=Oop [200]=Oop [256]=Oop [288]=Oop }
                      ;*invokevirtual getDataElements {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@439 (line 628)
                      ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000022c51d13138: 3c07 e8e1 

  0x0000022c51d1313c: ; ImmutableOopMap {rax=Oop rdx=Oop rsi=Oop [104]=Oop [112]=Oop [256]=Oop [288]=Oop }
                      ;*invokevirtual setDataElements {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@454 (line 629)
                      ;   {metadata({method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d1313c: d23c 0749 | ba00 05db | 652c 0200 | 004c 8954 | 2408 48c7 | 0424 cc01 

  0x0000022c51d13154: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000022c51d13154: 0000 e825 

  0x0000022c51d13158: ; ImmutableOopMap {[104]=Oop [112]=Oop [224]=Oop [256]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.ImageRepresentation::setPixels@460 (line 626)
  0x0000022c51d13158: ff45 07e9 | 7df6 ffff 

  0x0000022c51d13160: ;   {metadata({method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d13160: 49ba 0005 | db65 2c02 | 0000 4c89 | 5424 0848 | c704 24d9 

  0x0000022c51d13174: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000022c51d13174: 0100 00e8 

  0x0000022c51d13178: ; ImmutableOopMap {rdi=Oop [104]=Oop [112]=Oop [256]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.ImageRepresentation::setPixels@473 (line 624)
  0x0000022c51d13178: 04ff 4507 | e930 f7ff | ff48 8934 

  0x0000022c51d13184: ;   {runtime_call throw_class_cast_exception Runtime1 stub}
  0x0000022c51d13184: 24e8 16c4 

  0x0000022c51d13188: ; ImmutableOopMap {rdx=Oop [104]=Oop [136]=Oop [256]=Oop [288]=Oop }
                      ;*checkcast {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@92 (line 574)
  0x0000022c51d13188: 4507 0f1f 

  0x0000022c51d1318c: ;   {static_call}
  0x0000022c51d1318c: 4400 00e8 

  0x0000022c51d13190: ; ImmutableOopMap {[104]=Oop [136]=Oop [232]=Oop [256]=Oop [288]=Oop }
                      ;*invokestatic arraycopy {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@143 (line 583)
  0x0000022c51d13190: ecee 3a07 | e9cf f9ff 

  0x0000022c51d13198: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000022c51d13198: ffe8 82d2 

  0x0000022c51d1319c: ; ImmutableOopMap {rbx=Oop [104]=Oop [136]=Oop [232]=Oop [256]=Oop [288]=Oop }
                      ;*invokevirtual setDataElements {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@155 (line 584)
                      ;   {metadata({method} {0x0000022c65db0508} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)V' in 'sun/awt/image/ImageRepresentation')}
  0x0000022c51d1319c: 3c07 49ba | 0005 db65 | 2c02 0000 | 4c89 5424 | 0848 c704 | 24a8 0000 

  0x0000022c51d131b4: ;   {runtime_call counter_overflow Runtime1 stub}
  0x0000022c51d131b4: 00e8 c6fe 

  0x0000022c51d131b8: ; ImmutableOopMap {[104]=Oop [136]=Oop [232]=Oop [256]=Oop [288]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.ImageRepresentation::setPixels@168 (line 582)
  0x0000022c51d131b8: 4507 e9c9 

  0x0000022c51d131bc: ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x0000022c51d131bc: faff ffe8 

  0x0000022c51d131c0: ; ImmutableOopMap {rbx=Oop rax=Oop [104]=Oop [232]=Oop [256]=Oop [288]=Oop }
                      ;*invokevirtual setDataElements {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageRepresentation::setPixels@117 (line 578)
  0x0000022c51d131c0: 5cd2 3c07 | 488d 8424 | f800 0000 | 4889 0424 

  0x0000022c51d131d0: ;   {runtime_call monitorexit_nofpu Runtime1 stub}
  0x0000022c51d131d0: e82b e145 | 07e9 3ffc 

  0x0000022c51d131d8: ;   {internal_word}
  0x0000022c51d131d8: ffff 49ba | 3c2f d151 | 2c02 0000 | 4d89 9790 

  0x0000022c51d131e8: ;   {runtime_call SafepointBlob}
  0x0000022c51d131e8: 0300 00e9 | 9047 3b07 | 488d 8424 | f800 0000 | 4889 0424 

  0x0000022c51d131fc: ;   {runtime_call monitorexit_nofpu Runtime1 stub}
  0x0000022c51d131fc: e8ff e045 | 07e9 85fd | ffff 498b | 8720 0400 | 0049 c787 | 2004 0000 | 0000 0000 | 49c7 8728 
  0x0000022c51d1321c: 0400 0000 | 0000 0048 | 81c4 1001 

  0x0000022c51d13228: ;   {runtime_call unwind_exception Runtime1 stub}
  0x0000022c51d13228: 0000 5de9 | d0e0 3c07 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 | f4f4 f4f4 
[Stub Code]
  0x0000022c51d13240: ;   {no_reloc}
  0x0000022c51d13240: 0f1f 4400 

  0x0000022c51d13244: ;   {static_stub}
  0x0000022c51d13244: 0048 bb00 | 0000 0000 

  0x0000022c51d1324c: ;   {runtime_call}
  0x0000022c51d1324c: 0000 00e9 | fbff ffff 

  0x0000022c51d13254: ;   {static_stub}
  0x0000022c51d13254: 9048 bba8 | f4da 652c 

  0x0000022c51d1325c: ;   {runtime_call I2C/C2I adapters}
  0x0000022c51d1325c: 0200 00e9 | f5db 3a07 

  0x0000022c51d13264: ;   {static_stub}
  0x0000022c51d13264: 9048 bb00 | 0000 0000 

  0x0000022c51d1326c: ;   {runtime_call}
  0x0000022c51d1326c: 0000 00e9 | fbff ffff 

  0x0000022c51d13274: ;   {static_stub}
  0x0000022c51d13274: 9048 bb00 | 0000 0000 

  0x0000022c51d1327c: ;   {runtime_call}
  0x0000022c51d1327c: 0000 00e9 | fbff ffff 

  0x0000022c51d13284: ;   {static_stub}
  0x0000022c51d13284: 9048 bb00 | 0000 0000 

  0x0000022c51d1328c: ;   {runtime_call}
  0x0000022c51d1328c: 0000 00e9 | fbff ffff 

  0x0000022c51d13294: ;   {static_stub}
  0x0000022c51d13294: 9048 bb00 | 0000 0000 

  0x0000022c51d1329c: ;   {runtime_call}
  0x0000022c51d1329c: 0000 00e9 | fbff ffff 

  0x0000022c51d132a4: ;   {static_stub}
  0x0000022c51d132a4: 9048 bb00 | 0000 0000 

  0x0000022c51d132ac: ;   {runtime_call}
  0x0000022c51d132ac: 0000 00e9 | fbff ffff 

  0x0000022c51d132b4: ;   {static_stub}
  0x0000022c51d132b4: 9048 bb00 | 0000 0000 

  0x0000022c51d132bc: ;   {runtime_call}
  0x0000022c51d132bc: 0000 00e9 | fbff ffff 

  0x0000022c51d132c4: ;   {static_stub}
  0x0000022c51d132c4: 9048 bb00 | 0000 0000 

  0x0000022c51d132cc: ;   {runtime_call}
  0x0000022c51d132cc: 0000 00e9 | fbff ffff 

  0x0000022c51d132d4: ;   {static_stub}
  0x0000022c51d132d4: 9048 bb00 | 0000 0000 

  0x0000022c51d132dc: ;   {runtime_call}
  0x0000022c51d132dc: 0000 00e9 | fbff ffff 

  0x0000022c51d132e4: ;   {static_stub}
  0x0000022c51d132e4: 9048 bb00 | 0000 0000 

  0x0000022c51d132ec: ;   {runtime_call}
  0x0000022c51d132ec: 0000 00e9 | fbff ffff 

  0x0000022c51d132f4: ;   {static_stub}
  0x0000022c51d132f4: 9048 bb00 | 0000 0000 

  0x0000022c51d132fc: ;   {runtime_call}
  0x0000022c51d132fc: 0000 00e9 | fbff ffff 

  0x0000022c51d13304: ;   {static_stub}
  0x0000022c51d13304: 9048 bb00 | 0000 0000 

  0x0000022c51d1330c: ;   {runtime_call}
  0x0000022c51d1330c: 0000 00e9 | fbff ffff 

  0x0000022c51d13314: ;   {static_stub}
  0x0000022c51d13314: 9048 bb00 | 0000 0000 

  0x0000022c51d1331c: ;   {runtime_call}
  0x0000022c51d1331c: 0000 00e9 | fbff ffff 

  0x0000022c51d13324: ;   {static_stub}
  0x0000022c51d13324: 9048 bb00 | 0000 0000 

  0x0000022c51d1332c: ;   {runtime_call}
  0x0000022c51d1332c: 0000 00e9 | fbff ffff 

  0x0000022c51d13334: ;   {static_stub}
  0x0000022c51d13334: 9048 bb00 | 0000 0000 

  0x0000022c51d1333c: ;   {runtime_call}
  0x0000022c51d1333c: 0000 00e9 | fbff ffff 

  0x0000022c51d13344: ;   {static_stub}
  0x0000022c51d13344: 9048 bb00 | 0000 0000 

  0x0000022c51d1334c: ;   {runtime_call}
  0x0000022c51d1334c: 0000 00e9 | fbff ffff 

  0x0000022c51d13354: ;   {static_stub}
  0x0000022c51d13354: 9048 bb00 | 0000 0000 

  0x0000022c51d1335c: ;   {runtime_call}
  0x0000022c51d1335c: 0000 00e9 | fbff ffff 

  0x0000022c51d13364: ;   {static_stub}
  0x0000022c51d13364: 9048 bb00 | 0000 0000 

  0x0000022c51d1336c: ;   {runtime_call}
  0x0000022c51d1336c: 0000 00e9 | fbff ffff 
[Exception Handler]
  0x0000022c51d13374: ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x0000022c51d13374: e887 b23c 

  0x0000022c51d13378: ;   {external_word}
  0x0000022c51d13378: 0748 b938 | 4909 2bfc | 7f00 0048 

  0x0000022c51d13384: ;   {runtime_call}
  0x0000022c51d13384: 83e4 f049 | ba00 fed4 | 2afc 7f00 | 0041 ffd2 

  0x0000022c51d13394: ;   {section_word}
  0x0000022c51d13394: f449 ba95 | 33d1 512c | 0200 0041 

  0x0000022c51d133a0: ;   {runtime_call DeoptimizationBlob}
  0x0000022c51d133a0: 52e9 fa3e | 3b07 f4f4 
[/MachCode]


Compiled method (c2)    4879 1208       4       sun.awt.image.ImageDecoder::setPixels (58 bytes)
 total in heap  [0x0000022c5966f190,0x0000022c59671288] = 8440
 relocation     [0x0000022c5966f2f0,0x0000022c5966f380] = 144
 main code      [0x0000022c5966f380,0x0000022c59670660] = 4832
 stub code      [0x0000022c59670660,0x0000022c596706a8] = 72
 metadata       [0x0000022c596706a8,0x0000022c59670708] = 96
 scopes data    [0x0000022c59670708,0x0000022c59670f88] = 2176
 scopes pcs     [0x0000022c59670f88,0x0000022c596711e8] = 608
 dependencies   [0x0000022c596711e8,0x0000022c59671200] = 24
 handler table  [0x0000022c59671200,0x0000022c59671248] = 72
 nul chk table  [0x0000022c59671248,0x0000022c59671288] = 64

[Constant Pool (empty)]

[MachCode]
[Entry Point]
  # {method} {0x0000022c65c85970} 'setPixels' '(IIIILjava/awt/image/ColorModel;[III)I' in 'sun/awt/image/ImageDecoder'
  # this:     rdx:rdx   = 'sun/awt/image/ImageDecoder'
  # parm0:    r8        = int
  # parm1:    r9        = int
  # parm2:    rdi       = int
  # parm3:    rsi       = int
  # parm4:    rcx:rcx   = 'java/awt/image/ColorModel'
  # parm5:    [sp+0xd0]   = '[I'  (sp of caller)
  # parm6:    [sp+0xd8]   = int
  # parm7:    [sp+0xe0]   = int
  0x0000022c5966f380: 448b 5208 | 49bb 0000 | 0000 0800 | 0000 4d03 | d349 3bc2 

  0x0000022c5966f394: ;   {runtime_call ic_miss_stub}
  0x0000022c5966f394: 0f85 e623 | a5ff 6690 | 0f1f 4000 
[Verified Entry Point]
  0x0000022c5966f3a0: 8984 2400 | 90ff ff55 | 4881 ecc0 | 0000 008b | 6a10 8974 | 2454 488b | f585 ed48 | 894c 2458 
  0x0000022c5966f3c0: 897c 2450 | 4489 4c24 | 4c44 8984 | 24dc 0000 | 0048 8954 | 2470 0f84 | 580a 0000 | 488d 9c24 
  0x0000022c5966f3e0: b000 0000 | 488b 06a8 | 0275 2348 | 83c8 0148 | 8903 f048 | 0fb1 1e0f | 843d 0000 | 0048 2bc4 
  0x0000022c5966f400: 4825 07f0 | ffff 4889 | 03e9 2c00 | 0000 4c8b | d848 33c0 | f04d 0fb1 | 7b3e 48c7 | 0303 0000 
  0x0000022c5966f420: 000f 8413 | 0000 004c | 3bf8 0f85 | 0a00 0000 | 49ff 8386 | 0000 0048 | 33c0 0f85 | 280a 0000 
  0x0000022c5966f440: 448b 5d14 | 4d8b d34c | 8b5c 2470 | 4d3b d30f | 8463 0900 | 004c 8b54 | 2470 458b | 5a10 498b 
  0x0000022c5966f460: fb48 8d84 | 24b0 0000 | 0048 8138 | 0000 0000 | 0f84 7c00 | 0000 4c8b | 1641 f6c2 | 0274 6b49 
  0x0000022c5966f480: 81ba 8600 | 0000 0000 | 0000 7409 | 49ff 8a86 | 0000 00eb | 5149 8b82 | 9600 0000 | 490b 828e 
  0x0000022c5966f4a0: 0000 0075 | 0a49 c742 | 3e00 0000 | 00eb 4349 | 81ba 9e00 | 0000 0000 | 0000 7425 | 4833 c049 
  0x0000022c5966f4c0: c742 3e00 | 0000 00f0 | 8304 2400 | 4981 ba9e | 0000 0000 | 0000 0075 | 0df0 4d0f | b17a 3e75 
  0x0000022c5966f4e0: 0583 c801 | eb0c a800 | eb08 4c8b | 10f0 4c0f | b116 4489 | 5c24 480f | 8599 0900 | 0044 8b54 
  0x0000022c5966f500: 2448 4585 | d20f 8439 | 0900 0048 | 8d9c 24b0 | 0000 0048 | 8b07 a802 | 7523 4883 | c801 4889 
  0x0000022c5966f520: 03f0 480f | b11f 0f84 | 3d00 0000 | 482b c448 | 2507 f0ff | ff48 8903 | e92c 0000 | 004c 8bd8 
  0x0000022c5966f540: 4833 c0f0 | 4d0f b17b | 3e48 c703 | 0300 0000 | 0f84 1300 | 0000 4c3b | f80f 850a | 0000 0049 
  0x0000022c5966f560: ff83 8600 | 0000 4833 | c00f 8547 | 0900 004c | 8b54 2470 | 450f b652 | 0c45 85d2 | 4c8b 5c24 
  0x0000022c5966f580: 7041 8b73 | 1c0f 851d | 0a00 0085 | f60f 8426 

  0x0000022c5966f590: ;   {no_reloc}
  0x0000022c5966f590: 0500 000f | b66e 0c85 | ed0f 840d | 0b00 0048 | 8d84 24b0 | 0000 0048 | 8138 0000 | 0000 0f84 
  0x0000022c5966f5b0: 7c00 0000 | 4c8b 1741 | f6c2 0274 | 6b49 81ba | 8600 0000 | 0000 0000 | 7409 49ff | 8a86 0000 
  0x0000022c5966f5d0: 00eb 5149 | 8b82 9600 | 0000 490b | 828e 0000 | 0075 0a49 | c742 3e00 | 0000 00eb | 4349 81ba 
  0x0000022c5966f5f0: 9e00 0000 | 0000 0000 | 7425 4833 | c049 c742 | 3e00 0000 | 00f0 8304 | 2400 4981 | ba9e 0000 
  0x0000022c5966f610: 0000 0000 | 0075 0df0 | 4d0f b17a | 3e75 0583 | c801 eb0c | a800 eb08 | 4c8b 10f0 | 4c0f b117 
  0x0000022c5966f630: 0f85 1209 | 0000 4c8b | f633 f633 | ff45 8b5e | 1445 8b43 | 0849 8bd3 

  0x0000022c5966f648: ;   {metadata('sun/awt/image/ImageRepresentation')}
  0x0000022c5966f648: 4181 f898 | 520a 010f | 8418 0200 

  0x0000022c5966f654: ;   {metadata('java/awt/image/ReplicateScaleFilter')}
  0x0000022c5966f654: 0041 81f8 | 68c5 0f01 | 0f85 120a | 0000 488b | da44 8b53 | 2044 8b5b | 248b ac24 | dc00 0000 
  0x0000022c5966f674: d1e5 0faf | 6b18 8b4c | 244c d1e1 | 448b 4310 | 6641 0f6e | d28b 4314 | 6641 0f6e | cb0f af4b 
  0x0000022c5966f694: 1c45 8bd0 | 4103 e844 | 8b4b 2844 | 8bd8 41d1 | e241 d1e3 | 03c8 83c5 | ff66 410f | 7ed0 458b 
  0x0000022c5966f6b4: 400c 660f | 7eca 85d2 | 0f84 c90a | 0000 4585 | d20f 8431 | 0900 0083 | c1ff 4585 | db0f 8431 
  0x0000022c5966f6d4: 0900 008b | c53d 0000 | 0080 7508 | 33d2 4183 | faff 7404 | 9941 f7fa | 448b e88b | c13d 0000 
  0x0000022c5966f6f4: 0080 7508 | 33d2 4183 | fbff 7404 | 9941 f7fb 

  0x0000022c5966f704: ; implicit exception: dispatches to 0x0000022c59670498
  0x0000022c5966f704: 458b 5108 

  0x0000022c5966f708: ;   {metadata({type array int})}
  0x0000022c5966f708: 4181 fab0 | 2500 000f | 851b 0d00 | 0041 3bc0 | 8bc8 0f83 | f408 0000 | 448b 4424 | 4c44 0344 
  0x0000022c5966f728: 2454 6641 | 0f7e d341 | 8b6c 8310 | 413b e80f | 8d8e 0100 | 0045 8bdd | 4183 c301 | 4585 db44 
  0x0000022c5966f748: 0f4c de41 | 8b51 0c41 | 83fb ff41 | baff ffff | ff45 0f4c | da45 8bd5 | 443b d20f | 8d5c 0c00 
  0x0000022c5966f768: 000f 28c1 | 4c8b ac24 | d000 0000 

  0x0000022c5966f774: ; implicit exception: dispatches to 0x0000022c596703cd
  0x0000022c5966f774: 418b 450c | 4489 9424 | 9800 0000 | 443b da4c | 8b54 2470 | 440f 4fda | 4c89 5424 | 2044 895c 
  0x0000022c5966f794: 2434 448b | 9424 dc00 | 0000 458b | da44 035c | 2450 8944 | 2438 4c63 | d244 8944 | 242c 8bc5 
  0x0000022c5966f7b4: 4c89 8c24 | 8800 0000 | 4889 9c24 | 9000 0000 | 897c 2448 | 4c89 7424 | 4089 7424 | 2844 895c 
  0x0000022c5966f7d4: 243c 8954 | 2430 4c89 | 5424 6089 | 8c24 ac00 | 0000 660f | 7ec3 448b | 530c 448b | d844 2b5c 
  0x0000022c5966f7f4: 244c 458b | c344 0faf | 8424 e000 | 0000 458b | d844 039c | 24d8 0000 | 0044 8b84 | 2498 0000 
  0x0000022c5966f814: 0045 3bc2 | 458b eb0f | 83b7 0900 | 0046 8b44 | 8310 458b | cd45 03c8 | 442b 8c24 | dc00 0000 
  0x0000022c5966f834: 443b 4424 | 3c0f 8d11 | 0a00 0044 | 3b4c 2438 | 0f83 7a0a | 0000 4c8b | 9c24 d000 | 0000 478b 
  0x0000022c5966f854: 448b 1041 | 8bd5 2b94 | 24dc 0000 | 008b bc24 | 9800 0000 | e9fd 0200 | 004c 8b94 | 24d0 0000 
  0x0000022c5966f874: 004c 8914 | 2489 7c24 | 288b ee44 | 8b9c 24d8 | 0000 0044 | 8b94 24e0 | 0000 004c | 8974 2420 
  0x0000022c5966f894: 448b 8424 | dc00 0000 | 448b 4c24 | 4c8b 7c24 | 508b 7424 | 5448 8b4c | 2458 4489 | 5c24 0844 
  0x0000022c5966f8b4: 8954 2410 

  0x0000022c5966f8b8: ;   {optimized virtual_call}
  0x0000022c5966f8b8: 6666 90e8 

  0x0000022c5966f8bc: ; ImmutableOopMap {[32]=Oop [88]=Oop [112]=Oop [208]=Oop }
                      ;*invokeinterface setPixels {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
  0x0000022c5966f8bc: 801a 6af8 | 8bf5 4c8b | 7424 208b | 7c24 284d | 8b97 8003 | 0000 4c8b | 5c24 7045 | 8b5b 1083 
  0x0000022c5966f8dc: ; ImmutableOopMap {r11=NarrowOop r14=Oop [88]=Oop [112]=Oop [208]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.ImageDecoder::setPixels@52 (line 139)
                      ;   {poll}
  0x0000022c5966f8dc: c701 4185 | 024d 8bc3 | 4585 db0f | 8467 0500 | 0048 8d9c | 24b0 0000 | 0049 8b00 | a802 7523 
  0x0000022c5966f8fc: 4883 c801 | 4889 03f0 | 490f b118 | 0f84 3d00 | 0000 482b | c448 2507 | f0ff ff48 | 8903 e92c 
  0x0000022c5966f91c: 0000 004c | 8bc8 4833 | c0f0 4d0f | b179 3e48 | c703 0300 | 0000 0f84 | 1300 0000 | 4c3b f80f 
  0x0000022c5966f93c: 850a 0000 | 0049 ff81 | 8600 0000 | 4833 c00f | 8591 0500 | 004c 8b54 | 2470 450f | b652 0c45 
  0x0000022c5966f95c: 85d2 418b | 5e10 0f85 | 6006 0000 | 85db 0f84 | ab00 0000 | 0fb6 6b0c | 85ed 0f84 | 4c07 0000 
  0x0000022c5966f97c: 488d 8424 | b000 0000 | 4881 3800 | 0000 000f | 847c 0000 | 004d 8b10 | 41f6 c202 | 746b 4981 
  0x0000022c5966f99c: ba86 0000 | 0000 0000 | 0074 0949 | ff8a 8600 | 0000 eb51 | 498b 8296 | 0000 0049 | 0b82 8e00 
  0x0000022c5966f9bc: 0000 750a | 49c7 423e | 0000 0000 | eb43 4981 | ba9e 0000 | 0000 0000 | 0074 2548 | 33c0 49c7 
  0x0000022c5966f9dc: 423e 0000 | 0000 f083 | 0424 0049 | 81ba 9e00 | 0000 0000 | 0000 750d | f04d 0fb1 | 7a3e 7505 
  0x0000022c5966f9fc: 83c8 01eb | 0ca8 00eb | 084c 8b10 | f04d 0fb1 | 100f 8575 | 0500 004c | 8bf3 e922 | fcff ff48 
  0x0000022c5966fa1c: 8d84 24b0 | 0000 0048 | 8138 0000 | 0000 0f84 | 7c00 0000 | 4d8b 1041 | f6c2 0274 | 6b49 81ba 
  0x0000022c5966fa3c: 8600 0000 | 0000 0000 | 7409 49ff | 8a86 0000 | 00eb 5149 | 8b82 9600 | 0000 490b | 828e 0000 
  0x0000022c5966fa5c: 0075 0a49 | c742 3e00 | 0000 00eb | 4349 81ba | 9e00 0000 | 0000 0000 | 7425 4833 | c049 c742 
  0x0000022c5966fa7c: 3e00 0000 | 00f0 8304 | 2400 4981 | ba9e 0000 | 0000 0000 | 0075 0df0 | 4d0f b17a | 3e75 0583 
  0x0000022c5966fa9c: c801 eb0c | a800 eb08 | 4c8b 10f0 | 4d0f b110 | 0f85 b604 | 0000 8bc7 | e999 0000 | 0048 8d84 
  0x0000022c5966fabc: 24b0 0000 | 0048 8138 | 0000 0000 | 0f84 7c00 | 0000 4c8b | 1741 f6c2 | 0274 6b49 | 81ba 8600 
  0x0000022c5966fadc: ;   {no_reloc}
  0x0000022c5966fadc: 0000 0000 | 0000 7409 | 49ff 8a86 | 0000 00eb | 5149 8b82 | 9600 0000 | 490b 828e | 0000 0075 
  0x0000022c5966fafc: 0a49 c742 | 3e00 0000 | 00eb 4349 | 81ba 9e00 | 0000 0000 | 0000 7425 | 4833 c049 | c742 3e00 
  0x0000022c5966fb1c: 0000 00f0 | 8304 2400 | 4981 ba9e | 0000 0000 | 0000 0075 | 0df0 4d0f | b17a 3e75 | 0583 c801 
  0x0000022c5966fb3c: eb0c a800 | eb08 4c8b | 10f0 4c0f | b117 0f85 | d803 0000 | 33c0 4881 | c4c0 0000 

  0x0000022c5966fb58: ;   {poll_return}
  0x0000022c5966fb58: 005d 493b | a778 0300 | 000f 87e3 | 0a00 00c3 | 8bf8 3b7c | 2430 0f83 | 6c05 0000 | 8bc7 83c0 
  0x0000022c5966fb78: 014c 8b9c | 2488 0000 | 0041 3bc2 | 4589 44bb | 104c 63df | 0f83 9605 | 0000 468b | 4c9b 1444 
  0x0000022c5966fb98: 3b4c 243c | 0f8d 1f01 | 0000 4403 | ca44 3b4c | 2438 0f83 | 4002 0000 | 3b44 2434 | 4c8b 9c24 
  0x0000022c5966fbb8: d000 0000 | 478b 448b | 107c a54d | 63da 4983 | c3ff 4c8b | 4c24 604d | 3bcb 418b | cb44 8b4c 
  0x0000022c5966fbd8: 2430 440f | 4fc9 458b | d941 83c3 | ff45 3bcb | 41b9 0000 | 0080 450f | 4cd9 413b | c30f 8daf 
  0x0000022c5966fbf8: 0000 0041 | 8bcb 2bc8 | 443b d80f | 4c4c 2428 | 81f9 d007 | 0000 bfd0 | 0700 000f | 47cf 03c8 
  0x0000022c5966fc18: 0f1f 8400 | 0000 0000 | 4c8b 8c24 | 8800 0000 | 4863 f045 | 8944 8110 | 448b 4cb3 | 148b f883 
  0x0000022c5966fc38: c701 443b | 4c24 3c7d | 7844 03ca | 443b 4c24 | 380f 839f | 0100 004c | 8b84 24d0 | 0000 0047 
  0x0000022c5966fc58: 8b44 8810 | 4c8b 8c24 | 8800 0000 | 4589 44b1 | 1444 8b4c | b318 83c0 | 0244 3b4c | 243c 7d49 
  0x0000022c5966fc78: 4403 ca44 | 3b4c 2438 | 0f83 6a01 | 0000 3bc1 | 4c8b 8424 | d000 0000 | 478b 4488 | 107c 894d 
  0x0000022c5966fc98: 8b8f 8003 

  0x0000022c5966fc9c: ; ImmutableOopMap {rbx=NarrowOop [32]=Oop [64]=Oop [88]=Oop [136]=Oop [144]=Oop [208]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.awt.image.ReplicateScaleFilter::setPixels@179 (line 247)
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
                      ;   {poll}
  0x0000022c5966fc9c: 0000 4185 | 0141 3bc3 | 0f8c 51ff | ffff 3b44 | 2430 0f8d | 7507 0000 | e9a9 0600 | 0044 8bd0 
  0x0000022c5966fcbc: 8bc7 418b | fa2b bc24 | 9800 0000 | 3b84 2498 | 0000 004c | 8b94 2490 | 0000 0041 | 8b6a 0c0f 
  0x0000022c5966fcdc: 8e76 0500 | 0045 8b5a | 1841 8bc3 | 83c7 0144 

  0x0000022c5966fcec: ;   {metadata('sun/awt/image/ImageRepresentation')}
  0x0000022c5966fcec: 8b55 0841 | 81fa 9852 | 0a01 0f85 | 2c06 0000 | 488b d54c | 8b94 2488 | 0000 0044 | 8b84 2498 
  0x0000022c5966fd0c: 0000 0044 | 8b8c 24ac | 0000 00be | 0100 0000 | 488b 4c24 | 584c 8914 | 2444 8944 | 2408 8944 
  0x0000022c5966fd2c: 2410 488b 

  0x0000022c5966fd30: ;   {optimized virtual_call}
  0x0000022c5966fd30: 6c24 20e8 

  0x0000022c5966fd34: ; ImmutableOopMap {rbp=Oop [32]=Oop [64]=Oop [88]=Oop [136]=Oop [144]=Oop [208]=Oop }
                      ;*invokeinterface setPixels {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.awt.image.ReplicateScaleFilter::setPixels@213 (line 251)
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
  0x0000022c5966fd34: 0816 6af8 | 4c8b 9424 | 9000 0000 | 458b 5220 | 458b ca4d | 8b9f 8003 | 0000 448b | 9424 ac00 
  0x0000022c5966fd54: 0000 4183 | c201 418b 

  0x0000022c5966fd5c: ; ImmutableOopMap {r9=NarrowOop rbp=Oop [32]=Oop [64]=Oop [88]=Oop [136]=Oop [144]=Oop [208]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.awt.image.ReplicateScaleFilter::setPixels@221 (line 244)
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
                      ;   {poll}
  0x0000022c5966fd5c: ca41 8503 

  0x0000022c5966fd60: ; implicit exception: dispatches to 0x0000022c59670568
  0x0000022c5966fd60: 458b 590c | 413b cb4c | 6394 24ac | 0000 000f | 835b 0500 | 0047 8b5c | 9114 443b | 5c24 2c41 
  0x0000022c5966fd80: 8bc3 7c17 | 4889 6c24 | 708b 7424 | 284c 8b74 | 2440 8b7c | 2448 e930 | fbff ff4c | 8b94 2490 
  0x0000022c5966fda0: 0000 0045 | 8b52 2489 | 8c24 ac00 | 0000 6641 | 0f6e c2e9 | 2efa ffff | 4180 7f40 | 008b 7d10 
  0x0000022c5966fdc0: 0f85 9203 | 0000 85ff | 4489 6514 | 0f84 83f6 | ffff 488b | d648 8b6c | 2470 4889 

  0x0000022c5966fddc: ;   {optimized virtual_call}
  0x0000022c5966fddc: 7424 40e8 

  0x0000022c5966fde0: ; ImmutableOopMap {rbp=Oop [64]=Oop [88]=Oop [112]=Oop [208]=Oop }
                      ;*invokevirtual startProduction {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.InputStreamImageSource::doneDecoding@21 (line 341)
                      ; - sun.awt.image.InputStreamImageSource::latchConsumers@2 (line 347)
                      ; - sun.awt.image.ImageDecoder::setPixels@5 (line 134)
  0x0000022c5966fde0: 9c1c a5ff | 488b 7424 | 40e9 67f6 | ffff 8bc7 | 8be8 448b | 5424 4844 | 8954 2434 | 4c8b 9424 
  0x0000022c5966fe00: 8800 0000 | 448b 9c24 | 9800 0000 | bae4 ffff | ff4c 8954 | 2478 4489 | 8c24 8800 | 0000 4489 
  0x0000022c5966fe20: 9c24 8c00 | 0000 4489 | ac24 9c00 

  0x0000022c5966fe2c: ;   {runtime_call UncommonTrapBlob}
  0x0000022c5966fe2c: 0000 90e8 

  0x0000022c5966fe30: ; ImmutableOopMap {[32]=Oop [64]=Oop [88]=Oop [120]=Oop [144]=Oop [208]=Oop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.awt.image.ReplicateScaleFilter::setPixels@174 (line 248)
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
  0x0000022c5966fe30: cc6e a5ff | baf6 ffff | ff48 8b6c 

  0x0000022c5966fe3c: ;   {runtime_call UncommonTrapBlob}
  0x0000022c5966fe3c: 2470 90e8 

  0x0000022c5966fe40: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual latchConsumers {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageDecoder::setPixels@5 (line 134)
  0x0000022c5966fe40: bc6e a5ff | baf6 ffff | ff48 8b6c 

  0x0000022c5966fe4c: ;   {runtime_call UncommonTrapBlob}
  0x0000022c5966fe4c: 2470 90e8 

  0x0000022c5966fe50: ; ImmutableOopMap {rbp=Oop [88]=Oop [208]=Oop }
                      ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageDecoder::nextConsumer@6 (line 61)
                      ; - sun.awt.image.ImageDecoder::setPixels@17 (line 137)
  0x0000022c5966fe50: ac6e a5ff | baf6 ffff | ff89 7c24 | 2c4c 8974 

  0x0000022c5966fe60: ;   {runtime_call UncommonTrapBlob}
  0x0000022c5966fe60: 2440 90e8 

  0x0000022c5966fe64: ; ImmutableOopMap {[64]=Oop [88]=Oop [112]=Oop [208]=Oop }
                      ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageDecoder::nextConsumer@6 (line 61)
                      ; - sun.awt.image.ImageDecoder::setPixels@17 (line 137)
  0x0000022c5966fe64: 986e a5ff | 488b d648 | 8974 2468 | 4889 7424 | 784c 8b54 | 2470 4c89 | 5424 204c | 8d84 24b0 
  0x0000022c5966fe84: ;   {runtime_call _complete_monitor_locking_Java}
  0x0000022c5966fe84: 0000 00e8 

  0x0000022c5966fe88: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [88]=Oop [104]=Oop [112]=Oop [120]=Oop [208]=Oop }
                      ;*synchronization entry
                      ; - sun.awt.image.InputStreamImageSource::doneDecoding@-1 (line 338)
                      ; - sun.awt.image.InputStreamImageSource::latchConsumers@2 (line 347)
                      ; - sun.awt.image.ImageDecoder::setPixels@5 (line 134)
  0x0000022c5966fe88: f475 b0ff | 488b 7424 | 68e9 aaf5 | ffff 488d | 9424 b000 | 0000 4d8b | c748 8bce | 49ba 401a 
  0x0000022c5966fea8: e82a fc7f | 0000 41ff | d2e9 47f6 | ffff 488b | d748 897c | 2460 4889 | 7c24 6848 | 8b6c 2470 
  0x0000022c5966fec8: 4c8d 8424 | b000 0000 

  0x0000022c5966fed0: ;   {runtime_call _complete_monitor_locking_Java}
  0x0000022c5966fed0: 6666 90e8 

  0x0000022c5966fed4: ; ImmutableOopMap {rbp=Oop [72]=NarrowOop [88]=Oop [96]=Oop [104]=Oop [112]=Oop [208]=Oop }
                      ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageDecoder::nextConsumer@6 (line 61)
                      ; - sun.awt.image.ImageDecoder::setPixels@17 (line 137)
  0x0000022c5966fed4: a875 b0ff | 488b 7c24 | 60e9 8df6 | ffff 4c89 | 7424 2889 | 7424 2089 | 7c24 2444 | 895c 2430 
  0x0000022c5966fef4: 4c89 4424 | 3849 8bd0 | 4c8d 8424 | b000 0000 

  0x0000022c5966ff04: ;   {runtime_call _complete_monitor_locking_Java}
  0x0000022c5966ff04: 6666 90e8 

  0x0000022c5966ff08: ; ImmutableOopMap {[40]=Oop [48]=NarrowOop [56]=Oop [88]=Oop [112]=Oop [208]=Oop }
                      ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageDecoder::nextConsumer@6 (line 61)
                      ; - sun.awt.image.ImageDecoder::setPixels@17 (line 137)
  0x0000022c5966ff08: 7475 b0ff | 8b74 2420 | 4c8b 7424 | 288b 7c24 | 2444 8b5c | 2430 4c8b | 4424 38e9 | 29fa ffff 
  0x0000022c5966ff28: 488d 9424 | b000 0000 | 4d8b c748 | 8bcf 49ba | 401a e82a | fc7f 0000 | 41ff d2e9 | 08fc ffff 
  0x0000022c5966ff48: 488d 9424 | b000 0000 | 4d8b c748 | 8bcf 49ba | 401a e82a | fc7f 0000 | 41ff d2e9 | cef6 ffff 
  0x0000022c5966ff68: 498b c84d | 8bc7 488d | 9424 b000 | 0000 49ba | 401a e82a | fc7f 0000 | 41ff d2e9 | 2afb ffff 
  0x0000022c5966ff88: 498b c84d | 8bc7 488d | 9424 b000 | 0000 49ba | 401a e82a | fc7f 0000 | 41ff d2e9 | 6bfa ffff 
  0x0000022c5966ffa8: 498b eb44 | 8b44 2448 | 458b d8ba | 45ff ffff | 4489 5424 | 4044 895c 

  0x0000022c5966ffc0: ;   {runtime_call UncommonTrapBlob}
  0x0000022c5966ffc0: 2444 90e8 

  0x0000022c5966ffc4: ; ImmutableOopMap {rbp=Oop [68]=NarrowOop [72]=NarrowOop [88]=Oop [208]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.ImageDecoder::nextConsumer@11 (line 62)
                      ; - sun.awt.image.ImageDecoder::setPixels@17 (line 137)
  0x0000022c5966ffc4: 386d a5ff | 448b 4c24 | 4c44 8b44 | 2450 ba45 | ffff ff44 | 894c 2420 | 4489 4424 | 2489 7c24 
  0x0000022c5966ffe4: 2c4c 8974 | 2440 4489 | 5424 4c44 | 895c 2450 

  0x0000022c5966fff4: ;   {runtime_call UncommonTrapBlob}
  0x0000022c5966fff4: 6666 90e8 

  0x0000022c5966fff8: ; ImmutableOopMap {[64]=Oop [80]=NarrowOop [88]=Oop [112]=Oop [208]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.ImageDecoder::nextConsumer@11 (line 62)
                      ; - sun.awt.image.ImageDecoder::setPixels@17 (line 137)
  0x0000022c5966fff8: 046d a5ff | ba86 ffff 

  0x0000022c59670000: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59670000: ff66 90e8 

  0x0000022c59670004: ; ImmutableOopMap {}
                      ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.awt.image.ReplicateScaleFilter::setPixels@39 (line 235)
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
  0x0000022c59670004: f86c a5ff | ba86 ffff 

  0x0000022c5967000c: ;   {runtime_call UncommonTrapBlob}
  0x0000022c5967000c: ff8b e9e8 

  0x0000022c59670010: ; ImmutableOopMap {}
                      ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.awt.image.ReplicateScaleFilter::setPixels@63 (line 236)
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
  0x0000022c59670010: ec6c a5ff | 448b 5424 | 4c44 8954 | 2420 448b | 5424 5444 | 8954 2428 | 448b 5c24 | 504c 8b54 
  0x0000022c59670030: 2458 488b | 6c24 70ba | e4ff ffff | 4489 5c24 | 244c 8954 | 2430 4c89 | 7424 3889 | 7c24 2c4c 
  0x0000022c59670050: 894c 2468 | 4889 5c24 | 7044 896c | 2478 f30f | 1194 2480 | 0000 0089 | 8424 8400 

  0x0000022c5967006c: ;   {runtime_call UncommonTrapBlob}
  0x0000022c5967006c: 0000 90e8 

  0x0000022c59670070: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [104]=Oop [112]=Oop [128]=NarrowOop [208]=Oop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.awt.image.ReplicateScaleFilter::setPixels@118 (line 244)
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
  0x0000022c59670070: 8c6c a5ff | 448b 5424 | 4c44 8954 | 2420 448b | 5424 5444 | 8b44 2450 | bac6 ffff | ff44 8954 
  0x0000022c59670090: 2428 4c89 | 7424 3889 | 7c24 2c44 | 895c 2440 | 4489 4424 

  0x0000022c596700a4: ;   {runtime_call UncommonTrapBlob}
  0x0000022c596700a4: 4c66 90e8 

  0x0000022c596700a8: ; ImmutableOopMap {[56]=Oop [64]=NarrowOop [88]=Oop [112]=Oop [208]=Oop }
                      ;*invokeinterface setPixels {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
  0x0000022c596700a8: 546c a5ff | 448b 5424 | 4845 8bda | ba45 ffff | ff89 7424 | 3444 895c 

  0x0000022c596700c0: ;   {runtime_call UncommonTrapBlob}
  0x0000022c596700c0: 2444 90e8 

  0x0000022c596700c4: ; ImmutableOopMap {[52]=NarrowOop [68]=NarrowOop [72]=NarrowOop [88]=Oop [112]=Oop [208]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.ImageDecoder::nextConsumer@42 (line 67)
                      ; - sun.awt.image.ImageDecoder::setPixels@17 (line 137)
  0x0000022c596700c4: 386c a5ff | ba45 ffff | ff89 7c24 | 3489 5c24 | 4044 895c 

  0x0000022c596700d8: ;   {runtime_call UncommonTrapBlob}
  0x0000022c596700d8: 2448 90e8 

  0x0000022c596700dc: ; ImmutableOopMap {[64]=NarrowOop [72]=NarrowOop [88]=Oop [112]=Oop [208]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.ImageDecoder::nextConsumer@42 (line 67)
                      ; - sun.awt.image.ImageDecoder::setPixels@17 (line 137)
  0x0000022c596700dc: 206c a5ff | 8bc7 8be8 | 4c8b 9424 | 8800 0000 | 4c89 5424 | 7844 8b5c | 2448 4c8b | 9424 9000 
  0x0000022c596700fc: 0000 bae4 | ffff ff44 | 895c 2434 | 4489 8424 | 8000 0000 | 4c89 9424 | 8800 0000 | 4489 ac24 
  0x0000022c5967011c: 9400 0000 

  0x0000022c59670120: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59670120: 6666 90e8 

  0x0000022c59670124: ; ImmutableOopMap {[32]=Oop [64]=Oop [88]=Oop [120]=Oop [136]=Oop [208]=Oop }
                      ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.awt.image.ReplicateScaleFilter::setPixels@175 (line 248)
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
  0x0000022c59670124: d86b a5ff | 8be8 448b | 5c24 484c | 8b94 2488 | 0000 00ba | e4ff ffff | 4489 5c24 | 344c 8954 
  0x0000022c59670144: 2470 895c | 2478 4489 | ac24 8c00 

  0x0000022c59670150: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59670150: 0000 90e8 

  0x0000022c59670154: ; ImmutableOopMap {[32]=Oop [64]=Oop [88]=Oop [112]=Oop [120]=NarrowOop [144]=Oop [208]=Oop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.awt.image.ReplicateScaleFilter::setPixels@151 (line 247)
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
  0x0000022c59670154: a86b a5ff | 448b 5514 | 4585 d20f | 8461 fcff | ff4d 8b5f | 2849 8bca | 4d85 db0f | 849f 0200 
  0x0000022c59670174: 004d 8b57 | 384b 894c | 1af8 4983 | c3f8 4d89 | 5f28 e93b | fcff ff44 | 8b54 244c | 4489 5424 
  0x0000022c59670194: 2044 8b54 | 2454 4489 | 5424 2844 | 8b5c 2450 | 4c8b 5424 | 5848 8b6c | 2470 ba45 | ffff ff44 
  0x0000022c596701b4: 895c 2424 | 4c89 5424 | 304c 8974 | 2438 897c | 242c f30f | 114c 2468 | 4889 5c24 

  0x0000022c596701d0: ;   {runtime_call UncommonTrapBlob}
  0x0000022c596701d0: 7066 90e8 

  0x0000022c596701d4: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [104]=NarrowOop [112]=Oop [208]=Oop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.awt.image.ReplicateScaleFilter::setPixels@11 (line 231)
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
  0x0000022c596701d4: 286b a5ff | 488b 6c24 | 2044 8b54 | 244c 4489 | 5424 2044 | 8b54 2454 | 4489 5424 | 284c 8b54 
  0x0000022c596701f4: 2458 4c89 | 5424 304c | 8b54 2440 | 4c89 5424 | 3844 8b54 | 2448 4489 | 5424 2c44 | 8b5c 2450 
  0x0000022c59670214: 4c8b 9424 | 8800 0000 | bae4 ffff | ff44 895c | 2424 4c89 | 5424 68f3 | 0f11 4424 | 7044 89ac 
  0x0000022c59670234: 2484 0000 | 0044 8984 | 2488 0000 | 0044 8984 | 248c 0000 

  0x0000022c59670248: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59670248: 0066 90e8 

  0x0000022c5967024c: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [104]=Oop [112]=NarrowOop [144]=Oop [208]=Oop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.awt.image.ReplicateScaleFilter::setPixels@151 (line 247)
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
  0x0000022c5967024c: b06a a5ff | 8b84 2498 | 0000 0048 | 8b6c 2420 | 448b 5424 | 5044 8954 | 2424 4c8b | 5424 584c 
  0x0000022c5967026c: 8954 2430 | 4c8b 5424 | 4044 8b5c | 244c 4c89 | 5424 3844 | 895c 2420 | 448b 5424 | 4844 8b5c 
  0x0000022c5967028c: 2454 4489 | 5424 2c44 | 895c 2428 | 4c8b 9424 | 8800 0000 | 448b 9c24 | 9800 0000 | ba45 ffff 
  0x0000022c596702ac: ff4c 8954 | 2468 8944 | 2474 4489 | 9c24 8800 

  0x0000022c596702bc: ;   {runtime_call UncommonTrapBlob}
  0x0000022c596702bc: 0000 90e8 

  0x0000022c596702c0: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [104]=Oop [144]=Oop [208]=Oop }
                      ;*if_icmple {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.awt.image.ReplicateScaleFilter::setPixels@186 (line 250)
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
  0x0000022c596702c0: 3c6a a5ff | 8bac 2498 | 0000 00e9 | 22fb ffff | 448b 5424 | 4c44 8954 | 2420 448b | 5424 5444 
  0x0000022c596702e0: 8954 2428 | 4c8b 5424 | 584c 8954 | 2430 4c8b | 5424 404c | 8954 2438 | 448b 5c24 | 5044 8b54 
  0x0000022c59670300: 2448 bae4 | ffff ff44 | 895c 2424 | 4489 5424 | 2c44 898c | 2480 0000 | 0089 8c24 | 8400 0000 
  0x0000022c59670320: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59670320: 6666 90e8 

  0x0000022c59670324: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [128]=NarrowOop [136]=Oop [144]=Oop [208]=Oop }
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.awt.image.ReplicateScaleFilter::setPixels@118 (line 244)
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
  0x0000022c59670324: d869 a5ff | 4c8b 5424 | 584c 8954 | 2438 448b | 5c24 4844 | 8b94 2498 | 0000 00ba | deff ffff 
  0x0000022c59670344: 4489 5c24 | 3489 7c24 | 7844 8954 | 247c 8984 | 24a8 0000 

  0x0000022c59670358: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59670358: 0066 90e8 

  0x0000022c5967035c: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [56]=Oop [64]=Oop [136]=Oop [144]=Oop [208]=Oop }
                      ;*invokeinterface setPixels {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.awt.image.ReplicateScaleFilter::setPixels@213 (line 251)
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
  0x0000022c5967035c: a069 a5ff | 8bc5 3b44 | 2430 0f83 | 76fd ffff | 8be8 83c5 | 014c 8b9c | 2488 0000 | 0041 3bea 
  0x0000022c5967037c: 4589 4483 | 104c 63d8 | 0f83 a0fd | ffff 468b | 4c9b 1444 | 3b4c 243c | 7d26 4403 | ca44 3b4c 
  0x0000022c5967039c: 2438 0f83 | 4efa ffff | 3b6c 2430 | 4c8b 9c24 | d000 0000 | 478b 448b | 107c a9e9 | 28fd ffff 
  0x0000022c596703bc: 8bf8 8bc5 | e9fc f8ff | ff4c 8bac | 24d0 0000 | 004c 8b5c | 2470 babe | ffff ff4c | 899c 24d0 
  0x0000022c596703dc: 0000 004c | 8974 2440 | 897c 242c | 4c89 6c24 | 604c 894c | 2470 4889 | 5c24 7844 | 8994 2480 
  0x0000022c596703fc: 0000 0089 | 8c24 8400 | 0000 4489 | 8424 8c00 

  0x0000022c5967040c: ;   {runtime_call UncommonTrapBlob}
  0x0000022c5967040c: 0000 90e8 

  0x0000022c59670410: ; ImmutableOopMap {[64]=Oop [88]=Oop [96]=Oop [112]=Oop [120]=Oop [208]=Oop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.awt.image.ReplicateScaleFilter::setPixels@126 (line 244)
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
  0x0000022c59670410: ec68 a5ff | 498b d749 | bab0 1ba5 | 2afc 7f00 | 0041 ffd2 | e99d f9ff | ff8b e8e9 | b4fc ffff 
  0x0000022c59670430: 448b 5c24 | 4c44 895c | 2420 448b | 5c24 5044 | 895c 2424 | 448b 5c24 | 544c 8b54 | 2458 488b 
  0x0000022c59670450: 6c24 70ba | deff ffff | 4489 5c24 | 284c 8954 | 2430 4c89 | 7424 3889 | 7c24 2c48 | 895c 2468 
  0x0000022c59670470: 4489 6c24 | 7089 4424 | 7444 894c 

  0x0000022c5967047c: ;   {runtime_call UncommonTrapBlob}
  0x0000022c5967047c: 247c 90e8 

  0x0000022c59670480: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [104]=Oop [124]=NarrowOop [208]=Oop }
                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.awt.image.ReplicateScaleFilter::setPixels@74 (line 238)
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
  0x0000022c59670480: 7c68 a5ff | baf6 ffff | ff8b ac24 | dc00 0000 

  0x0000022c59670490: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59670490: 6666 90e8 

  0x0000022c59670494: ; ImmutableOopMap {[88]=Oop [208]=Oop }
                      ;*invokeinterface setPixels {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
  0x0000022c59670494: 6868 a5ff | 448b 5424 | 4c44 8954 | 2420 448b | 5424 5444 | 8954 2428 | 448b 5c24 | 504c 8b54 
  0x0000022c596704b4: 2458 488b | 6c24 70ba | f4ff ffff | 4489 5c24 | 244c 8954 | 2430 4c89 | 7424 3889 | 7c24 2c48 
  0x0000022c596704d4: 895c 2468 | 4489 6c24 | 7089 4424 

  0x0000022c596704e0: ;   {runtime_call UncommonTrapBlob}
  0x0000022c596704e0: 7466 90e8 

  0x0000022c596704e4: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [104]=Oop [208]=Oop }
                      ;*instanceof {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.awt.image.ReplicateScaleFilter::setPixels@74 (line 238)
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
  0x0000022c596704e4: 1868 a5ff | 448b 5c24 | 4c44 8b54 | 2450 4489 | 5c24 2044 | 8954 2424 | 448b 5c24 | 544c 8b54 
  0x0000022c59670504: 2458 488b | 6c24 70ba | 45ff ffff | 4489 5c24 | 284c 8954 | 2430 4c89 | 7424 3889 | 7c24 2c48 
  0x0000022c59670524: 895c 2468 | f30f 1154 

  0x0000022c5967052c: ;   {runtime_call UncommonTrapBlob}
  0x0000022c5967052c: 2470 90e8 

  0x0000022c59670530: ; ImmutableOopMap {rbp=Oop [48]=Oop [56]=Oop [104]=Oop [112]=NarrowOop [208]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.awt.image.ReplicateScaleFilter::setPixels@4 (line 231)
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
  0x0000022c59670530: cc67 a5ff | baf6 ffff | ff8b ac24 | 9800 0000 

  0x0000022c59670540: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59670540: 6666 90e8 

  0x0000022c59670544: ; ImmutableOopMap {}
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.awt.image.ReplicateScaleFilter::setPixels@151 (line 247)
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
  0x0000022c59670544: b867 a5ff | 448b 9c24 | 9800 0000 | baf6 ffff | ff8b ef44 | 895c 2424 | 8944 2428 

  0x0000022c59670560: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59670560: 6666 90e8 

  0x0000022c59670564: ; ImmutableOopMap {[88]=Oop [136]=Oop }
                      ;*invokeinterface setPixels {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.awt.image.ReplicateScaleFilter::setPixels@213 (line 251)
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
  0x0000022c59670564: 9867 a5ff | baf6 ffff | ff41 8bea 

  0x0000022c59670570: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59670570: 6666 90e8 

  0x0000022c59670574: ; ImmutableOopMap {}
                      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.awt.image.ReplicateScaleFilter::setPixels@118 (line 244)
                      ; - sun.awt.image.ImageDecoder::setPixels@44 (line 138)
  0x0000022c59670574: 8867 a5ff | 488b d848 | 8d84 24b0 | 0000 004c | 8b5c 2440 | 4881 3800 | 0000 000f | 847c 0000 
  0x0000022c59670594: 004d 8b13 | 41f6 c202 | 746b 4981 | ba86 0000 | 0000 0000 | 0074 0949 | ff8a 8600 | 0000 eb51 
  0x0000022c596705b4: 498b 8296 | 0000 0049 | 0b82 8e00 | 0000 750a | 49c7 423e | 0000 0000 | eb43 4981 | ba9e 0000 
  0x0000022c596705d4: 0000 0000 | 0074 2548 | 33c0 49c7 | 423e 0000 | 0000 f083 | 0424 0049 | 81ba 9e00 | 0000 0000 
  0x0000022c596705f4: 0000 750d | f04d 0fb1 | 7a3e 7505 | 83c8 01eb | 0ca8 00eb | 084c 8b10 | f04d 0fb1 | 1375 1a48 
  0x0000022c59670614: 8bd3 eb08 | 488b d0eb | 0348 8bd0 | 4881 c4c0 | 0000 005d 

  0x0000022c59670628: ;   {runtime_call _rethrow_Java}
  0x0000022c59670628: e9d3 37b0 | ff48 8d94 | 24b0 0000 | 004d 8bc7 | 498b cb49 | ba40 1ae8 | 2afc 7f00 | 0041 ffd2 
  0x0000022c59670648: ;   {internal_word}
  0x0000022c59670648: ebc9 49ba | 5afb 6659 | 2c02 0000 | 4d89 9790 

  0x0000022c59670658: ;   {runtime_call SafepointBlob}
  0x0000022c59670658: 0300 00e9 | 2073 a5ff 
[Stub Code]
  0x0000022c59670660: ;   {no_reloc}
  0x0000022c59670660: 48bb 0000 | 0000 0000 

  0x0000022c59670668: ;   {runtime_call}
  0x0000022c59670668: 0000 e9fb 

  0x0000022c5967066c: ;   {static_stub}
  0x0000022c5967066c: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000022c59670678: ;   {runtime_call}
  0x0000022c59670678: 00e9 fbff 

  0x0000022c5967067c: ;   {static_stub}
  0x0000022c5967067c: ffff 48bb | 0000 0000 | 0000 0000 

  0x0000022c59670688: ;   {runtime_call}
  0x0000022c59670688: e9fb ffff 

  0x0000022c5967068c: ;   {runtime_call ExceptionBlob}
  0x0000022c5967068c: ffe9 eeb7 | a6ff e800 | 0000 0048 | 832c 2405 

  0x0000022c5967069c: ;   {runtime_call DeoptimizationBlob}
  0x0000022c5967069c: e9ff 6ba5 | fff4 f4f4 | f4f4 f4f4 
[/MachCode]


Compiled method (c2)    5131 1199 % !   4       sun.awt.image.PNGImageDecoder::produceImage @ 960 (1917 bytes)
 total in heap  [0x0000022c59665210,0x0000022c5966b2c0] = 24752
 relocation     [0x0000022c59665370,0x0000022c59665590] = 544
 main code      [0x0000022c596655a0,0x0000022c59668ea0] = 14592
 stub code      [0x0000022c59668ea0,0x0000022c59669040] = 416
 metadata       [0x0000022c59669040,0x0000022c596691a8] = 360
 scopes data    [0x0000022c596691a8,0x0000022c5966a9a8] = 6144
 scopes pcs     [0x0000022c5966a9a8,0x0000022c5966af18] = 1392
 dependencies   [0x0000022c5966af18,0x0000022c5966af68] = 80
 handler table  [0x0000022c5966af68,0x0000022c5966b238] = 720
 nul chk table  [0x0000022c5966b238,0x0000022c5966b2c0] = 136

[Constant Pool (empty)]

[MachCode]
[Verified Entry Point]
  # {method} {0x0000022c65c82f78} 'produceImage' '()V' in 'sun/awt/image/PNGImageDecoder'
  0x0000022c596655a0: cc66 6666 | 0f1f 8400 | 0000 0000 | 6666 6690 | 8984 2400 | 90ff ff55 | 4881 ec10 | 0100 004c 
  0x0000022c596655c0: 8b92 0001 | 0000 4c89 | 5424 584c | 8b52 484c | 8954 2460 | 448b 92f0 | 0000 0044 | 8954 2440 
  0x0000022c596655e0: 448b 92c0 | 0000 0044 | 8954 2448 | 448b 92a8 | 0000 0044 | 8b9a e000 | 0000 4489 | 5424 5444 
  0x0000022c59665600: 8b92 9800 | 0000 4489 | 5c24 7c44 | 8b9a b800 | 0000 4489 | 5424 6844 | 8b52 7844 | 895c 244c 
  0x0000022c59665620: 448b 9ab0 | 0000 0044 | 8954 2470 | 448b 5258 | 4489 5c24 | 5044 8b9a | 9000 0000 | 4489 5424 
  0x0000022c59665640: 744d 8b97 | a802 0000 | 4489 5c24 | 6c44 8b5a | 688b 7a30 | 4d8b 1244 | 899c 2480 | 0000 0044 
  0x0000022c59665660: 8b9a a000 | 0000 488b | 9a18 0100 | 0048 8bb2 | 1001 0000 | 4c8b b208 | 0100 004c | 8b6a 4089 
  0x0000022c59665680: bc24 8400 | 0000 8b7a | 284c 8994 | 2490 0000 | 0044 895c | 2478 488b | ca49 ba80 | 9b7f 2afc 
  0x0000022c596656a0: 7f00 0041 | ffd2 4885 | db0f 84cf | 1700 0044 

  0x0000022c596656b0: ;   {metadata('sun/awt/image/PNGImageDecoder')}
  0x0000022c596656b0: 8b5b 0841 | 81fb e8b5 | 0a01 0f85 | 5025 0000 | 4c8b d34c | 8994 24a0 | 0000 0048 | 85f6 0f84 
  0x0000022c596656d0: ba17 0000 | 448b 5608 

  0x0000022c596656d8: ;   {metadata('java/io/BufferedInputStream')}
  0x0000022c596656d8: 4181 fa00 | cd00 000f | 852b 2500 | 004c 8bd6 | 4c89 9424 | a800 0000 | 4d85 f60f | 84a5 1700 
  0x0000022c596656f8: 0045 8b5e 

  0x0000022c596656fc: ;   {metadata({type array byte})}
  0x0000022c596656fc: 0841 81fb | f021 0000 | 0f85 0625 | 0000 4d8b | d64c 8954 | 2430 4c8b | 5424 584d | 85d2 0f84 
  0x0000022c5966571c: 8b17 0000 | 458b 5208 

  0x0000022c59665724: ;   {metadata({type array int})}
  0x0000022c59665724: 4181 fab0 | 2500 000f | 85df 2400 | 004c 8b54 | 2458 4c89 | 9424 b000 | 0000 4c8b | 5424 604d 
  0x0000022c59665744: 85d2 0f84 | 6f17 0000 | 458b 5208 

  0x0000022c59665750: ;   {metadata({type array byte})}
  0x0000022c59665750: 4181 faf0 | 2100 000f | 85b3 2400 | 004c 8b54 | 2460 4c89 | 9424 9800 | 0000 4d85 | ed0f 8458 
  0x0000022c59665770: 1700 0045 

  0x0000022c59665774: ;   {metadata({type array byte})}
  0x0000022c59665774: 8b5d 0841 | 81fb f021 | 0000 0f85 | 8c24 0000 | 4c89 ac24 | 8800 0000 | 4c8b 9424 | b000 0000 
  0x0000022c59665794: ; implicit exception: dispatches to 0x0000022c59667b94
  0x0000022c59665794: 458b 5a0c | 4c8b 9424 | a800 0000 | 4d85 d244 | 895c 2420 | 0f84 e623 | 0000 4c8b | 9424 a000 
  0x0000022c596657b4: 0000 4d85 | d20f 84d5 | 2300 004c | 8b94 2490 | 0000 0044 | 8954 2424 | e984 0200 | 004c 8b94 
  0x0000022c596657d4: 24a0 0000 | 0041 8b6a | 3c85 ed45 | 8b5a 640f | 8537 1d00 | 0049 8bcb | 448b 5c24 | 7844 035c 
  0x0000022c596657f4: 2468 4489 | 5c24 584c | 8b94 24b0 | 0000 0045 | 33db 418b | fd48 8b94 | 24a0 0000 | 0045 33c0 
  0x0000022c59665814: 448b 4c24 | 78be 0100 | 0000 4c89 | 1424 4489 | 5c24 0889 

  0x0000022c59665828: ;   {optimized virtual_call}
  0x0000022c59665828: 7c24 10e8 

  0x0000022c5966582c: ; ImmutableOopMap {[36]=NarrowOop [48]=Oop [136]=Oop [144]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop }
                      ;*invokevirtual setPixels {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.PNGImageDecoder::sendPixels@16 (line 464)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@1728 (line 425)
  0x0000022c5966582c: 709b 0000 | 85c0 4c8b | 9424 a000 | 0000 418b | 7228 7f05 | 41c6 420c | 0144 8b54 | 2458 443b 
  0x0000022c5966584c: d60f 8da1 | 0900 0044 | 8b5c 2468 | 440f af5c | 2440 4403 | 5c24 7444 | 895c 2474 | 4c8b 9424 
  0x0000022c5966586c: 8800 0000 | 4533 db4c | 8994 24b8 | 0000 0044 | 899c 24d4 | 0000 004c | 8b94 24a8 | 0000 0041 
  0x0000022c5966588c: 8b6a 2044 | 8b5d 0c41 | 8b6b 0c85 | ed0f 8421 | 1800 0041 | ba01 0000 | 0033 c0f0 | 440f b155 
  0x0000022c596658ac: 1041 0f94 | c345 0fb6 | db48 8bdd | 4585 db0f | 8436 1500 | 0041 807f | 4000 0f85 | b012 0000 
  0x0000022c596658cc: 4c8b 9424 | 9000 0000 | 4c8b db4d | 33d3 49c1 | ea14 4d85 | d244 8b4c | 2424 4489 | 4d0c 741a 
  0x0000022c596658ec: 48b9 0030 | 7260 2c02 | 0000 49c1 | eb09 4903 | cb80 3904 | 0f85 dc12 | 0000 4c8b | 9c24 a800 
  0x0000022c5966590c: 0000 458b | 4310 4c8b | 9424 a800 | 0000 458b | 5214 453b | d00f 8d56 | 0800 004c | 8b94 24a8 
  0x0000022c5966592c: 0000 0045 | 8b5a 2445 | 8b53 0c4c | 8b84 24a8 | 0000 0041 | 8b68 1445 | 8b48 2044 | 8bc5 4183 
  0x0000022c5966594c: c001 413b | ea48 8b8c | 24a8 0000 | 0044 8941 | 140f 83e5 | 1700 0045 | 0fb6 5c2b | 1044 899c 
  0x0000022c5966596c: 2488 0000 | 0045 8b59 | 0c41 8b5b | 0c44 8b53 | 1044 8b5b | 0c41 8bea | 4d8b c383 | c5ff 4c8b 
  0x0000022c5966598c: 8c24 9000 | 0000 4d3b | c10f 85e0 | 1c00 0041 | 83fa 010f | 85c3 1b00 | 0041 807f | 4000 0f85 
  0x0000022c596659ac: 6611 0000 | 4489 630c | 896b 10f0 | 8344 24c0 | 0044 8b53 | 1445 85d2 | 0f85 f306 | 0000 448b 
  0x0000022c596659cc: 9424 8000 | 0000 4585 | d20f 8f1d | 0300 0045 | 33db 448b | 9424 d400 | 0000 4585 | d24c 8b8c 
  0x0000022c596659ec: 2498 0000 | 004d 0f45 | cb48 8b94 | 24a0 0000 | 004c 8b84 | 24b8 0000 | 008b bc24 | 8800 0000 
  0x0000022c59665a0c: 8bb4 2480 | 0000 008b 

  0x0000022c59665a14: ;   {optimized virtual_call}
  0x0000022c59665a14: 4c24 4ce8 

  0x0000022c59665a18: ; ImmutableOopMap {[36]=NarrowOop [48]=Oop [144]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokevirtual filterRow {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.PNGImageDecoder::produceImage@947 (line 330)
  0x0000022c59665a18: a4d4 6df8 | 4c8b 9424 | 9800 0000 | 4c89 9424 | 8800 0000 | 4c8b 9424 | b800 0000 | 4c89 9424 
  0x0000022c59665a38: 9800 0000 | 448b 5c24 | 7044 8b54 | 2458 4489 | 9c24 8400 | 0000 4489 | 5424 7833 | ff4c 8b94 
  0x0000022c59665a58: 24a0 0000 | 0045 8b52 | 2445 8bea | 448b 9424 | 8400 0000 | 453b d50f | 8d5c fdff | ff44 8b5c 
  0x0000022c59665a78: 247c 4183 | fb46 0f85 | b215 0000 | 448b 4c24 | 7444 038c | 2484 0000 | 004c 8b94 | 2498 0000 
  0x0000022c59665a98: 0041 8b52 | 0c44 8bd7 | 4183 c203 | 3bfa 4c63 | df0f 836a | 1500 004c | 8b84 2498 | 0000 0045 
  0x0000022c59665ab8: 0fb6 4438 | 1041 c1e0 | 1044 3bd2 | 0f83 5b15 | 0000 4c8b | 9424 9800 | 0000 430f | b65c 1a11 
  0x0000022c59665ad8: c1e3 0841 | 0bd8 470f | be54 1a13 | 4c8b 8424 | 9800 0000 | 470f b644 | 1812 410b | d841 c1e2 
  0x0000022c59665af8: 1841 0bda | 443b 4c24 | 200f 834d | 0d00 008b | 4c24 6c03 | 8c24 8400 | 0000 413b | cd4c 8b94 
  0x0000022c59665b18: 24b0 0000 | 0043 895c | 8a10 0f8d | a9fc ffff | 83c7 043b | fa0f 8d96 | 0000 0044 | 8bc9 4403 
  0x0000022c59665b38: 4c24 748b | df83 c303 | 3bfa 4c63 | d70f 8386 | 0000 004c | 8b9c 2498 | 0000 0045 | 0fb6 443b 
  0x0000022c59665b58: 1041 c1e0 | 103b da0f | 836c 0c00 | 0043 0fb6 | 5c13 11c1 | e308 410b | d847 0fbe | 5c13 134c 
  0x0000022c59665b78: 8b84 2498 | 0000 0047 | 0fb6 5410 | 1241 0bda | 41c1 e318 | 410b db44 | 3b4c 2420 | 0f83 c10c 
  0x0000022c59665b98: 0000 4c8b | 9424 b000 | 0000 4389 | 5c8a 104d | 8b97 8003 | 0000 034c | 246c 83c7 

  0x0000022c59665bb4: ; ImmutableOopMap {[36]=NarrowOop [48]=Oop [136]=Oop [144]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.PNGImageDecoder::produceImage@1699 (line 421)
                      ;   {poll}
  0x0000022c59665bb4: 0441 8502 | 413b cd0f | 8d10 fcff | ff3b fa0f | 8c6a ffff | ff44 8b4c | 2474 4403 | c94c 8b54 
  0x0000022c59665bd4: 2430 4c89 | 5424 2844 | 8b54 247c | 4489 5424 | 3c44 8b5c | 2440 448b | 5424 4c44 | 895c 2438 
  0x0000022c59665bf4: 4489 5424 | 4444 8b5c | 2448 448b | 5424 5444 | 895c 2440 | 4489 5424 | 4c44 8b5c | 2450 448b 
  0x0000022c59665c14: 5424 6844 | 895c 2448 | 4489 5424 | 5444 8b5c | 2478 448b | 5424 7044 | 895c 2450 | 4489 5424 
  0x0000022c59665c34: 5c44 8b5c | 246c 448b | 5424 7444 | 895c 2458 | 4489 5424 | 6444 8b9c | 2480 0000 | 004c 8b94 
  0x0000022c59665c54: 2488 0000 | 00ba e4ff | ffff 4489 | 5c24 604c | 8954 2470 | 894c 2478 | 4489 8c24 | 8800 0000 
  0x0000022c59665c74: 89bc 248c 

  0x0000022c59665c78: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59665c78: 0000 00e8 

  0x0000022c59665c7c: ; ImmutableOopMap {[40]=Oop [112]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.PNGImageDecoder::produceImage@1042 (line 340)
  0x0000022c59665c7c: 8010 a6ff | 488d 9424 | 0001 0000 | 4d8b c749 | 8bcb 49ba | 401a e82a | fc7f 0000 | 41ff d20f 
  0x0000022c59665c9c: 1f44 0000 | 85db 0f85 | 5c17 0000 | 448b 8c24 | f000 0000 | 4403 8c24 | c400 0000 | 8bbc 24d0 
  0x0000022c59665cbc: 0000 002b | bc24 f000 | 0000 488b | 9424 a800 | 0000 4c8b | 8424 b800 

  0x0000022c59665cd4: ;   {optimized virtual_call}
  0x0000022c59665cd4: 0000 90e8 

  0x0000022c59665cd8: ; ImmutableOopMap {[36]=NarrowOop [48]=Oop [144]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokevirtual read1 {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.io.BufferedInputStream::implRead@49 (line 382)
                      ; - java.io.BufferedInputStream::read@18 (line 361)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59665cd8: 24ee feff | 85c0 7e51 | 448b 9c24 | f000 0000 | 4403 d844 | 899c 24f0 | 0000 00e9 | 1b02 0000 
  0x0000022c59665cf8: 4c8b 9424 | b800 0000 

  0x0000022c59665d00: ; implicit exception: dispatches to 0x0000022c5966859c
  0x0000022c59665d00: 458b 5a0c | 442b 9c24 | 8000 0000 | 4489 5c24 | 2844 8b9c | 2480 0000 | 0044 899c | 24d0 0000 
  0x0000022c59665d20: 0045 33db | 4489 9c24 | c400 0000 | e9ca 0000 | 0044 8b94 | 24f0 0000 | 0045 85d2 | 0f84 0711 
  0x0000022c59665d40: 0000 4c8b | 9424 a800 | 0000 458b | 5220 458b | 5a0c 418b | 5b0c 448b | 5310 448b | 5b0c 418b 
  0x0000022c59665d60: ea4d 8bc3 | 83c5 ff4c | 8b8c 2490 | 0000 004d | 3bc1 0f85 | 6c1b 0000 | 4183 fa01 | 0f85 5b18 
  0x0000022c59665d80: 0000 4180 | 7f40 000f | 85bc 0d00 | 0044 8963 | 0c89 6b10 | f083 4424 | c000 448b | 5314 4585 
  0x0000022c59665da0: d20f 8556 | 0300 0044 | 8b9c 24f0 | 0000 0045 | 85db 0f8e | b01b 0000 | 4d8b 9780 | 0300 0044 
  0x0000022c59665dc0: 8b84 24c4 | 0000 0044 | 0384 24f0 

  0x0000022c59665dcc: ; ImmutableOopMap {[36]=NarrowOop [48]=Oop [144]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.PNGImageDecoder::produceImage@924 (line 329)
                      ;   {poll}
  0x0000022c59665dcc: 0000 0041 | 8502 443b | 8424 8000 | 0000 0f8d | fbfb ffff | 448b 9424 | 8000 0000 | 452b d044 
  0x0000022c59665dec: 8994 24d0 | 0000 0044 | 8984 24c4 | 0000 004c | 8b94 24a8 | 0000 0041 | 8b6a 2044 | 8b55 0c41 
  0x0000022c59665e0c: 8b5a 0c85 | db0f 8481 | 1300 0033 | c041 ba01 | 0000 00f0 | 440f b153 | 1041 0f94 | c245 0fb6 
  0x0000022c59665e2c: d244 8b84 | 24c4 0000 | 0044 0b84 | 24d0 0000 | 0044 0b84 | 2480 0000 | 0044 0b44 | 2428 488b 
  0x0000022c59665e4c: fb45 85d2 | 4489 8424 | c000 0000 | 0f84 c30f | 0000 4180 | 7f40 000f | 8546 0d00 | 004c 8b94 
  0x0000022c59665e6c: 2490 0000 | 004c 8bdf | 4d33 d349 | c1ea 144d | 85d2 448b | 4424 2444 | 8943 0c74 | 1a48 b900 
  0x0000022c59665e8c: 3072 602c | 0200 0049 | c1eb 0949 | 03cb 8039 | 040f 8585 | 0d00 004c | 8b94 24a8 | 0000 0041 
  0x0000022c59665eac: 8b6a 2485 | ed0f 8439 | 1800 0044 | 8b94 24c0 | 0000 0045 | 85d2 0f8c | b418 0000 | 448b 9c24 
  0x0000022c59665ecc: 8000 0000 | 443b 9c24 | c400 0000 | 0f84 5219 | 0000 488b | 9424 a800 | 0000 4c8b | 8424 b800 
  0x0000022c59665eec: 0000 448b | 8c24 c400 | 0000 8bbc | 24d0 0000 

  0x0000022c59665efc: ;   {optimized virtual_call}
  0x0000022c59665efc: 0066 90e8 

  0x0000022c59665f00: ; ImmutableOopMap {[36]=NarrowOop [48]=Oop [144]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokevirtual read1 {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.io.BufferedInputStream::implRead@49 (line 382)
                      ; - java.io.BufferedInputStream::read@18 (line 361)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59665f00: fceb feff | 85c0 0f8e | 3d0f 0000 | 8984 24f0 | 0000 0044 | 8b9c 24f0 | 0000 0044 | 3b9c 24d0 
  0x0000022c59665f20: 0000 000f | 8d19 feff | ff4c 8b94 | 24a8 0000 | 0045 8b5a | 0c45 8b43 | 084d 8bd3 

  0x0000022c59665f3c: ;   {metadata('java/util/zip/InflaterInputStream')}
  0x0000022c59665f3c: 4181 f8f0 | cf32 000f | 85f4 0100 | 004c 8994 | 24c8 0000 | 0045 0fb6 | 5214 4c8b | 9c24 c800 
  0x0000022c59665f5c: 0000 458b | 5b18 4489 | 9c24 c000 | 0000 4585 | d24c 8b9c | 24c8 0000 | 0045 0fb6 | 4315 0f85 
  0x0000022c59665f7c: c412 0000 | 4585 c00f | 859b 1300 | 0044 8b94 | 24c0 0000 | 0045 8b52 | 304d 8bda | 4585 d24c 
  0x0000022c59665f9c: 895c 2438 | 0f84 790f | 0000 488d | 9c24 0001 | 0000 4c8b | 4424 3849 | 8b00 a802 | 7523 4883 
  0x0000022c59665fbc: c801 4889 | 03f0 490f | b118 0f84 | 3d00 0000 | 482b c448 | 2507 f0ff | ff48 8903 | e92c 0000 
  0x0000022c59665fdc: 004c 8bd8 | 4833 c0f0 | 4d0f b17b | 3e48 c703 | 0300 0000 | 0f84 1300 | 0000 4c3b | f80f 850a 
  0x0000022c59665ffc: 0000 0049 | ff83 8600 | 0000 4833 | c00f 85e9 | 0f00 0048 | 8d84 2400 | 0100 0044 | 8b94 24c0 
  0x0000022c5966601c: 0000 0041 | 0fb6 5a2c | 4c8b 5c24 | 3848 8138 | 0000 0000 | 0f84 7c00 | 0000 4d8b | 1341 f6c2 
  0x0000022c5966603c: 0274 6b49 | 81ba 8600 | 0000 0000 | 0000 7409 | 49ff 8a86 | 0000 00eb | 5149 8b82 | 9600 0000 
  0x0000022c5966605c: 490b 828e | 0000 0075 | 0a49 c742 | 3e00 0000 | 00eb 4349 | 81ba 9e00 | 0000 0000 | 0000 7425 
  0x0000022c5966607c: 4833 c049 | c742 3e00 | 0000 00f0 | 8304 2400 | 4981 ba9e | 0000 0000 | 0000 0075 | 0df0 4d0f 
  0x0000022c5966609c: b17a 3e75 | 0583 c801 | eb0c a800 | eb08 4c8b | 10f0 4d0f | b113 0f85 | c8fb ffff | e9e3 fbff 
  0x0000022c596660bc: ff41 8b6a | 1485 ed0f | 8401 f9ff | ff44 8b5d | 0c45 85db | 0f84 f4f8 | ffff 488b | d541 b801 
  0x0000022c596660dc: 0000 0048 | 8994 24c0 

  0x0000022c596660e4: ;   {optimized virtual_call}
  0x0000022c596660e4: 0000 00e8 

  0x0000022c596660e8: ; ImmutableOopMap {rbp=NarrowOop [36]=NarrowOop [48]=Oop [144]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=Oop }
                      ;*invokevirtual getAndUnsetStatus {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@22 (line 610)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1008)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - jdk.internal.misc.InternalLock::unlock@4 (line 78)
                      ; - java.io.BufferedInputStream::read@23 (line 278)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@871 (line 324)
  0x0000022c596660e8: 94b9 a5ff | 448b 5518 

  0x0000022c596660f0: ;   {static_call}
  0x0000022c596660f0: 498b d2e8 

  0x0000022c596660f4: ; ImmutableOopMap {[36]=NarrowOop [48]=Oop [144]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokestatic unpark {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 611)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1008)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - jdk.internal.misc.InternalLock::unlock@4 (line 78)
                      ; - java.io.BufferedInputStream::read@23 (line 278)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@871 (line 324)
  0x0000022c596660f4: 88bf a5ff | e9cd f8ff | ff41 8b6a | 1485 ed0f | 849e fcff | ff44 8b5d | 0c45 85db | 0f84 91fc 
  0x0000022c59666114: ffff 488b | d541 b801 | 0000 0048 | 8994 24c8 

  0x0000022c59666124: ;   {optimized virtual_call}
  0x0000022c59666124: 0000 00e8 

  0x0000022c59666128: ; ImmutableOopMap {rbp=NarrowOop [36]=NarrowOop [48]=Oop [144]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [200]=Oop }
                      ;*invokevirtual getAndUnsetStatus {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@22 (line 610)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1008)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - jdk.internal.misc.InternalLock::unlock@4 (line 78)
                      ; - java.io.BufferedInputStream::read@27 (line 363)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59666128: 54b9 a5ff | 448b 5518 

  0x0000022c59666130: ;   {static_call}
  0x0000022c59666130: 498b d2e8 

  0x0000022c59666134: ; ImmutableOopMap {[36]=NarrowOop [48]=Oop [144]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokestatic unpark {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::signalNext@30 (line 611)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@12 (line 1008)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - jdk.internal.misc.InternalLock::unlock@4 (line 78)
                      ; - java.io.BufferedInputStream::read@27 (line 363)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59666134: 48bf a5ff | e96a fcff 

  0x0000022c5966613c: ;   {metadata('java/io/FileInputStream')}
  0x0000022c5966613c: ff41 81f8 | e8ba 0000 | 0f85 fb18 | 0000 4c89 

  0x0000022c5966614c: ;   {static_call}
  0x0000022c5966614c: 5424 38e8 

  0x0000022c59666150: ; ImmutableOopMap {[36]=NarrowOop [48]=Oop [56]=Oop [144]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokestatic begin {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.io.FileInputStream::available@0 (line 473)
                      ; - java.io.BufferedInputStream::implRead@101 (line 390)
                      ; - java.io.BufferedInputStream::read@18 (line 361)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59666150: 2cbf a5ff | 4889 4424 | 6048 8b54 

  0x0000022c5966615c: ;   {optimized virtual_call}
  0x0000022c5966615c: 2438 90e8 

  0x0000022c59666160: ; ImmutableOopMap {[36]=NarrowOop [48]=Oop [144]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokevirtual available0 {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.io.FileInputStream::available@5 (line 475)
                      ; - java.io.BufferedInputStream::implRead@101 (line 390)
                      ; - java.io.BufferedInputStream::read@18 (line 361)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59666160: 1cb9 a5ff | 8be8 488b 

  0x0000022c59666168: ;   {static_call}
  0x0000022c59666168: 5424 60e8 

  0x0000022c5966616c: ; ImmutableOopMap {[36]=NarrowOop [48]=Oop [144]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokestatic end {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.io.FileInputStream::available@10 (line 477)
                      ; - java.io.BufferedInputStream::implRead@101 (line 390)
                      ; - java.io.BufferedInputStream::read@18 (line 361)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c5966616c: 10bf a5ff | 85ed 0f8e | cafb ffff | e92b fbff | ff48 8b94 | 24a8 0000 

  0x0000022c59666184: ;   {optimized virtual_call}
  0x0000022c59666184: 0066 90e8 

  0x0000022c59666188: ; ImmutableOopMap {[36]=NarrowOop [48]=Oop [144]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokevirtual fill {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.io.BufferedInputStream::implRead@12 (line 289)
                      ; - java.io.BufferedInputStream::read@15 (line 276)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@871 (line 324)
  0x0000022c59666188: f46e 0000 | 4c8b 9424 | a800 0000 | 418b 6a10 | 458b 4a14 | 443b cd0f | 8c82 f7ff | ff44 8b54 
  0x0000022c596661a8: 247c 4489 | 5424 4444 | 8b54 2468 | 4489 5424 | 5c44 8b5c | 246c 448b | 5424 7044 | 895c 2460 
  0x0000022c596661c8: 4489 5424 | 6444 8b9c | 2480 0000 | 0044 8b54 | 2474 ba45 | ffff ff44 | 895c 2468 | 4489 5424 
  0x0000022c596661e8: 6c44 894c 

  0x0000022c596661ec: ;   {runtime_call UncommonTrapBlob}
  0x0000022c596661ec: 2474 90e8 

  0x0000022c596661f0: ; ImmutableOopMap {[48]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*if_icmplt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.io.BufferedInputStream::implRead@23 (line 290)
                      ; - java.io.BufferedInputStream::read@15 (line 276)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@871 (line 324)
  0x0000022c596661f0: 0c0b a6ff | 4c8b 9424 | a000 0000 | 458b 523c | 4585 d274 | 334c 8b94 | 24a0 0000 | 0041 8b7a 
  0x0000022c59666210: 2445 33d2 | 488b 9424 | a000 0000 | 4533 c045 | 33c9 488b | 8c24 b000 | 0000 4489 | 1424 897c 
  0x0000022c59666230: ;   {optimized virtual_call}
  0x0000022c59666230: 2408 90e8 

  0x0000022c59666234: ; ImmutableOopMap {[36]=NarrowOop [48]=Oop [144]=Oop [160]=Oop [168]=Oop [176]=Oop }
                      ;*invokevirtual sendPixels {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.PNGImageDecoder::produceImage@1817 (line 438)
  0x0000022c59666234: 48b8 a5ff | 4d8b 9780 | 0300 0044 | 8b5c 2450 

  0x0000022c59666244: ; ImmutableOopMap {[36]=NarrowOop [48]=Oop [144]=Oop [160]=Oop [168]=Oop [176]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.PNGImageDecoder::produceImage@1845 (line 442)
  0x0000022c59666244: 4183 c301 

  0x0000022c59666248: ;   {poll}
  0x0000022c59666248: 4185 0244 | 3b5c 2454 | 4489 5c24 | 5c0f 8f04 | 0400 0044 | 8b74 2454 | 4183 c601 | 4c8b 9c24 
  0x0000022c59666268: a000 0000 | 4d63 d645 | 8b4b 2449 | 83c2 ff44 | 8b5c 245c | 4183 fb08 

  0x0000022c59666280: ;   {oop([B{0x00000000c1ce1878})}
  0x0000022c59666280: 49b8 7818 | cec1 0000 

  0x0000022c59666288: ;   {oop([B{0x00000000c1ce18a8})}
  0x0000022c59666288: 0000 48be | a818 cec1 | 0000 0000 | 0f83 fa19 | 0000 4983 | fa08 0f83 | f019 0000 | 448b 5c24 
  0x0000022c596662a8: 5441 81fb | feff ff7f | 0f8f 2a1a 

  0x0000022c596662b4: ;   {oop([B{0x00000000c1ce18c0})}
  0x0000022c596662b4: 0000 49bd | c018 cec1 | 0000 0000 | 448b 5c24 | 5041 83c3 | 0266 6690 | 4863 4c24 | 5c44 0fbe 
  0x0000022c596662d4: 540e 1041 | 8bd1 4489 | 5424 7041 | 2bd2 450f | be54 0d10 | 410f be5c | 0810 4489 

  0x0000022c596662f0: ;   {oop([B{0x00000000c1ce1890})}
  0x0000022c596662f0: 5424 5849 | ba90 18ce | c100 0000 | 0003 d345 | 0fbe 540a | 1083 c2ff | 85db 895c | 246c 4489 
  0x0000022c59666310: 5424 680f | 84ff 1700 | 008b c23d | 0000 0080 | 7507 33d2 | 83fb ff74 | 0399 f7fb | 0faf 4424 
  0x0000022c59666330: 4883 c007 | c1f8 0385 | c089 4424 | 280f 85cd | 0500 008b | 4c24 5c83 | c101 413b | cb89 4c24 
  0x0000022c59666350: 5c0f 8c75 | ffff ff8b | 4c24 5483 | c1fe 443b | f141 bb00 | 0000 8041 | 0f4c cb44 | 8b5c 245c 
  0x0000022c59666370: 443b d90f | 8d41 0200 | 0045 8bd3 | 4489 5424 | 5cbf a00f | 0000 8bd9 | 2b5c 245c | 4533 db3b 
  0x0000022c59666390: 4c24 5c41 | 0f4c db81 | fba0 0f00 | 000f 47df | 035c 245c | 0f1f 8400 | 0000 0000 | 6666 6690 
  0x0000022c596663b0: 4c63 5c24 | 5c46 0fbe | 541e 1044 | 8954 2470 | 470f be54 | 1810 4489 | 5424 6c45 | 8bd1 442b 
  0x0000022c596663d0: 5424 7044 | 0354 246c | 4183 c2ff | 418b d244 | 8b54 246c | 4585 d20f | 8441 1700 | 008b c23d 
  0x0000022c596663f0: 0000 0080 | 7508 33d2 | 4183 faff | 7404 9941 | f7fa 0faf | 4424 4883 | c007 c1f8 | 0385 c089 
  0x0000022c59666410: 4424 280f | 8503 0500 | 0048 636c | 245c 440f | be54 2e11 | 4489 5424 | 7045 0fbe | 5428 1144 
  0x0000022c59666430: 8954 246c | 458b d144 | 2b54 2470 | 4403 5424 | 6c41 83c2 | ff41 8bd2 | 448b 5424 | 5c41 83c2 
  0x0000022c59666450: 0144 8954 | 2450 4c8b | d549 83c2 | 0144 8b5c | 246c 4585 | db0f 84e5 | 1600 008b | c23d 0000 
  0x0000022c59666470: 0080 7508 | 33d2 4183 | fbff 7404 | 9941 f7fb | 0faf 4424 | 4883 c007 | c1f8 0385 | c089 4424 
  0x0000022c59666490: 280f 85b1 | 0400 0044 | 0fbe 542e | 1244 8954 | 2470 450f | be54 2812 | 4489 5424 | 6c45 8bd1 
  0x0000022c596664b0: 442b 5424 | 7044 0354 | 246c 4183 | c2ff 418b | d244 8b54 | 245c 4183 | c202 4c8b | dd44 8954 
  0x0000022c596664d0: 2450 4983 | c302 448b | 5424 6c45 | 85d2 0f84 | 5416 0000 | 8bc2 3d00 | 0000 8075 | 0833 d241 
  0x0000022c596664f0: ;   {no_reloc}
  0x0000022c596664f0: 83fa ff74 | 0499 41f7 | fa0f af44 | 2448 83c0 | 07c1 f803 | 85c0 8944 | 2428 0f85 | 1604 0000 
  0x0000022c59666510: 450f be54 | 2813 4489 | 5424 6c44 | 0fbe 542e | 1344 8954 | 2470 458b | d144 2b54 | 2470 4403 
  0x0000022c59666530: 5424 6c41 | 83c2 ff41 | 8bd2 448b | 5424 5c41 | 83c2 0344 | 8954 2450 | 4883 c503 | 448b 5424 
  0x0000022c59666550: 6c45 85d2 | 0f84 f915 | 0000 8bc2 | 3d00 0000 | 8075 0833 | d241 83fa | ff74 0499 | 41f7 fa0f 
  0x0000022c59666570: af44 2448 | 83c0 07c1 | f803 85c0 | 8944 2428 | 0f85 c503 | 0000 448b | 5424 5c41 | 83c2 0444 
  0x0000022c59666590: 3bd3 4489 | 5424 5c0f | 8c13 feff | ff4d 8b97 | 8003 0000 | 448b 5c24 

  0x0000022c596665a8: ; ImmutableOopMap {r8=Oop rsi=Oop r13=Oop [36]=NarrowOop [48]=Oop [144]=Oop [160]=Oop [168]=Oop [176]=Oop }
                      ;*goto {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.PNGImageDecoder::produceImage@816 (line 316)
                      ;   {poll}
  0x0000022c596665a8: 5041 8502 | 448b 5424 | 5c44 3bd1 | 0f8c ccfd | ffff 8b4c | 245c 413b | ce0f 8d98 | 0000 0044 
  0x0000022c596665c8: 8b54 245c | 418b ca90 | 4863 d944 | 0fbe 5c1e | 1044 895c | 2470 450f | be54 1810 | 458b d944 
  0x0000022c596665e8: 8954 246c | 442b 5c24 | 7045 8bd3 | 4403 5424 | 6c45 8bda | 4183 c3ff | 448b 5424 | 6c45 85d2 
  0x0000022c59666608: 418b d30f | 84bc 1700 | 0041 8bc3 | 3d00 0000 | 8075 0833 | d241 83fa | ff74 0499 | 41f7 fa44 
  0x0000022c59666628: 8bd0 440f | af54 2448 | 458b da41 | 83c3 0745 | 8bd3 41c1 | fa03 4585 | d244 8954 | 2428 0f85 
  0x0000022c59666648: 0908 0000 | 448b d141 | 83c2 0145 | 3bd6 418b | ca0f 8c71 | ffff ff48 | 8bbc 24a0 | 0000 008b 
  0x0000022c59666668: 6f10 488b | f585 ed0f | 84bd 1600 | 0048 8d9c | 2400 0100 | 0048 8b06 | a802 7523 | 4883 c801 
  0x0000022c59666688: 4889 03f0 | 480f b11e | 0f84 3d00 | 0000 482b | c448 2507 | f0ff ff48 | 8903 e92c | 0000 004c 
  0x0000022c596666a8: 8bd8 4833 | c0f0 4d0f | b17b 3e48 | c703 0300 | 0000 0f84 | 1300 0000 | 4c3b f80f | 850a 0000 
  0x0000022c596666c8: 0049 ff83 | 8600 0000 | 4833 c00f | 8593 1600 | 0044 8b5d | 144d 8bd3 | 4c3b d70f | 841b 1300 
  0x0000022c596666e8: 0048 8d84 | 2400 0100 | 0048 8138 | 0000 0000 | 0f84 7c00 | 0000 4c8b | 1641 f6c2 | 0274 6b49 
  0x0000022c59666708: 81ba 8600 | 0000 0000 | 0000 7409 | 49ff 8a86 | 0000 00eb | 5149 8b82 | 9600 0000 | 490b 828e 
  0x0000022c59666728: 0000 0075 | 0a49 c742 | 3e00 0000 | 00eb 4349 | 81ba 9e00 | 0000 0000 | 0000 7425 | 4833 c049 
  0x0000022c59666748: c742 3e00 | 0000 00f0 | 8304 2400 | 4981 ba9e | 0000 0000 | 0000 0075 | 0df0 4d0f | b17a 3e75 
  0x0000022c59666768: 0583 c801 | eb0c a800 | eb08 4c8b | 10f0 4c0f | b116 0f85 | cc15 0000 | 448b 5f10 | 4585 dbc6 
  0x0000022c59666788: 470d 010f | 84ab 1500 | 0048 89bc | 24a0 0000 | 0049 8bd3 | 4c8b c748 | 897c 2420 

  0x0000022c596667a4: ;   {optimized virtual_call}
  0x0000022c596667a4: 6666 90e8 

  0x0000022c596667a8: ; ImmutableOopMap {[32]=Oop [160]=Oop }
                      ;*invokevirtual doneDecoding {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageDecoder::imageComplete@22 (line 148)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@1851 (line 450)
  0x0000022c596667a8: 3468 6af8 | 488b 5424 | 2045 33c0 

  0x0000022c596667b4: ;   {optimized virtual_call}
  0x0000022c596667b4: 488b eae8 

  0x0000022c596667b8: ; ImmutableOopMap {rbp=Oop [160]=Oop }
                      ;*invokevirtual nextConsumer {reexecute=0 rethrow=0 return_oop=1}
                      ; - sun.awt.image.ImageDecoder::imageComplete@32 (line 152)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@1851 (line 450)
  0x0000022c596667b8: 84b3 ffff | 4885 c00f | 84f8 0400 | 0048 8944 | 2428 33ed | e9a4 0400 | 008b ef83 | c501 448b 
  0x0000022c596667d8: 5c24 7844 | 8b54 247c | 4489 5c24 | 5844 8954 | 2444 448b | 5c24 6c44 | 8b54 2468 | 4489 5c24 
  0x0000022c596667f8: 6044 8954 | 245c 448b | 5c24 7044 | 8b94 2480 | 0000 0044 | 895c 2464 | 4489 5424 | 6844 8b5c 
  0x0000022c59666818: 2474 4c8b | 9424 8800 | 0000 bae4 | ffff ff44 | 895c 246c | 4c89 5424 | 7889 8c24 | 8000 0000 
  0x0000022c59666838: 89bc 2484 | 0000 0044 | 898c 2490 | 0000 0044 | 8984 2494 

  0x0000022c5966684c: ;   {runtime_call UncommonTrapBlob}
  0x0000022c5966684c: 0000 00e8 

  0x0000022c59666850: ; ImmutableOopMap {[48]=Oop [120]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.PNGImageDecoder::produceImage@1056 (line 340)
  0x0000022c59666850: ac04 a6ff | 8b8c 2484 | 0000 004c | 8b54 2430 | 4c89 5424 | 2844 8b54 | 2440 4489 | 5424 3844 
  0x0000022c59666870: 8b54 2448 | 4489 5424 | 4044 8b5c | 247c 448b | 5424 5044 | 895c 243c | 4489 5424 | 4844 8b5c 
  0x0000022c59666890: 244c 448b | 5424 5444 | 8954 244c | 448b 5424 | 7844 895c | 2444 4489 | 5424 5044 | 8b5c 2468 
  0x0000022c596668b0: 448b 5424 | 6c44 895c | 2454 4489 | 5424 5844 | 8b5c 2470 | 448b 9424 | 8000 0000 | 4489 5c24 
  0x0000022c596668d0: 5c44 8954 | 2460 448b | 5c24 744c | 8b94 2488 | 0000 00ba | e4ff ffff | 4489 5c24 | 644c 8954 
  0x0000022c596668f0: 2470 894c | 2478 897c | 247c 4489 | 8c24 8800 | 0000 899c | 248c 0000 

  0x0000022c59666908: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59666908: 0066 90e8 

  0x0000022c5966690c: ; ImmutableOopMap {[40]=Oop [112]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop }
                      ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.PNGImageDecoder::produceImage@1092 (line 340)
  0x0000022c5966690c: f003 a6ff | 448b 5c24 | 5c44 895c | 2450 eb4f | 448b 4424 | 5c44 8944 

  0x0000022c59666924: ;   {oop([B{0x00000000c1ce1890})}
  0x0000022c59666924: 2450 49ba | 9018 cec1 | 0000 0000 | 470f be44 | 1d10 470f | be54 1a10 | 4489 4424 | 5844 8954 
  0x0000022c59666944: 2468 eb23 

  0x0000022c59666948: ;   {oop([B{0x00000000c1ce1890})}
  0x0000022c59666948: 498b ea49 | ba90 18ce | c100 0000 | 0045 0fbe | 5c2d 1045 | 0fbe 542a | 1044 895c | 2458 4489 
  0x0000022c59666968: 5424 6844 | 8b54 2458 | 440f af54 | 2440 448b | 5c24 2841 | 81fb 0000 | 1000 4489 | 5424 740f 
  0x0000022c59666988: 879b 1300 | 0048 634c | 2428 4181 | fb00 0010 | 000f 8745 | 0b00 0048 | 83c1 174d | 8b87 f800 
  0x0000022c596669a8: 0000 4c8b | d149 83e2 | f84d 8bd8 | 4d03 da4d | 3b9f 0801 | 0000 0f83 | 200b 0000 | 4d89 9ff8 
  0x0000022c596669c8: 0000 0049 | c700 0100 

  0x0000022c596669d0: ;   {metadata({type array byte})}
  0x0000022c596669d0: 0000 41c7 | 4008 f021 | 0000 410f | 0d8b 0001 | 0000 448b | 4c24 2848 | c1e9 0345 | 8948 0c49 
  0x0000022c596669f0: 8bf8 4883 | c710 4883 | c1fe 410f | 0d8b 4001 | 0000 4833 | c048 83f9 | 087f 1248 | 83e9 0178 
  0x0000022c59666a10: 1348 8904 | cf48 83e9 | 017d f6eb | 0748 c1e1 | 03f3 48aa | 410f 0d8b | 8001 0000 | 448b 5424 
  0x0000022c59666a30: 2841 81fa | 0000 1000 | 4c89 8424 | b800 0000 | 4489 9424 | 8000 0000 | 0f87 b20a | 0000 4963 
  0x0000022c59666a50: ca48 83c1 | 174d 8b87 | f800 0000 | 4c8b d149 | 83e2 f84d | 8bd8 4d03 | da4d 3b9f | 0801 0000 
  0x0000022c59666a70: 0f83 8a0a | 0000 4d89 | 9ff8 0000 | 0049 c700 | 0100 0000 

  0x0000022c59666a84: ;   {metadata({type array byte})}
  0x0000022c59666a84: 41c7 4008 | f021 0000 | 410f 0d8b | 0001 0000 | 448b 9424 | 8000 0000 | 48c1 e903 | 4589 500c 
  0x0000022c59666aa4: 498b f848 | 83c7 1048 | 83c1 fe41 | 0f0d 8b40 | 0100 0048 | 33c0 4883 | f908 7f12 | 4883 e901 
  0x0000022c59666ac4: 7813 4889 | 04cf 4883 | e901 7df6 | eb07 48c1 | e103 f348 | aa41 0f0d | 8b80 0100 | 004c 8b94 
  0x0000022c59666ae4: 24a0 0000 | 0041 8b72 | 2844 8b5c | 2458 443b | de4c 8984 | 2498 0000 | 000f 8df1 | f6ff ff41 
  0x0000022c59666b04: ba01 0000 | 0044 8994 | 24d4 0000 | 00e9 6ded | ffff 448b | 530c 4585 | d20f 848d | eeff ff4d 
  0x0000022c59666b24: 8b5f 2849 | 8bca 4d85 | db0f 8495 | 0a00 004d | 8b57 384b | 894c 1af8 | 4983 c3f8 | 4d89 5f28 
  0x0000022c59666b44: e967 eeff | ff44 8b53 | 0c45 85d2 | 0f84 37f2 | ffff 4d8b | 5f28 498b | ca4d 85db | 0f84 d60a 
  0x0000022c59666b64: 0000 4d8b | 5738 4b89 | 4c1a f849 | 83c3 f84d | 895f 28e9 | 11f2 ffff | 448b 5d0c | 4585 db0f 
  0x0000022c59666b84: 8443 edff | ff4d 8b57 | 2849 8bcb | 4d85 d20f | 84b8 0a00 | 004d 8b5f | 384b 894c | 13f8 4983 
  0x0000022c59666ba4: c2f8 4d89 | 5728 e91d | edff ff44 | 8b5b 0c45 | 85db 0f84 | adf2 ffff | 4d8b 5728 | 498b cb4d 
  0x0000022c59666bc4: 85d2 0f84 | 9a0a 0000 | 4d8b 5f38 | 4b89 4c13 | f849 83c2 | f84d 8957 | 28e9 87f2 | ffff 4d8b 
  0x0000022c59666be4: 5748 4d8b | 5f58 f083 | 4424 c000 | 8039 000f | 840d edff | ff4d 85d2 | 4488 2175 | 1549 8bd7 
  0x0000022c59666c04: 49ba 901b | a52a fc7f | 0000 41ff | d2e9 f0ec | ffff 4b89 | 4c13 f849 | 83c2 f84d | 8957 48e9 
  0x0000022c59666c24: deec ffff | 4d8b 5748 | 4d8b 5f58 | f083 4424 | c000 8039 | 000f 8464 | f2ff ff4d | 85d2 4488 
  0x0000022c59666c44: 2175 1549 | 8bd7 49ba | 901b a52a | fc7f 0000 | 41ff d2e9 | 47f2 ffff | 4b89 4c13 | f849 83c2 
  0x0000022c59666c64: f84d 8957 | 48e9 35f2 | ffff 6690 | 4889 4424 | 284c 8b54 | 2428 458b | 5a14 4c8b 

  0x0000022c59666c80: ;   {no_reloc}
  0x0000022c59666c80: 9424 a000 | 0000 498b | d341 b803 | 0000 004c | 8954 2420 | 9048 b860 | 8d7b 6a2c 

  0x0000022c59666c9c: ;   {virtual_call}
  0x0000022c59666c9c: 0200 00e8 

  0x0000022c59666ca0: ; ImmutableOopMap {[32]=Oop [40]=Oop [160]=Oop }
                      ;*invokeinterface imageComplete {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageDecoder::imageComplete@45 (line 153)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@1851 (line 450)
  0x0000022c59666ca0: 2cf9 b0ff | 83c5 0148 | 8b54 2420 | 4c8b 4424 

  0x0000022c59666cb0: ;   {optimized virtual_call}
  0x0000022c59666cb0: 2866 90e8 

  0x0000022c59666cb4: ; ImmutableOopMap {[32]=Oop [160]=Oop }
                      ;*invokevirtual nextConsumer {reexecute=0 rethrow=0 return_oop=1}
                      ; - sun.awt.image.ImageDecoder::imageComplete@32 (line 152)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@1851 (line 450)
  0x0000022c59666cb4: 88ae ffff | 4885 c075 | b348 8d9c | 2400 0100 | 0048 8bac | 24a0 0000 | 0048 8b45 | 00a8 0275 
  0x0000022c59666cd4: 2448 83c8 | 0148 8903 | f048 0fb1 | 5d00 0f84 | 3d00 0000 | 482b c448 | 2507 f0ff | ff48 8903 
  0x0000022c59666cf4: e92c 0000 | 004c 8bd8 | 4833 c0f0 | 4d0f b17b | 3e48 c703 | 0300 0000 | 0f84 1300 | 0000 4c3b 
  0x0000022c59666d14: f80f 850a | 0000 0049 | ff83 8600 | 0000 4833 | c00f 856b | 1000 0044 | 8b55 1445 | 85d2 7414 
  0x0000022c59666d34: 498b d266 | 9048 b8a0 | 7d7b 6a2c 

  0x0000022c59666d40: ;   {virtual_call}
  0x0000022c59666d40: 0200 00e8 

  0x0000022c59666d44: ; ImmutableOopMap {rbp=Oop }
                      ;*invokevirtual close {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageDecoder::close@11 (line 179)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@1856 (line 458)
  0x0000022c59666d44: dca0 a5ff | 488d 8424 | 0001 0000 | 4881 3800 | 0000 000f | 847e 0000 | 004c 8b55 | 0041 f6c2 
  0x0000022c59666d64: 0274 6b49 | 81ba 8600 | 0000 0000 | 0000 7409 | 49ff 8a86 | 0000 00eb | 5149 8b82 | 9600 0000 
  0x0000022c59666d84: 490b 828e | 0000 0075 | 0a49 c742 | 3e00 0000 | 00eb 4449 | 81ba 9e00 | 0000 0000 | 0000 7425 
  0x0000022c59666da4: 4833 c049 | c742 3e00 | 0000 00f0 | 8304 2400 | 4981 ba9e | 0000 0000 | 0000 0075 | 0df0 4d0f 
  0x0000022c59666dc4: b17a 3e75 | 0583 c801 | eb0d a800 | eb09 4c8b | 10f0 4c0f | b155 000f | 85cc 0f00 | 0048 81c4 
  0x0000022c59666de4: 1001 0000 

  0x0000022c59666de8: ;   {poll_return}
  0x0000022c59666de8: 5d49 3ba7 | 7803 0000 | 0f87 8e20 | 0000 c344 | 8b55 0c4c | 8b9c 2490 | 0000 004d | 3bd3 0f84 
  0x0000022c59666e08: cf00 0000 | 488b d341 | b801 0000 

  0x0000022c59666e14: ;   {optimized virtual_call}
  0x0000022c59666e14: 0066 90e8 

  0x0000022c59666e18: ; ImmutableOopMap {[36]=NarrowOop [48]=Oop [144]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokevirtual acquire {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock$Sync::lock@9 (line 153)
                      ; - java.util.concurrent.locks.ReentrantLock::lock@4 (line 322)
                      ; - jdk.internal.misc.InternalLock::lock@4 (line 74)
                      ; - java.io.BufferedInputStream::read@11 (line 274)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@871 (line 324)
  0x0000022c59666e18: 64ac a5ff | e9e5 eaff | ff44 8b53 | 0c4c 8b9c | 2490 0000 | 004d 3bd3 | 0f84 c700 | 0000 488b 
  0x0000022c59666e38: d741 b801 

  0x0000022c59666e3c: ;   {optimized virtual_call}
  0x0000022c59666e3c: 0000 00e8 

  0x0000022c59666e40: ; ImmutableOopMap {[36]=NarrowOop [48]=Oop [144]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokevirtual acquire {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock$Sync::lock@9 (line 153)
                      ; - java.util.concurrent.locks.ReentrantLock::lock@4 (line 322)
                      ; - jdk.internal.misc.InternalLock::lock@4 (line 74)
                      ; - java.io.BufferedInputStream::read@11 (line 359)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59666e40: 3cac a5ff | e95a f0ff | ff89 8424 | f000 0000 | e9ed eeff 

  0x0000022c59666e54: ;   {oop([B{0x00000000c1ce1890})}
  0x0000022c59666e54: ff49 ba90 | 18ce c100 | 0000 0045 | 0fbe 5c1d | 1045 0fbe | 541a 1044 | 895c 2458 | 4489 5424 
  0x0000022c59666e74: 6889 4c24 | 50e9 edfa | ffff 4533 | d24c 8994 | 24a0 0000 | 00e9 3de8 | ffff 4533 | d24c 8994 
  0x0000022c59666e94: 24a8 0000 | 00e9 52e8 | ffff 4533 | d24c 8954 | 2430 e967 | e8ff ff45 | 33d2 4c89 | 9424 b000 
  0x0000022c59666eb4: 0000 e983 | e8ff ff45 | 33d2 4c89 | 9424 9800 | 0000 e99f | e8ff ff45 | 33d2 4c89 | 9424 8800 
  0x0000022c59666ed4: 0000 e9b1 | e8ff ff41 | ba01 0000 | 0044 0355 | 1045 85d2 | 0f8c 2f0f | 0000 4489 | 5510 f083 
  0x0000022c59666ef4: 4424 c000 | e909 eaff | ff41 ba01 | 0000 0044 | 0353 1045 | 85d2 0f8c | 4c0f 0000 | 4489 5310 
  0x0000022c59666f14: f083 4424 | c000 e984 | efff ff4c | 8b54 2430 | 4c89 5424 | 284c 8b94 | 24b0 0000 | 004c 8954 
  0x0000022c59666f34: 2430 448b | 5424 4044 | 8954 2438 | 448b 5c24 | 7c44 8b54 | 2448 4489 | 5c24 3c44 | 8954 2440 
  0x0000022c59666f54: 448b 5c24 | 4c44 8b54 | 2454 4489 | 5424 4c44 | 8b54 2468 | 4489 5424 | 5444 8b54 | 2470 4489 
  0x0000022c59666f74: 5c24 4444 | 8954 245c | 448b 5c24 | 5044 8b54 | 2474 4489 | 5c24 4844 | 8954 2464 | 448b 5c24 
  0x0000022c59666f94: 584c 8b94 | 2498 0000 | 0044 895c | 2450 4c89 | 5424 7844 | 8b5c 246c | 448b 9424 | 8800 0000 
  0x0000022c59666fb4: 4489 5c24 | 5844 8954 | 246c 448b | 9c24 8000 | 0000 4c8b | 9424 a800 | 0000 baf6 | ffff ff48 
  0x0000022c59666fd4: 8bac 24a0 | 0000 0044 | 895c 2460 | 4c89 9424 | 8800 0000 | 4c89 9424 | 9000 0000 

  0x0000022c59666ff0: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59666ff0: 6666 90e8 

  0x0000022c59666ff4: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [120]=Oop [136]=Oop [144]=Oop [184]=Oop [192]=NarrowOop [200]=Oop }
                      ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.Inflater::finished@6 (line 322)
                      ; - java.util.zip.InflaterInputStream::available@17 (line 183)
                      ; - java.io.BufferedInputStream::implRead@101 (line 390)
                      ; - java.io.BufferedInputStream::read@18 (line 361)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59666ff4: 08fd a5ff | 448b 9c24 | c000 0000 | 498b d049 | 8beb 4c8d | 8424 0001 

  0x0000022c5966700c: ;   {runtime_call _complete_monitor_locking_Java}
  0x0000022c5966700c: 0000 90e8 

  0x0000022c59667010: ; ImmutableOopMap {rbp=Oop [36]=NarrowOop [48]=Oop [56]=Oop [144]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop [192]=NarrowOop [200]=Oop }
                      ;*monitorenter {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.Inflater::finished@6 (line 322)
                      ; - java.util.zip.InflaterInputStream::available@17 (line 183)
                      ; - java.io.BufferedInputStream::implRead@101 (line 390)
                      ; - java.io.BufferedInputStream::read@18 (line 361)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59667010: 6c04 b1ff | e9f6 efff | ff8b 8c24 | 8400 0000 | e9ac ebff | ff8b ef83 | c501 8b8c | 2484 0000 
  0x0000022c59667030: 00e9 a0f7 | ffff 448b | 5c24 4044 | 895c 2438 | 448b 5c24 | 4844 895c | 2440 4c8b | 5424 3044 
  0x0000022c59667050: 8b5c 244c | 4c89 5424 | 2844 895c | 2444 448b | 5424 5044 | 8b5c 2454 | 4489 5424 | 4844 895c 
  0x0000022c59667070: 244c 448b | 5424 7844 | 8b5c 2468 | 4489 5424 | 5044 895c | 2454 448b | 5424 6c44 | 8b5c 2470 
  0x0000022c59667090: 4489 5424 | 5844 895c | 245c 448b | 9424 8000 | 0000 448b | 5c24 74ba | 45ff ffff | 4489 5424 
  0x0000022c596670b0: 6044 895c | 2464 897c 

  0x0000022c596670b8: ;   {runtime_call UncommonTrapBlob}
  0x0000022c596670b8: 2478 90e8 

  0x0000022c596670bc: ; ImmutableOopMap {[40]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop }
                      ;*lookupswitch {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.PNGImageDecoder::produceImage@975 (line 338)
  0x0000022c596670bc: 40fc a5ff | 4c8b 5424 | 3044 8b5c | 2440 4c89 | 5424 2844 | 895c 2438 | 448b 5424 | 7c44 8b5c 
  0x0000022c596670dc: 2448 4489 | 5424 3c44 | 895c 2440 | 448b 5424 | 4c44 8b5c | 2454 4489 | 5424 4444 | 895c 244c 
  0x0000022c596670fc: 448b 5424 | 5044 8b5c | 2468 4489 | 5424 4844 | 895c 2454 | 448b 5424 | 5844 8b5c | 2470 4489 
  0x0000022c5966711c: 5424 5044 | 895c 245c | 448b 9424 | 8000 0000 | 448b 5c24 | 74ba f6ff | ffff 4489 | 5424 6044 
  0x0000022c5966713c: 895c 2464 

  0x0000022c59667140: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59667140: 6666 90e8 

  0x0000022c59667144: ; ImmutableOopMap {[40]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock::lock@4 (line 322)
                      ; - jdk.internal.misc.InternalLock::lock@4 (line 74)
                      ; - java.io.BufferedInputStream::read@11 (line 274)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@871 (line 324)
  0x0000022c59667144: b8fb a5ff | 448b 5424 | 7c44 8b44 | 2468 4489 | 5424 4444 | 8944 245c | 448b 5424 | 6c44 8b44 
  0x0000022c59667164: 2470 4489 | 5424 6044 | 8944 2464 | 448b 9424 | 8000 0000 | 448b 4424 | 74ba e4ff | ffff 4489 
  0x0000022c59667184: 5424 6844 | 8944 246c | 4489 5c24 

  0x0000022c59667190: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59667190: 7466 90e8 

  0x0000022c59667194: ; ImmutableOopMap {[48]=Oop [116]=NarrowOop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.io.BufferedInputStream::implRead@43 (line 293)
                      ; - java.io.BufferedInputStream::read@15 (line 276)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@871 (line 324)
  0x0000022c59667194: 68fb a5ff | 4c8b 5424 | 304c 8954 | 2428 448b | 5424 4044 | 8954 2438 | 448b 5c24 | 7c44 8b54 
  0x0000022c596671b4: 2448 4489 | 5c24 3c44 | 8954 2440 | 448b 5c24 | 4c44 8b54 | 2454 4489 | 5424 4c44 | 8b54 2468 
  0x0000022c596671d4: 4489 5c24 | 4444 8954 | 2454 448b | 5c24 5044 | 8b54 2470 | 4489 5c24 | 4844 8954 | 245c 448b 
  0x0000022c596671f4: 5c24 5844 | 8b54 2474 | 4489 5c24 | 5044 8954 | 2464 448b | 5c24 6c4c | 8b94 2498 | 0000 0044 
  0x0000022c59667214: 895c 2458 | 4c89 5424 | 7844 8b9c | 2480 0000 | 0044 8b94 | 2488 0000 | 00ba f6ff | ffff 4489 
  0x0000022c59667234: 5c24 6044 | 8954 246c 

  0x0000022c5966723c: ;   {runtime_call UncommonTrapBlob}
  0x0000022c5966723c: 6666 90e8 

  0x0000022c59667240: ; ImmutableOopMap {[40]=Oop [120]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock::lock@4 (line 322)
                      ; - jdk.internal.misc.InternalLock::lock@4 (line 74)
                      ; - java.io.BufferedInputStream::read@11 (line 359)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59667240: bcfa a5ff | 4c8b 5c24 | 304c 895c | 2428 448b | 4424 404c | 8b9c 24b0 | 0000 0044 | 8944 2438 
  0x0000022c59667260: 4c89 5c24 | 3044 8b44 | 2448 448b | 5c24 7c44 | 8944 2440 | 4489 5c24 | 3c44 8b44 | 244c 448b 
  0x0000022c59667280: 5c24 5044 | 8944 2444 | 4489 5c24 | 4844 8b44 | 2454 448b | 5c24 5844 | 8944 244c | 4489 5c24 
  0x0000022c596672a0: 5044 8b44 | 2468 448b | 5c24 6c44 | 8944 2454 | 4489 5c24 | 5844 8b44 | 2470 448b | 9c24 8000 
  0x0000022c596672c0: 0000 4489 | 4424 5c44 | 895c 2460 | 448b 4424 | 744c 8b9c | 2498 0000 | 0044 8944 | 2464 4c89 
  0x0000022c596672e0: 5c24 7844 | 8b84 2488 | 0000 004c | 8b9c 24a8 | 0000 00ba | 45ff ffff | 488b ac24 | a000 0000 
  0x0000022c59667300: 4489 4424 | 6c4c 899c | 2488 0000 | 004c 899c | 2490 0000 | 0044 8994 | 24b0 0000 

  0x0000022c5966731c: ;   {runtime_call UncommonTrapBlob}
  0x0000022c5966731c: 0066 90e8 

  0x0000022c59667320: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [120]=Oop [136]=Oop [144]=Oop [184]=Oop [200]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.InflaterInputStream::ensureOpen@4 (line 67)
                      ; - java.util.zip.InflaterInputStream::available@1 (line 180)
                      ; - java.io.BufferedInputStream::implRead@101 (line 390)
                      ; - java.io.BufferedInputStream::read@18 (line 361)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59667320: dcf9 a5ff | 4c8b 5424 | 304c 8954 | 2428 4c8b | 9424 b000 | 0000 4c89 | 5424 3044 | 8b54 2440 
  0x0000022c59667340: 4489 5424 | 3844 8b54 | 2448 4489 | 5424 4044 | 8b54 244c | 4489 5424 | 4444 8b5c | 247c 448b 
  0x0000022c59667360: 5424 5044 | 895c 243c | 4489 5424 | 4844 8b5c | 2454 448b | 5424 5844 | 895c 244c | 4489 5424 
  0x0000022c59667380: 5044 8b5c | 2468 448b | 5424 6c44 | 895c 2454 | 4489 5424 | 5844 8b5c | 2470 448b | 9424 8000 
  0x0000022c596673a0: 0000 4489 | 5c24 5c44 | 8954 2460 | 448b 5c24 | 744c 8b94 | 2498 0000 | 0044 895c | 2464 4c89 
  0x0000022c596673c0: 5424 7844 | 8b9c 2488 | 0000 004c | 8b94 24a8 | 0000 00ba | 45ff ffff | 488b ac24 | a000 0000 
  0x0000022c596673e0: 4489 5c24 | 6c4c 8994 | 2488 0000 | 004c 8994 | 2490 0000 | 0044 8984 | 24b0 0000 

  0x0000022c596673fc: ;   {runtime_call UncommonTrapBlob}
  0x0000022c596673fc: 0066 90e8 

  0x0000022c59667400: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [120]=Oop [136]=Oop [144]=Oop [184]=Oop [200]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.InflaterInputStream::available@8 (line 181)
                      ; - java.io.BufferedInputStream::implRead@101 (line 390)
                      ; - java.io.BufferedInputStream::read@18 (line 361)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59667400: fcf8 a5ff | 4c8b 5424 | 304c 8954 | 2428 448b | 5c24 404c | 8b94 24b0 | 0000 0044 | 895c 2438 
  0x0000022c59667420: 4c89 5424 | 3044 8b5c | 2448 448b | 5424 7c44 | 895c 2440 | 4489 5424 | 3c44 8b5c | 244c 448b 
  0x0000022c59667440: 5424 5044 | 895c 2444 | 4489 5424 | 4844 8b5c | 2454 448b | 5424 5844 | 895c 244c | 4489 5424 
  0x0000022c59667460: 5044 8b5c | 2468 448b | 5424 6c44 | 895c 2454 | 4489 5424 | 5844 8b5c | 2470 448b | 9424 8000 
  0x0000022c59667480: 0000 4489 | 5c24 5c44 | 8954 2460 | 448b 5c24 | 744c 8b94 | 2498 0000 | 0044 895c | 2464 4c89 
  0x0000022c596674a0: 5424 7844 | 8b9c 2488 | 0000 004c | 8b94 24a8 | 0000 00ba | 45ff ffff | 488b ac24 | a000 0000 
  0x0000022c596674c0: 4489 5c24 | 6c4c 8994 | 2488 0000 | 004c 8994 | 2490 0000 | 0089 9c24 | b000 0000 

  0x0000022c596674dc: ;   {runtime_call UncommonTrapBlob}
  0x0000022c596674dc: 6666 90e8 

  0x0000022c596674e0: ; ImmutableOopMap {rbp=Oop [40]=Oop [48]=Oop [120]=Oop [136]=Oop [144]=Oop [184]=Oop [200]=Oop }
                      ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.zip.InflaterInputStream::available@20 (line 183)
                      ; - java.io.BufferedInputStream::implRead@101 (line 390)
                      ; - java.io.BufferedInputStream::read@18 (line 361)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c596674e0: 1cf8 a5ff 

  0x0000022c596674e4: ;   {metadata({type array byte})}
  0x0000022c596674e4: 48ba f021 | 0000 0800 | 0000 448b 

  0x0000022c596674f0: ;   {runtime_call _new_array_Java}
  0x0000022c596674f0: 4424 28e8 

  0x0000022c596674f4: ; ImmutableOopMap {[36]=NarrowOop [48]=Oop [144]=Oop [160]=Oop [168]=Oop [176]=Oop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - sun.awt.image.PNGImageDecoder::produceImage@851 (line 321)
  0x0000022c596674f4: 08a7 a7ff | 4c8b c0e9 | 2cf5 ffff 

  0x0000022c59667500: ;   {metadata({type array byte})}
  0x0000022c59667500: 48ba f021 | 0000 0800 | 0000 448b | 8424 8000 

  0x0000022c59667510: ;   {runtime_call _new_array_Java}
  0x0000022c59667510: 0000 90e8 

  0x0000022c59667514: ; ImmutableOopMap {[36]=NarrowOop [48]=Oop [144]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*newarray {reexecute=0 rethrow=0 return_oop=1}
                      ; - sun.awt.image.PNGImageDecoder::produceImage@857 (line 322)
  0x0000022c59667514: e8a6 a7ff | 4c8b c0e9 | c1f5 ffff | 448b 5424 | 7c44 8954 | 2444 448b | 5424 6844 | 8954 245c 
  0x0000022c59667534: 448b 5c24 | 7844 8b54 | 2470 4489 | 5c24 5844 | 8954 2464 | 448b 5c24 | 6c44 8b54 | 2474 ba45 
  0x0000022c59667554: ffff ff44 | 895c 2460 | 4489 5424 

  0x0000022c59667560: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59667560: 6c66 90e8 

  0x0000022c59667564: ; ImmutableOopMap {[48]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.PNGImageDecoder::produceImage@1706 (line 423)
  0x0000022c59667564: 98f7 a5ff | 448b 5424 | 6844 8954 | 245c 448b | 5c24 7c44 | 8b54 2470 | 4489 5c24 | 4444 8954 
  0x0000022c59667584: 2464 448b | 5c24 6c44 | 8b54 2474 | 4489 5c24 | 6044 8954 | 246c 448b | 9c24 8000 | 0000 448b 
  0x0000022c596675a4: 9424 8800 | 0000 ba45 | ffff ff44 | 895c 2468 | 4489 5424 | 7489 9c24 | 8c00 0000 

  0x0000022c596675c0: ;   {runtime_call UncommonTrapBlob}
  0x0000022c596675c0: 6666 90e8 

  0x0000022c596675c4: ; ImmutableOopMap {[48]=Oop [140]=NarrowOop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.ReentrantLock$Sync::tryRelease@26 (line 176)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@2 (line 1007)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - jdk.internal.misc.InternalLock::unlock@4 (line 78)
                      ; - java.io.BufferedInputStream::read@23 (line 278)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@871 (line 324)
  0x0000022c596675c4: 38f7 a5ff | 498b d749 | bab0 1ba5 | 2afc 7f00 | 0041 ffd2 | e9d3 e3ff | ff44 8b54 | 2468 4489 
  0x0000022c596675e4: 5424 5c44 | 8b5c 247c | 448b 5424 | 7044 895c | 2444 4489 | 5424 6444 | 8b5c 246c | 448b 5424 
  0x0000022c59667604: 7444 895c | 2460 4489 | 5424 6c44 | 8b9c 2480 | 0000 0044 | 8b94 2488 | 0000 00ba | 45ff ffff 
  0x0000022c59667624: 4489 5c24 | 6844 8954 | 2474 899c | 2494 0000 

  0x0000022c59667634: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59667634: 0066 90e8 

  0x0000022c59667638: ; ImmutableOopMap {[48]=Oop [148]=NarrowOop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.ReentrantLock$Sync::tryRelease@26 (line 176)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@2 (line 1007)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - jdk.internal.misc.InternalLock::unlock@4 (line 78)
                      ; - java.io.BufferedInputStream::read@27 (line 363)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59667638: c4f6 a5ff | 498b d749 | bab0 1ba5 | 2afc 7f00 | 0041 ffd2 | e93c e7ff | ff49 8bd7 | 49ba b01b 
  0x0000022c59667658: a52a fc7f | 0000 41ff | d2e9 66e2 | ffff 498b | d749 bab0 | 1ba5 2afc | 7f00 0041 | ffd2 e9ee 
  0x0000022c59667678: e7ff ff44 | 8b54 247c | 4489 5424 | 4444 8b54 | 2468 4489 | 5424 5c44 | 8b54 2470 | 4489 5424 
  0x0000022c59667698: 6444 8b44 | 246c 448b | 5424 7444 | 8944 2460 | 4489 5424 | 6c44 8b84 | 2480 0000 | 004c 8b94 
  0x0000022c596676b8: 2498 0000 | 004c 8994 | 2480 0000 | 0044 8b94 | 2488 0000 | 00ba 45ff | ffff 4489 | 4424 6844 
  0x0000022c596676d8: 8954 2474 | 899c 248c | 0000 0044 | 899c 2498 

  0x0000022c596676e8: ;   {runtime_call UncommonTrapBlob}
  0x0000022c596676e8: 0000 00e8 

  0x0000022c596676ec: ; ImmutableOopMap {[48]=Oop [128]=Oop [140]=NarrowOop [144]=Oop [152]=NarrowOop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*if_acmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.ReentrantLock$Sync::tryRelease@14 (line 174)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@2 (line 1007)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - jdk.internal.misc.InternalLock::unlock@4 (line 78)
                      ; - java.io.BufferedInputStream::read@23 (line 278)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@871 (line 324)
  0x0000022c596676ec: 10f6 a5ff | 4c8b 9424 | a000 0000 | 4c89 5424 | 2044 8b54 | 247c 4489 | 5424 4444 | 8b5c 2468 
  0x0000022c5966770c: 448b 5424 | 6c44 895c | 245c 4489 | 5424 6044 | 8b5c 2470 | 448b 9424 | 8000 0000 | 4489 5c24 
  0x0000022c5966772c: 6444 8954 | 2468 448b | 5c24 744c | 8b94 2498 | 0000 0044 | 895c 246c | 4c89 9424 | 8000 0000 
  0x0000022c5966774c: 448b 9c24 | 8800 0000 | 4c8b 9424 | a800 0000 | ba45 ffff | ff44 895c | 2474 4c89 | 9424 9000 
  0x0000022c5966776c: 0000 4c89 | 9424 9800 

  0x0000022c59667774: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59667774: 0000 90e8 

  0x0000022c59667778: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [48]=Oop [128]=Oop [144]=Oop [152]=Oop [176]=Oop [184]=Oop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.io.BufferedInputStream::getBufIfOpen@6 (line 171)
                      ; - java.io.BufferedInputStream::implRead@1 (line 373)
                      ; - java.io.BufferedInputStream::read@18 (line 361)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59667778: 84f5 a5ff | 4c8b 5424 | 304c 8954 | 2428 448b | 5424 4044 | 8954 2438 | 448b 5c24 | 7c44 8b54 
  0x0000022c59667798: 2448 4489 | 5c24 3c44 | 8954 2440 | 448b 5c24 | 4c44 8b54 | 2454 4489 | 5424 4c44 | 8b54 2468 
  0x0000022c596677b8: 4489 5c24 | 4444 8954 | 2454 448b | 5c24 5044 | 8b54 2470 | 4489 5c24 | 4844 8954 | 245c 448b 
  0x0000022c596677d8: 5c24 5844 | 8b54 2474 | 4489 5c24 | 5044 8954 | 2464 448b | 5c24 6c4c | 8b94 2498 | 0000 0044 
  0x0000022c596677f8: 895c 2458 | 4c89 5424 | 7844 8b9c | 2480 0000 | 0044 8b94 | 2488 0000 | 00ba 45ff | ffff 488b 
  0x0000022c59667818: ac24 a000 | 0000 4489 | 5c24 6044 | 8954 246c 

  0x0000022c59667828: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59667828: 6666 90e8 

  0x0000022c5966782c: ; ImmutableOopMap {rbp=Oop [40]=Oop [120]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*ifge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.io.BufferedInputStream::implRead@19 (line 374)
                      ; - java.io.BufferedInputStream::read@18 (line 361)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c5966782c: d0f4 a5ff | 4c8b 5424 | 304c 8954 | 2428 448b | 5424 4044 | 8b5c 247c | 4489 5424 | 3844 895c 
  0x0000022c5966784c: 243c 448b | 5424 4844 | 8b5c 244c | 4489 5424 | 4044 895c | 2444 448b | 5424 5044 | 8b5c 2454 
  0x0000022c5966786c: 4489 5424 | 4844 895c | 244c 448b | 5424 5844 | 8b5c 2468 | 4489 5424 | 5044 895c | 2454 448b 
  0x0000022c5966788c: 5424 6c44 | 8b5c 2470 | 4489 5424 | 5844 895c | 245c 448b | 9424 8000 | 0000 448b | 5c24 7444 
  0x0000022c596678ac: 8954 2460 | 4489 5c24 | 644c 8b94 | 2498 0000 | 0044 8b9c | 2488 0000 | 00ba 45ff | ffff 488b 
  0x0000022c596678cc: ac24 a000 | 0000 4c89 | 5424 7844 | 895c 246c 

  0x0000022c596678dc: ;   {runtime_call UncommonTrapBlob}
  0x0000022c596678dc: 6666 90e8 

  0x0000022c596678e0: ; ImmutableOopMap {rbp=Oop [40]=Oop [120]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.io.BufferedInputStream::implRead@31 (line 376)
                      ; - java.io.BufferedInputStream::read@18 (line 361)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c596678e0: 1cf4 a5ff | 4c8b 9424 | a000 0000 | 4c89 5424 | 2044 8b54 | 2468 4489 | 5424 5c44 | 8b44 247c 
  0x0000022c59667900: 448b 5424 | 7044 8944 | 2444 4489 | 5424 6444 | 8b44 246c | 448b 5424 | 7444 8944 | 2460 4489 
  0x0000022c59667920: 5424 6c44 | 8b84 2480 | 0000 004c | 8b94 2498 | 0000 004c | 8994 2480 | 0000 0044 | 8b94 2488 
  0x0000022c59667940: 0000 00ba | 45ff ffff | 4489 4424 | 6844 8954 | 2474 899c | 249c 0000 | 0044 899c | 24a0 0000 
  0x0000022c59667960: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59667960: 0066 90e8 

  0x0000022c59667964: ; ImmutableOopMap {[32]=Oop [48]=Oop [128]=Oop [144]=Oop [156]=NarrowOop [160]=NarrowOop [168]=Oop [176]=Oop [184]=Oop }
                      ;*if_acmpeq {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.util.concurrent.locks.ReentrantLock$Sync::tryRelease@14 (line 174)
                      ; - java.util.concurrent.locks.AbstractQueuedSynchronizer::release@2 (line 1007)
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - jdk.internal.misc.InternalLock::unlock@4 (line 78)
                      ; - java.io.BufferedInputStream::read@27 (line 363)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59667964: 98f3 a5ff | 4c8b 5424 | 304c 8954 | 2428 448b | 5424 7c44 | 8954 243c | 448b 5c24 | 4044 8b54 
  0x0000022c59667984: 244c 4489 | 5c24 3844 | 8954 2444 | 448b 5c24 | 4844 8b54 | 2454 4489 | 5c24 4044 | 8954 244c 
  0x0000022c596679a4: 448b 5c24 | 5044 8b54 | 2468 4489 | 5c24 4844 | 8954 2454 | 448b 5c24 | 5844 8b54 | 2470 4489 
  0x0000022c596679c4: 5c24 5044 | 8954 245c | 448b 5c24 | 6c44 8b54 | 2474 4489 | 5c24 5844 | 8954 2464 | 448b 9c24 
  0x0000022c596679e4: 8000 0000 | 448b 9424 | 8800 0000 | ba45 ffff | ff44 895c | 2460 4489 

  0x0000022c596679fc: ;   {runtime_call UncommonTrapBlob}
  0x0000022c596679fc: 5424 6ce8 

  0x0000022c59667a00: ; ImmutableOopMap {[40]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.PNGImageDecoder::produceImage@903 (line 327)
  0x0000022c59667a00: fcf2 a5ff | 4180 7f40 | 0044 8b6d | 100f 85d7 | 0300 0045 | 85ed 4489 | 6514 0f84 | c9ec ffff 
  0x0000022c59667a20: 488b ee48 | 89bc 24a0 | 0000 0048 | 8bd6 4889 

  0x0000022c59667a30: ;   {optimized virtual_call}
  0x0000022c59667a30: 7c24 28e8 

  0x0000022c59667a34: ; ImmutableOopMap {rbp=Oop [40]=Oop [160]=Oop }
                      ;*invokevirtual startProduction {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.InputStreamImageSource::doneDecoding@21 (line 341)
                      ; - sun.awt.image.InputStreamImageSource::latchConsumers@2 (line 347)
                      ; - sun.awt.image.ImageDecoder::imageComplete@5 (line 145)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@1851 (line 450)
  0x0000022c59667a34: 48a0 a5ff | 488b 7c24 | 2848 8bf5 | e9a4 ecff | ff4c 8b54 | 2430 4c89 | 5424 2844 | 8b54 247c 
  0x0000022c59667a54: 4489 5424 | 3c44 8b54 | 244c 4489 | 5424 4444 | 8b54 2454 | 4489 5424 | 4c44 8b44 | 2440 448b 
  0x0000022c59667a74: 5424 6844 | 8944 2438 | 4489 5424 | 5444 8b44 | 2448 448b | 5424 7044 | 8944 2440 | 4489 5424 
  0x0000022c59667a94: 5c44 8b44 | 2450 448b | 5424 7444 | 8944 2448 | 4489 5424 | 6444 8b44 | 2458 4c8b | 9424 9800 
  0x0000022c59667ab4: 0000 4489 | 4424 504c | 8954 2478 | 448b 4424 | 6c44 8b94 | 2488 0000 | 0044 8944 | 2458 4489 
  0x0000022c59667ad4: 5424 6c44 | 8b84 2480 | 0000 004c | 8b94 24a8 | 0000 00ba | c6ff ffff | 488b ac24 | a000 0000 
  0x0000022c59667af4: 4489 4424 | 604c 8994 | 2488 0000 | 004c 8994 | 2490 0000 | 0044 899c | 24a8 0000 

  0x0000022c59667b10: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59667b10: 0066 90e8 

  0x0000022c59667b14: ; ImmutableOopMap {rbp=Oop [40]=Oop [120]=Oop [136]=Oop [144]=Oop [168]=NarrowOop [176]=Oop [184]=Oop }
                      ;*invokevirtual available {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.io.BufferedInputStream::implRead@101 (line 390)
                      ; - java.io.BufferedInputStream::read@18 (line 361)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59667b14: e8f1 a5ff | 448b 5424 | 5c44 8954 | 2450 448b | 5c24 6844 | 8b54 2458 | eb3b 448b | 5424 5c44 
  0x0000022c59667b34: 8954 2450 | 470f be54 

  0x0000022c59667b3c: ;   {oop([B{0x00000000c1ce1890})}
  0x0000022c59667b3c: 1d10 49b8 | 9018 cec1 | 0000 0000 | 470f be5c | 1810 eb19 

  0x0000022c59667b50: ;   {oop([B{0x00000000c1ce1890})}
  0x0000022c59667b50: 498b ea49 | bb90 18ce | c100 0000 | 0045 0fbe | 542d 1045 | 0fbe 5c2b | 108b ea8b | 4c24 5044 
  0x0000022c59667b70: 8b4c 2454 | ba86 ffff | ff44 894c | 2450 4489 | 5424 5444 | 895c 2458 | 894c 2460 

  0x0000022c59667b8c: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59667b8c: 6666 90e8 

  0x0000022c59667b90: ; ImmutableOopMap {[48]=Oop [160]=Oop [168]=Oop [176]=Oop }
                      ;*idiv {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.PNGImageDecoder::produceImage@796 (line 314)
  0x0000022c59667b90: 6cf1 a5ff | 4c8b 5424 | 304c 8954 | 2428 448b | 5424 7c44 | 8b5c 2440 | 4489 5424 | 3c44 895c 
  0x0000022c59667bb0: 2438 448b | 5424 4844 | 8b5c 2450 | 4489 5424 | 4044 895c | 2448 448b | 5424 4c44 | 8b5c 2468 
  0x0000022c59667bd0: 4489 5424 | 4444 895c | 2450 448b | 5424 5444 | 8b5c 2470 | 4489 5424 | 4c44 895c | 2458 448b 
  0x0000022c59667bf0: 5424 6c44 | 8b5c 2474 | ba76 ffff | ff44 8954 | 2454 4489 | 5c24 6089 

  0x0000022c59667c08: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59667c08: 7c24 64e8 

  0x0000022c59667c0c: ; ImmutableOopMap {[40]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop }
                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.PNGImageDecoder::produceImage@960 (line 336)
  0x0000022c59667c0c: f0f0 a5ff | 448b 5c24 | 4844 895c | 2424 448b | 5c24 4c44 | 8b54 2450 | 4489 5c24 | 2844 8954 
  0x0000022c59667c2c: 242c 448b | 5c24 6844 | 8b54 2454 | 4489 5c24 | 3444 8954 | 2430 448b | 5c24 6c44 | 8b54 2470 
  0x0000022c59667c4c: 4489 5c24 | 3844 8954 | 243c 448b | 5c24 7444 | 8b54 2478 | ba8d ffff | ff8b 6c24 | 4044 895c 
  0x0000022c59667c6c: 2444 4c89 | 6c24 4889 | 7c24 5048 | 895c 2468 | 4889 7424 | 704c 89b4 | 2488 0000 | 0044 8954 
  0x0000022c59667c8c: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59667c8c: 2454 90e8 

  0x0000022c59667c90: ; ImmutableOopMap {[72]=Oop [88]=Oop [96]=Oop [104]=Oop [112]=Oop [136]=Oop }
                      ;*iload {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.PNGImageDecoder::produceImage@960 (line 336)
  0x0000022c59667c90: 6cf0 a5ff | 4c8b 5424 | 304c 8954 | 2428 448b | 5424 4044 | 8954 2438 | 448b 5424 | 4844 8954 
  0x0000022c59667cb0: 2440 448b | 5424 4c44 | 8954 2444 | 448b 5424 | 5444 8954 | 244c 448b | 5424 5c45 | 8bda ba76 
  0x0000022c59667cd0: ffff ff44 | 895c 2454 

  0x0000022c59667cd8: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59667cd8: 6666 90e8 

  0x0000022c59667cdc: ; ImmutableOopMap {[40]=Oop [160]=Oop [168]=Oop [176]=Oop }
                      ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.PNGImageDecoder::produceImage@731 (line 307)
  0x0000022c59667cdc: 20f0 a5ff | 448b 5c24 | 4044 895c | 2438 448b | 5c24 4844 | 895c 2440 | 448b 5c24 | 4c44 895c 
  0x0000022c59667cfc: 2444 448b | 5c24 5444 | 895c 244c | 4c8b 5424 | 3044 8b5c | 245c ba6e | ffff ff4c | 8954 2428 
  0x0000022c59667d1c: 4489 5c24 

  0x0000022c59667d20: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59667d20: 5466 90e8 

  0x0000022c59667d24: ; ImmutableOopMap {[40]=Oop [160]=Oop [168]=Oop [176]=Oop }
                      ;*if_icmpgt {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.PNGImageDecoder::produceImage@731 (line 307)
  0x0000022c59667d24: d8ef a5ff | 4863 4c24 | 28e9 60ec | ffff baf6 

  0x0000022c59667d34: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59667d34: ffff ffe8 

  0x0000022c59667d38: ; ImmutableOopMap {[160]=Oop }
                      ;*invokevirtual latchConsumers {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageDecoder::imageComplete@5 (line 145)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@1851 (line 450)
  0x0000022c59667d38: c4ef a5ff | baf6 ffff | ff48 897c 

  0x0000022c59667d44: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59667d44: 2420 90e8 

  0x0000022c59667d48: ; ImmutableOopMap {[32]=Oop }
                      ;*invokevirtual doneDecoding {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.ImageDecoder::imageComplete@22 (line 148)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@1851 (line 450)
  0x0000022c59667d48: b4ef a5ff | 488d 9424 | 0001 0000 | 4d8b c748 | 8bce 49ba | 401a e82a | fc7f 0000 | 41ff d2e9 
  0x0000022c59667d68: 14ea ffff | 4889 7424 | 2848 8bd6 | 4c8d 8424 | 0001 0000 

  0x0000022c59667d7c: ;   {runtime_call _complete_monitor_locking_Java}
  0x0000022c59667d7c: 6666 90e8 

  0x0000022c59667d80: ; ImmutableOopMap {rbp=NarrowOop [40]=Oop [160]=Oop }
                      ;*synchronization entry
                      ; - sun.awt.image.InputStreamImageSource::doneDecoding@-1 (line 338)
                      ; - sun.awt.image.InputStreamImageSource::latchConsumers@2 (line 347)
                      ; - sun.awt.image.ImageDecoder::imageComplete@5 (line 145)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@1851 (line 450)
  0x0000022c59667d80: fcf6 b0ff | 488b bc24 | a000 0000 | 488b 7424 | 28e9 43e9 | ffff 4c8d | 8424 0001 | 0000 488b 
  0x0000022c59667da0: ;   {runtime_call _complete_monitor_locking_Java}
  0x0000022c59667da0: d566 90e8 

  0x0000022c59667da4: ; ImmutableOopMap {rbp=Oop }
                      ;*synchronization entry
                      ; - sun.awt.image.ImageDecoder::close@-1 (line 177)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@1856 (line 458)
  0x0000022c59667da4: d8f6 b0ff | e97e efff | ff48 8d94 | 2400 0100 | 004d 8bc7 | 488b cd49 | ba40 1ae8 | 2afc 7f00 
  0x0000022c59667dc4: 0041 ffd2 | e914 f0ff 

  0x0000022c59667dcc: ;   {oop([B{0x00000000c1ce1890})}
  0x0000022c59667dcc: ff49 bb90 | 18ce c100 | 0000 0045 | 0fbe 541d | 1045 0fbe | 5c1b 108b | eae9 85fd | ffff 448b 
  0x0000022c59667dec: 5514 4585 | d20f 841c | fcff ff4d | 8b5f 2849 | 8bca 4d85 | db0f 8405 | 0100 004d | 8b57 384b 
  0x0000022c59667e0c: 894c 1af8 | 4983 c3f8 | 4d89 5f28 | e9f6 fbff | ff44 8b54 | 247c 4489 | 5424 4444 | 8b5c 2468 
  0x0000022c59667e2c: 448b 5424 | 6c44 895c | 245c 4489 | 5424 6044 | 8b5c 2470 | 448b 9424 | 8000 0000 | ba1e 0000 
  0x0000022c59667e4c: 0044 895c | 2464 4489 

  0x0000022c59667e54: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59667e54: 5424 68e8 

  0x0000022c59667e58: ; ImmutableOopMap {rbp=NarrowOop [48]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock$NonfairSync::initialTryLock@39 (line 231)
                      ; - java.util.concurrent.locks.ReentrantLock$Sync::lock@1 (line 152)
                      ; - java.util.concurrent.locks.ReentrantLock::lock@4 (line 322)
                      ; - jdk.internal.misc.InternalLock::lock@4 (line 74)
                      ; - java.io.BufferedInputStream::read@11 (line 274)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@871 (line 324)
  0x0000022c59667e58: a4ee a5ff | 448b 5c24 | 4044 895c | 2438 4c8b | 5424 3044 | 8b5c 2448 | 4c89 5424 | 2844 895c 
  0x0000022c59667e78: 2440 448b | 5424 7c44 | 8b5c 244c | 4489 5424 | 3c44 895c | 2444 448b | 5424 5044 | 8b5c 2454 
  0x0000022c59667e98: 4489 5424 | 4844 895c | 244c 448b | 5424 5844 | 8b5c 2468 | 4489 5424 | 5044 895c | 2454 448b 
  0x0000022c59667eb8: 5424 6c44 | 8b5c 2470 | 4489 5424 | 5844 895c | 245c 448b | 9424 8000 | 0000 448b | 5c24 7444 
  0x0000022c59667ed8: 8954 2460 | 4489 5c24 | 644c 8b94 | 2498 0000 | 0044 8b9c | 2488 0000 | 00ba 1e00 | 0000 4c89 
  0x0000022c59667ef8: 5424 7844 | 895c 246c | 899c 249c 

  0x0000022c59667f04: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59667f04: 0000 00e8 

  0x0000022c59667f08: ; ImmutableOopMap {[40]=Oop [120]=Oop [156]=NarrowOop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*new {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock$NonfairSync::initialTryLock@39 (line 231)
                      ; - java.util.concurrent.locks.ReentrantLock$Sync::lock@1 (line 152)
                      ; - java.util.concurrent.locks.ReentrantLock::lock@4 (line 322)
                      ; - jdk.internal.misc.InternalLock::lock@4 (line 74)
                      ; - java.io.BufferedInputStream::read@11 (line 359)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59667f08: f4ed a5ff | 498b d749 | bab0 1ba5 | 2afc 7f00 | 0041 ffd2 | e9f2 faff | ff4c 8b54 | 2430 448b 
  0x0000022c59667f28: 5c24 7c4c | 8954 2428 | 4489 5c24 | 3c44 8b54 | 2440 448b | 5c24 4c44 | 8954 2438 | 4489 5c24 
  0x0000022c59667f48: 4444 8b54 | 2448 448b | 5c24 5444 | 8954 2440 | 4489 5c24 | 4c44 8b54 | 2450 448b | 5c24 6844 
  0x0000022c59667f68: 8954 2448 | 4489 5c24 | 5444 8b54 | 2458 448b | 5c24 7044 | 8954 2450 | 4489 5c24 | 5c44 8b54 
  0x0000022c59667f88: 246c 448b | 5c24 7444 | 8954 2458 | 4489 5c24 | 6444 8b94 | 2480 0000 | 0044 8b9c | 2488 0000 
  0x0000022c59667fa8: 00ba f6ff | ffff 4489 | 5424 6044 | 895c 246c 

  0x0000022c59667fb8: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59667fb8: 6666 90e8 

  0x0000022c59667fbc: ; ImmutableOopMap {[40]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokevirtual finished {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.zip.InflaterInputStream::available@17 (line 183)
                      ; - java.io.BufferedInputStream::implRead@101 (line 390)
                      ; - java.io.BufferedInputStream::read@18 (line 361)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59667fbc: 40ed a5ff | 4c8b 5424 | 304c 8954 | 2428 448b | 5424 4044 | 8954 2438 | 4489 5c24 | 3c44 8b54 
  0x0000022c59667fdc: 2448 448b | 5c24 4c44 | 8954 2440 | 4489 5c24 | 4444 8b54 | 2450 448b | 5c24 5444 | 8954 2448 
  0x0000022c59667ffc: 4489 5c24 | 4c44 8b54 | 2478 448b | 5c24 6844 | 8954 2450 | 4489 5c24 | 5444 8b54 | 246c 448b 
  0x0000022c5966801c: 5c24 7044 | 8954 2458 | 4489 5c24 | 5c44 8b94 | 2480 0000 | 0044 8b5c | 2474 baf6 | ffff ff44 
  0x0000022c5966803c: 8954 2460 | 4489 5c24 | 6444 894c | 2474 89bc | 2480 0000 

  0x0000022c59668050: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59668050: 0066 90e8 

  0x0000022c59668054: ; ImmutableOopMap {[40]=Oop [136]=Oop [160]=Oop [168]=Oop [176]=Oop }
                      ;*baload {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.PNGImageDecoder::produceImage@1042 (line 340)
  0x0000022c59668054: a8ec a5ff | 4c8b 5424 | 304c 8954 | 2428 448b | 5424 7c44 | 8954 243c | 448b 5c24 | 4044 8b54 
  0x0000022c59668074: 244c 4489 | 5c24 3844 | 8954 2444 | 448b 5c24 | 4844 8b54 | 2454 4489 | 5c24 4044 | 8954 244c 
  0x0000022c59668094: 448b 5c24 | 5044 8b54 | 2468 4489 | 5c24 4844 | 8954 2454 | 448b 5c24 | 5844 8b54 | 2470 4489 
  0x0000022c596680b4: 5c24 5044 | 8954 245c | 448b 9c24 | 8000 0000 | 448b 5424 | 74ba f6ff | ffff 4489 | 5c24 6044 
  0x0000022c596680d4: 8954 2464 

  0x0000022c596680d8: ;   {runtime_call UncommonTrapBlob}
  0x0000022c596680d8: 6666 90e8 

  0x0000022c596680dc: ; ImmutableOopMap {[40]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.misc.InternalLock::lock@4 (line 74)
                      ; - java.io.BufferedInputStream::read@11 (line 274)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@871 (line 324)
  0x0000022c596680dc: 20ec a5ff | 4c8b 5424 | 3044 8b5c | 247c 4c89 | 5424 2844 | 895c 243c | 448b 5424 | 4044 8b5c 
  0x0000022c596680fc: 244c 4489 | 5424 3844 | 895c 2444 | 448b 5424 | 4844 8b5c | 2454 4489 | 5424 4044 | 895c 244c 
  0x0000022c5966811c: 448b 5424 | 5044 8b5c | 2468 4489 | 5424 4844 | 895c 2454 | 448b 5424 | 5844 8b5c | 2470 4489 
  0x0000022c5966813c: 5424 5044 | 895c 245c | 448b 5424 | 6c44 8b5c | 2474 baf6 | ffff ff44 | 8954 2458 | 4489 5c24 
  0x0000022c5966815c: ;   {runtime_call UncommonTrapBlob}
  0x0000022c5966815c: 6466 90e8 

  0x0000022c59668160: ; ImmutableOopMap {[40]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.io.BufferedInputStream::read@23 (line 278)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@871 (line 324)
  0x0000022c59668160: 9ceb a5ff | 4c8b 5424 | 304c 8954 | 2428 448b | 5424 4044 | 8954 2438 | 448b 5c24 | 7c44 8b54 
  0x0000022c59668180: 2448 4489 | 5c24 3c44 | 8954 2440 | 448b 5c24 | 4c44 8b54 | 2454 4489 | 5c24 4444 | 8954 244c 
  0x0000022c596681a0: 448b 5c24 | 5044 8b54 | 2468 4489 | 5c24 4844 | 8954 2454 | 448b 5c24 | 5844 8b54 | 2470 4489 
  0x0000022c596681c0: 5c24 5044 | 8954 245c | 448b 5c24 | 6c44 8b54 | 2474 baf6 | ffff ff44 | 895c 2458 | 4489 5424 
  0x0000022c596681e0: ;   {runtime_call UncommonTrapBlob}
  0x0000022c596681e0: 6466 90e8 

  0x0000022c596681e4: ; ImmutableOopMap {[40]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.misc.InternalLock::unlock@4 (line 78)
                      ; - java.io.BufferedInputStream::read@23 (line 278)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@871 (line 324)
  0x0000022c596681e4: 18eb a5ff | 4c8b 5424 | 3044 8b5c | 247c 4c89 | 5424 2844 | 895c 243c | 448b 5424 | 4044 8b5c 
  0x0000022c59668204: 244c 4489 | 5424 3844 | 895c 2444 | 448b 5424 | 4844 8b5c | 2454 4489 | 5424 4044 | 895c 244c 
  0x0000022c59668224: 448b 5424 | 5044 8b5c | 2468 4489 | 5424 4844 | 895c 2454 | 448b 5424 | 5844 8b5c | 2470 4489 
  0x0000022c59668244: 5424 5044 | 895c 245c | 448b 5424 | 6c44 8b5c | 2474 baf6 | ffff ff44 | 8954 2458 | 4489 5c24 
  0x0000022c59668264: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59668264: 6466 90e8 

  0x0000022c59668268: ; ImmutableOopMap {[40]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokevirtual release {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - jdk.internal.misc.InternalLock::unlock@4 (line 78)
                      ; - java.io.BufferedInputStream::read@23 (line 278)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@871 (line 324)
  0x0000022c59668268: 94ea a5ff | 4c8b 5424 | 304c 8954 | 2428 448b | 5424 4044 | 8b5c 247c | 4489 5424 | 3844 895c 
  0x0000022c59668288: 243c 448b | 5424 4844 | 8b5c 244c | 4489 5424 | 4044 895c | 2444 448b | 5424 5044 | 8b5c 2454 
  0x0000022c596682a8: 4489 5424 | 4844 895c | 244c 448b | 5424 5844 | 8b5c 2468 | 4489 5424 | 5044 895c | 2454 448b 
  0x0000022c596682c8: 5424 6c44 | 8b5c 2470 | 4489 5424 | 5844 895c | 245c 448b | 9424 8000 | 0000 448b | 5c24 7444 
  0x0000022c596682e8: 8954 2460 | 4489 5c24 | 644c 8b94 | 2498 0000 | 0044 8b9c | 2488 0000 | 00ba f6ff | ffff 4c89 
  0x0000022c59668308: 5424 7844 | 895c 246c 

  0x0000022c59668310: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59668310: 6666 90e8 

  0x0000022c59668314: ; ImmutableOopMap {[40]=Oop [120]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokevirtual lock {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.misc.InternalLock::lock@4 (line 74)
                      ; - java.io.BufferedInputStream::read@11 (line 359)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59668314: e8e9 a5ff | 4c8b 5424 | 304c 8954 | 2428 448b | 5424 4044 | 8b5c 247c | 4489 5424 | 3844 895c 
  0x0000022c59668334: 243c 448b | 5424 4844 | 8b5c 244c | 4489 5424 | 4044 895c | 2444 448b | 5424 5044 | 8b5c 2454 
  0x0000022c59668354: 4489 5424 | 4844 895c | 244c 448b | 5424 5844 | 8b5c 2468 | 4489 5424 | 5044 895c | 2454 448b 
  0x0000022c59668374: 5424 6c44 | 8b5c 2470 | 4489 5424 | 5844 895c | 245c 448b | 9424 8000 | 0000 448b | 5c24 74ba 
  0x0000022c59668394: f6ff ffff | 4489 5424 | 6044 895c 

  0x0000022c596683a0: ;   {runtime_call UncommonTrapBlob}
  0x0000022c596683a0: 2464 90e8 

  0x0000022c596683a4: ; ImmutableOopMap {[40]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.io.BufferedInputStream::read@27 (line 363)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c596683a4: 58e9 a5ff | 4c8b 5424 | 304c 8954 | 2428 448b | 5c24 7c44 | 8b54 2440 | 4489 5c24 | 3c44 8954 
  0x0000022c596683c4: 2438 448b | 5c24 4c44 | 8b54 2448 | 4489 5c24 | 4444 8954 | 2440 448b | 5c24 5044 | 8b54 2454 
  0x0000022c596683e4: 4489 5c24 | 4844 8954 | 244c 448b | 5c24 5844 | 8b54 2468 | 4489 5c24 | 5044 8954 | 2454 448b 
  0x0000022c59668404: 5c24 6c44 | 8b54 2470 | 4489 5c24 | 5844 8954 | 245c 448b | 9c24 8000 | 0000 448b | 5424 74ba 
  0x0000022c59668424: f6ff ffff | 4489 5c24 | 6044 8954 

  0x0000022c59668430: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59668430: 2464 90e8 

  0x0000022c59668434: ; ImmutableOopMap {[40]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - jdk.internal.misc.InternalLock::unlock@4 (line 78)
                      ; - java.io.BufferedInputStream::read@27 (line 363)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59668434: c8e8 a5ff | 4c8b 5424 | 304c 8954 | 2428 448b | 5424 4044 | 8b5c 247c | 4489 5424 | 3844 895c 
  0x0000022c59668454: 243c 448b | 5424 4844 | 8b5c 244c | 4489 5424 | 4044 895c | 2444 448b | 5424 5044 | 8b5c 2454 
  0x0000022c59668474: 4489 5424 | 4844 895c | 244c 448b | 5424 5844 | 8b5c 2468 | 4489 5424 | 5044 895c | 2454 448b 
  0x0000022c59668494: 5424 6c44 | 8b5c 2470 | 4489 5424 | 5844 895c | 245c 448b | 9424 8000 | 0000 448b | 5c24 74ba 
  0x0000022c596684b4: f6ff ffff | 4489 5424 | 6044 895c 

  0x0000022c596684c0: ;   {runtime_call UncommonTrapBlob}
  0x0000022c596684c0: 2464 90e8 

  0x0000022c596684c4: ; ImmutableOopMap {[40]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokevirtual release {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.util.concurrent.locks.ReentrantLock::unlock@5 (line 494)
                      ; - jdk.internal.misc.InternalLock::unlock@4 (line 78)
                      ; - java.io.BufferedInputStream::read@27 (line 363)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c596684c4: 38e8 a5ff | 4c8b 5424 | 304c 8954 | 2428 448b | 5424 4044 | 8954 2438 | 448b 5424 | 4844 8954 
  0x0000022c596684e4: 2440 448b | 5424 4c44 | 8954 2444 | 448b 5424 | 5444 8954 | 244c 448b | 5424 6844 | 8954 2454 
  0x0000022c59668504: 448b 4424 | 7c44 8b54 | 2470 4489 | 4424 3c44 | 8954 245c | 448b 4424 | 5044 8b54 | 2474 4489 
  0x0000022c59668524: 4424 4844 | 8954 2464 | 448b 4424 | 584c 8b94 | 2498 0000 | 0044 8944 | 2450 4c89 | 5424 7844 
  0x0000022c59668544: 8b44 246c | 448b 9424 | 8800 0000 | 4489 4424 | 5844 8954 | 246c 448b | 8424 8000 | 0000 4c8b 
  0x0000022c59668564: 9424 a800 | 0000 ba45 | ffff ff48 | 8bac 24a0 | 0000 0044 | 8944 2460 | 4c89 9424 | 8800 0000 
  0x0000022c59668584: 4c89 9424 | 9000 0000 | 4489 9c24 | ac00 0000 

  0x0000022c59668594: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59668594: 6666 90e8 

  0x0000022c59668598: ; ImmutableOopMap {rbp=Oop [40]=Oop [120]=Oop [136]=Oop [144]=Oop [172]=NarrowOop [176]=Oop [184]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.io.BufferedInputStream::implRead@96 (line 390)
                      ; - java.io.BufferedInputStream::read@18 (line 361)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59668598: 64e7 a5ff | 4c8b 5424 | 3044 8b5c | 2440 4c89 | 5424 2844 | 895c 2438 | 448b 5424 | 7c44 8b5c 
  0x0000022c596685b8: 2448 4489 | 5424 3c44 | 895c 2440 | 448b 5424 | 4c44 8b5c | 2454 4489 | 5424 4444 | 895c 244c 
  0x0000022c596685d8: 448b 5424 | 5044 8b5c | 2468 4489 | 5424 4844 | 895c 2454 | 448b 5424 | 5844 8b5c | 2470 4489 
  0x0000022c596685f8: 5424 5044 | 895c 245c | 448b 5424 | 6c44 8b5c | 2474 ba76 | ffff ff44 | 8954 2458 | 4489 5c24 
  0x0000022c59668618: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59668618: 6466 90e8 

  0x0000022c5966861c: ; ImmutableOopMap {[40]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) sun.awt.image.PNGImageDecoder::produceImage@883 (line 325)
  0x0000022c5966861c: e0e6 a5ff | 448b 5c24 | 7c44 895c | 2444 448b | 5424 6844 | 8b5c 246c | 4489 5424 | 5c44 895c 
  0x0000022c5966863c: 2460 448b | 5424 7044 | 8b9c 2480 | 0000 00ba | 45ff ffff | 4489 5424 | 6444 895c 

  0x0000022c59668658: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59668658: 2468 90e8 

  0x0000022c5966865c: ; ImmutableOopMap {rbp=NarrowOop [48]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.io.BufferedInputStream::read@4 (line 273)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@871 (line 324)
  0x0000022c5966865c: a0e6 a5ff | 448b 4424 | 4044 8944 | 2438 4c8b | 5424 3044 | 8b44 2448 | 4c89 5424 | 2844 8944 
  0x0000022c5966867c: 2440 448b | 5424 7c44 | 8b44 244c | 4489 5424 | 3c44 8944 | 2444 448b | 5424 5044 | 8b44 2454 
  0x0000022c5966869c: 4489 5424 | 4844 8944 | 244c 448b | 5424 5844 | 8b44 2468 | 4489 5424 | 5044 8944 | 2454 448b 
  0x0000022c596686bc: 5424 6c44 | 8b44 2470 | 4489 5424 | 5844 8944 | 245c 448b | 9424 8000 | 0000 448b | 4424 74ba 
  0x0000022c596686dc: 45ff ffff | 4489 5424 | 6044 8944 | 2464 4489 | 9c24 9000 

  0x0000022c596686f0: ;   {runtime_call UncommonTrapBlob}
  0x0000022c596686f0: 0000 90e8 

  0x0000022c596686f4: ; ImmutableOopMap {[40]=Oop [144]=NarrowOop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*ifnonnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.io.BufferedInputStream::getBufIfOpen@6 (line 171)
                      ; - java.io.BufferedInputStream::implRead@29 (line 293)
                      ; - java.io.BufferedInputStream::read@15 (line 276)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@871 (line 324)
  0x0000022c596686f4: 08e6 a5ff | 4c8b 9424 | a000 0000 | 4c89 5424 | 2044 8b54 | 247c 448b | 5c24 6844 | 8954 2444 
  0x0000022c59668714: 4489 5c24 | 5c44 8b54 | 246c 448b | 5c24 7044 | 8954 2460 | 4489 5c24 | 6444 8b94 | 2480 0000 
  0x0000022c59668734: 0044 8b5c | 2474 4489 | 5424 6844 | 895c 246c | 4c8b 9424 | 9800 0000 | 448b 9c24 | 8800 0000 
  0x0000022c59668754: ba45 ffff | ff4c 8994 | 2480 0000 | 0044 895c 

  0x0000022c59668764: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59668764: 2474 90e8 

  0x0000022c59668768: ; ImmutableOopMap {rbp=NarrowOop [32]=Oop [48]=Oop [128]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*ifnull {reexecute=1 rethrow=0 return_oop=0}
                      ; - (reexecute) java.io.BufferedInputStream::read@4 (line 358)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59668768: 94e5 a5ff | 448b 5808 | 49ba 0000 | 0000 0800 | 0000 4d03 | d34d 8b52 

  0x0000022c59668780: ;   {metadata('java/io/IOException')}
  0x0000022c59668780: 4849 bba8 | 3204 0108 | 0000 004d | 3bd3 0f84 | b4e5 ffff | 488d 8424 | 0001 0000 | 4881 3800 
  0x0000022c596687a0: 0000 000f | 847e 0000 | 004c 8b55 | 0041 f6c2 | 0274 6b49 | 81ba 8600 | 0000 0000 | 0000 7409 
  0x0000022c596687c0: 49ff 8a86 | 0000 00eb | 5149 8b82 | 9600 0000 | 490b 828e | 0000 0075 | 0a49 c742 | 3e00 0000 
  0x0000022c596687e0: 00eb 4449 | 81ba 9e00 | 0000 0000 | 0000 7425 | 4833 c049 | c742 3e00 | 0000 00f0 | 8304 2400 
  0x0000022c59668800: 4981 ba9e | 0000 0000 | 0000 0075 | 0df0 4d0f | b17a 3e75 | 0583 c801 | eb0d a800 | eb09 4c8b 
  0x0000022c59668820: 10f0 4c0f | b155 000f | 84b4 e5ff | ff48 8d94 | 2400 0100 | 004d 8bc7 | 488b cd49 | ba40 1ae8 
  0x0000022c59668840: 2afc 7f00 | 0041 ffd2 | e994 e5ff | ff48 8944 | 2420 488b | ac24 a000 | 0000 e9fd | 0400 0048 
  0x0000022c59668860: 8944 2420 | 488b ac24 | a000 0000 | e9eb 0400 | 0048 8bd8 | 488d 8424 | 0001 0000 | 4c8b dd48 
  0x0000022c59668880: 8138 0000 | 0000 0f84 | 7c00 0000 | 4d8b 1341 | f6c2 0274 | 6b49 81ba | 8600 0000 | 0000 0000 
  0x0000022c596688a0: 7409 49ff | 8a86 0000 | 00eb 5149 | 8b82 9600 | 0000 490b | 828e 0000 | 0075 0a49 | c742 3e00 
  0x0000022c596688c0: 0000 00eb | 4349 81ba | 9e00 0000 | 0000 0000 | 7425 4833 | c049 c742 | 3e00 0000 | 00f0 8304 
  0x0000022c596688e0: 2400 4981 | ba9e 0000 | 0000 0000 | 0075 0df0 | 4d0f b17a | 3e75 0583 | c801 eb0c | a800 eb08 
  0x0000022c59668900: 4c8b 10f0 | 4d0f b113 | 0f85 5605 | 0000 4c8b | c345 8b58 | 08e9 4301 | 0000 448b | 5808 e924 
  0x0000022c59668920: 0200 0044 | 8b58 0849 | ba00 0000 | 0008 0000 | 004d 03d3 | 4d8b 5248 

  0x0000022c59668938: ;   {metadata('java/io/IOException')}
  0x0000022c59668938: 49bb a832 | 0401 0800 | 0000 4d3b | d30f 8502 | ffff ff48 | 8944 2420 | e999 0300 | 0044 8b50 
  0x0000022c59668958: 0849 bb00 | 0000 0008 | 0000 004d | 03da 4d8b 

  0x0000022c59668968: ;   {metadata('java/io/IOException')}
  0x0000022c59668968: 5348 49bb | a832 0401 | 0800 0000 | 4d3b d30f | 85e2 feff | ff48 8944 | 2420 e967 | 0300 00e9 
  0x0000022c59668988: 1502 0000 | 4889 4424 | 20e9 c603 | 0000 4889 | 4424 20e9 | bc03 0000 | 448b 5808 | e9be 0200 
  0x0000022c596689a8: 0044 8b58 | 08e9 b502 | 0000 448b | 5808 e98c | 0100 004c | 8bc0 448b | 5808 e996 | 0000 004c 
  0x0000022c596689c8: 8bc0 448b | 5808 e98a | 0000 0048 | 8944 2420 | 488b ac24 | a000 0000 | e977 0300 | 00eb 0044 
  0x0000022c596689e8: 8b58 08e9 | 7702 0000 | eb00 448b | 5808 e94c | 0100 004c | 8944 2420 | 488b ac24 | a000 0000 
  0x0000022c59668a08: e94f 0300 | 0044 8b50 | 0849 bb00 | 0000 0008 | 0000 004d | 03da 4d8b 

  0x0000022c59668a20: ;   {metadata('java/io/IOException')}
  0x0000022c59668a20: 5348 49bb | a832 0401 | 0800 0000 | 4d3b d375 | a248 8944 | 2420 e9b3 | 0200 0048 | 8944 2420 
  0x0000022c59668a40: 488b ac24 | a000 0000 | e90f 0300 | 004c 8bc0 | 448b 5808 | eb07 4c8b | c044 8b58 | 0849 ba00 
  0x0000022c59668a60: 0000 0008 | 0000 004d | 03d3 4d8b 

  0x0000022c59668a6c: ;   {metadata('java/io/IOException')}
  0x0000022c59668a6c: 5248 49bb | a832 0401 | 0800 0000 | 4d3b d30f | 857a ffff | ff4c 8944 | 2420 e963 | 0200 004c 
  0x0000022c59668a8c: 8b94 24a8 | 0000 0045 | 8b5a 2045 | 85db 4889 | 8424 8800 | 0000 0f84 | 3403 0000 | 498b d34c 
  0x0000022c59668aac: 8b54 2430 | 448b 5c24 | 4044 895c | 2430 448b | 5c24 4844 | 895c 2438 | 4c89 5424 | 2044 8b5c 
  0x0000022c59668acc: 244c 448b | 5424 7c44 | 895c 243c | 4489 5424 | 3444 8b5c | 2450 448b | 5424 5444 | 895c 2440 
  0x0000022c59668aec: 4489 5424 | 4444 8b5c | 2458 448b | 5424 6844 | 895c 2448 | 4489 5424 | 4c44 8b5c | 246c 448b 
  0x0000022c59668b0c: 5424 7044 | 895c 2450 | 4489 5424 | 5444 8b9c | 2480 0000 | 0044 8b54 | 2474 4489 | 5c24 5844 
  0x0000022c59668b2c: 8954 245c 

  0x0000022c59668b30: ;   {optimized virtual_call}
  0x0000022c59668b30: 6666 90e8 

  0x0000022c59668b34: ; ImmutableOopMap {[32]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.io.BufferedInputStream::read@33 (line 278)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@871 (line 324)
  0x0000022c59668b34: 488f a5ff | 4c8b 9424 | 8800 0000 | 458b 5a08 | 498b c249 | ba00 0000 | 0008 0000 | 004d 03d3 
  0x0000022c59668b54: 4d8b 5248 

  0x0000022c59668b58: ;   {metadata('java/io/IOException')}
  0x0000022c59668b58: 49bb a832 | 0401 0800 | 0000 4d3b | d30f 85d0 | feff ff48 | 8944 2420 | e979 0100 | 0048 8944 
  0x0000022c59668b78: 2420 488b | ac24 a000 | 0000 e9d5 | 0100 00eb | 18eb 1648 | 8944 2428 | 488b 5424 

  0x0000022c59668b94: ;   {static_call}
  0x0000022c59668b94: 6066 90e8 

  0x0000022c59668b98: ; ImmutableOopMap {[40]=Oop [48]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokestatic end {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.io.FileInputStream::available@18 (line 477)
                      ; - java.io.BufferedInputStream::implRead@101 (line 390)
                      ; - java.io.BufferedInputStream::read@18 (line 361)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59668b98: e494 a5ff | 488b 4424 | 2848 8be8 | eb08 488b | e8eb 0348 | 8be8 4c8b | 9424 a800 | 0000 458b 
  0x0000022c59668bb8: 5220 4585 | d20f 84c2 | 0100 0049 | 8bd2 4c8b | 5424 3044 | 8b5c 247c | 4c89 5424 | 2844 895c 
  0x0000022c59668bd8: 243c 448b | 5424 4044 | 8b5c 244c | 4489 5424 | 3844 895c | 2444 448b | 5424 4844 | 8b5c 2454 
  0x0000022c59668bf8: 4489 5424 | 4044 895c | 244c 448b | 5424 5044 | 8b5c 2468 | 4489 5424 | 4844 895c | 2454 448b 
  0x0000022c59668c18: 5424 5844 | 8b5c 2470 | 4489 5424 | 5044 895c | 245c 448b | 5424 6c44 | 8b5c 2474 | 4489 5424 
  0x0000022c59668c38: 5844 895c | 2464 448b | 9424 8000 | 0000 448b | 9c24 8800 | 0000 4489 | 5424 6044 | 895c 246c 
  0x0000022c59668c58: ;   {optimized virtual_call}
  0x0000022c59668c58: 6666 90e8 

  0x0000022c59668c5c: ; ImmutableOopMap {rbp=Oop [40]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.io.BufferedInputStream::read@39 (line 363)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59668c5c: 208e a5ff | 448b 5d08 | 488b c549 | ba00 0000 | 0008 0000 | 004d 03d3 | 4d8b 5248 

  0x0000022c59668c78: ;   {metadata('java/io/IOException')}
  0x0000022c59668c78: 49bb a832 | 0401 0800 | 0000 4d3b | d30f 858a | 0000 0048 | 8944 2420 | eb5c 448b | 5008 49bb 
  0x0000022c59668c98: 0000 0000 | 0800 0000 | 4d03 da4d 

  0x0000022c59668ca4: ;   {metadata('java/io/IOException')}
  0x0000022c59668ca4: 8b53 4849 | bba8 3204 | 0108 0000 | 004d 3bd3 | 0f85 bc00 | 0000 4889 | 4424 20eb | 2d44 8b58 
  0x0000022c59668cc4: 0849 ba00 | 0000 0008 | 0000 004d | 03d3 4d8b 

  0x0000022c59668cd4: ;   {metadata('java/io/IOException')}
  0x0000022c59668cd4: 5248 49bb | a832 0401 | 0800 0000 | 4d3b d30f | 858c feff | ff48 8944 | 2420 488b | ac24 a000 
  0x0000022c59668cf4: 0000 440f | b65d 0c45 | 85db 7424 | 488b 9424 | a000 0000 

  0x0000022c59668d08: ;   {optimized virtual_call}
  0x0000022c59668d08: 6666 90e8 

  0x0000022c59668d0c: ; ImmutableOopMap {}
                      ;*invokevirtual close {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.PNGImageDecoder::produceImage@1892 (line 458)
  0x0000022c59668d0c: 708d a5ff | e9cc e0ff | ff48 8944 | 2420 488b | ac24 a000 | 0000 eb38 

  0x0000022c59668d24: ;   {oop("error"{0x00000000c1ce1148})}
  0x0000022c59668d24: 49b8 4811 | cec1 0000 | 0000 488b | 9424 a000 | 0000 4c8b 

  0x0000022c59668d38: ;   {optimized virtual_call}
  0x0000022c59668d38: 4c24 20e8 

  0x0000022c59668d3c: ; ImmutableOopMap {rbp=Oop [32]=Oop [160]=Oop }
                      ;*invokevirtual property {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.PNGImageDecoder::produceImage@1879 (line 453)
  0x0000022c59668d3c: 408d a5ff | 41b8 0300 | 0000 488b | 9424 a000 | 0000 41b9 | 0100 0000 

  0x0000022c59668d54: ;   {optimized virtual_call}
  0x0000022c59668d54: 6666 90e8 

  0x0000022c59668d58: ; ImmutableOopMap {rbp=Oop [32]=Oop [160]=Oop }
                      ;*invokevirtual imageComplete {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.PNGImageDecoder::produceImage@1885 (line 454)
  0x0000022c59668d58: 248d a5ff 

  0x0000022c59668d5c: ;   {optimized virtual_call}
  0x0000022c59668d5c: 488b d5e8 

  0x0000022c59668d60: ; ImmutableOopMap {[32]=Oop }
                      ;*invokevirtual close {reexecute=0 rethrow=0 return_oop=0}
                      ; - sun.awt.image.PNGImageDecoder::produceImage@1905 (line 458)
  0x0000022c59668d60: 1c8d a5ff | 488b 5424 | 2048 81c4 | 1001 0000 

  0x0000022c59668d70: ;   {runtime_call _rethrow_Java}
  0x0000022c59668d70: 5de9 8ab0 | b0ff 4889 | 4424 2048 | 8bac 24a0 | 0000 00eb | d744 8b54 | 2468 4489 | 5424 5c44 
  0x0000022c59668d90: 8b5c 247c | 448b 5424 | 7044 895c | 2444 4489 | 5424 6444 | 8b5c 246c | 448b 5424 | 7444 895c 
  0x0000022c59668db0: 2460 4489 | 5424 6c44 | 8b9c 2480 | 0000 0044 | 8b94 2488 | 0000 00ba | f6ff ffff | 4489 5c24 
  0x0000022c59668dd0: 6844 8954 

  0x0000022c59668dd4: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59668dd4: 2474 90e8 

  0x0000022c59668dd8: ; ImmutableOopMap {rbp=Oop [48]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.io.BufferedInputStream::read@39 (line 363)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@896 (line 326)
  0x0000022c59668dd8: 24df a5ff | 4c8b 5424 | 3044 8b5c | 247c 4c89 | 5424 2844 | 895c 243c | 448b 5424 | 4044 8b5c 
  0x0000022c59668df8: 2448 4489 | 5424 3844 | 895c 2440 | 448b 5424 | 4c44 8b5c | 2454 4489 | 5424 4444 | 895c 244c 
  0x0000022c59668e18: 448b 5424 | 5044 8b5c | 2468 4489 | 5424 4844 | 895c 2454 | 448b 5424 | 5844 8b5c | 2470 4489 
  0x0000022c59668e38: 5424 5044 | 895c 245c | 448b 9424 | 8000 0000 | 448b 5c24 | 74ba f6ff | ffff 4489 | 5424 6044 
  0x0000022c59668e58: 895c 2464 

  0x0000022c59668e5c: ;   {runtime_call UncommonTrapBlob}
  0x0000022c59668e5c: 6666 90e8 

  0x0000022c59668e60: ; ImmutableOopMap {[40]=Oop [136]=Oop [152]=Oop [160]=Oop [168]=Oop [176]=Oop [184]=Oop }
                      ;*invokevirtual unlock {reexecute=0 rethrow=0 return_oop=0}
                      ; - java.io.BufferedInputStream::read@33 (line 278)
                      ; - sun.awt.image.PNGImageDecoder::produceImage@871 (line 324)
  0x0000022c59668e60: 9cde a5ff | 488d 9424 | 0001 0000 | 4d8b c749 | 8bcb 49ba | 401a e82a | fc7f 0000 | 41ff d2e9 
  0x0000022c59668e80: 8afa ffff 

  0x0000022c59668e84: ;   {internal_word}
  0x0000022c59668e84: 49ba e96d | 6659 2c02 | 0000 4d89 | 9790 0300 

  0x0000022c59668e94: ;   {runtime_call SafepointBlob}
  0x0000022c59668e94: 00e9 e6ea | a5ff f4f4 | f4f4 f4f4 
[Stub Code]
  0x0000022c59668ea0: ;   {no_reloc}
  0x0000022c59668ea0: 48bb 0000 | 0000 0000 

  0x0000022c59668ea8: ;   {runtime_call}
  0x0000022c59668ea8: 0000 e9fb 

  0x0000022c59668eac: ;   {static_stub}
  0x0000022c59668eac: ffff ff48 | bb30 35c8 | 652c 0200 

  0x0000022c59668eb8: ;   {runtime_call I2C/C2I adapters}
  0x0000022c59668eb8: 00e9 2cae 

  0x0000022c59668ebc: ;   {static_stub}
  0x0000022c59668ebc: b1ff 48bb | 0000 0000 | 0000 0000 

  0x0000022c59668ec8: ;   {runtime_call}
  0x0000022c59668ec8: e9fb ffff 

  0x0000022c59668ecc: ;   {static_stub}
  0x0000022c59668ecc: ff48 bb00 | 0000 0000 

  0x0000022c59668ed4: ;   {runtime_call}
  0x0000022c59668ed4: 0000 00e9 | fbff ffff 

  0x0000022c59668edc: ;   {static_stub}
  0x0000022c59668edc: 48bb 0000 | 0000 0000 

  0x0000022c59668ee4: ;   {runtime_call}
  0x0000022c59668ee4: 0000 e9fb 

  0x0000022c59668ee8: ;   {static_stub}
  0x0000022c59668ee8: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000022c59668ef4: ;   {runtime_call}
  0x0000022c59668ef4: 00e9 fbff 

  0x0000022c59668ef8: ;   {static_stub}
  0x0000022c59668ef8: ffff 48bb | 0000 0000 | 0000 0000 

  0x0000022c59668f04: ;   {runtime_call}
  0x0000022c59668f04: e9fb ffff 

  0x0000022c59668f08: ;   {static_stub}
  0x0000022c59668f08: ff48 bb00 | 0000 0000 

  0x0000022c59668f10: ;   {runtime_call}
  0x0000022c59668f10: 0000 00e9 | fbff ffff 

  0x0000022c59668f18: ;   {static_stub}
  0x0000022c59668f18: 48bb 0000 | 0000 0000 

  0x0000022c59668f20: ;   {runtime_call}
  0x0000022c59668f20: 0000 e9fb 

  0x0000022c59668f24: ;   {static_stub}
  0x0000022c59668f24: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000022c59668f30: ;   {runtime_call}
  0x0000022c59668f30: 00e9 fbff 

  0x0000022c59668f34: ;   {static_stub}
  0x0000022c59668f34: ffff 48bb | 0000 0000 | 0000 0000 

  0x0000022c59668f40: ;   {runtime_call}
  0x0000022c59668f40: e9fb ffff 

  0x0000022c59668f44: ;   {static_stub}
  0x0000022c59668f44: ff48 bb00 | 0000 0000 

  0x0000022c59668f4c: ;   {runtime_call}
  0x0000022c59668f4c: 0000 00e9 | fbff ffff 

  0x0000022c59668f54: ;   {static_stub}
  0x0000022c59668f54: 48bb 0000 | 0000 0000 

  0x0000022c59668f5c: ;   {runtime_call}
  0x0000022c59668f5c: 0000 e9fb 

  0x0000022c59668f60: ;   {static_stub}
  0x0000022c59668f60: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000022c59668f6c: ;   {runtime_call}
  0x0000022c59668f6c: 00e9 fbff 

  0x0000022c59668f70: ;   {static_stub}
  0x0000022c59668f70: ffff 48bb | 0000 0000 | 0000 0000 

  0x0000022c59668f7c: ;   {runtime_call}
  0x0000022c59668f7c: e9fb ffff 

  0x0000022c59668f80: ;   {static_stub}
  0x0000022c59668f80: ff48 bb00 | 0000 0000 

  0x0000022c59668f88: ;   {runtime_call}
  0x0000022c59668f88: 0000 00e9 | fbff ffff 

  0x0000022c59668f90: ;   {static_stub}
  0x0000022c59668f90: 48bb 0000 | 0000 0000 

  0x0000022c59668f98: ;   {runtime_call}
  0x0000022c59668f98: 0000 e9fb 

  0x0000022c59668f9c: ;   {static_stub}
  0x0000022c59668f9c: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000022c59668fa8: ;   {runtime_call}
  0x0000022c59668fa8: 00e9 fbff 

  0x0000022c59668fac: ;   {static_stub}
  0x0000022c59668fac: ffff 48bb | 0000 0000 | 0000 0000 

  0x0000022c59668fb8: ;   {runtime_call}
  0x0000022c59668fb8: e9fb ffff 

  0x0000022c59668fbc: ;   {static_stub}
  0x0000022c59668fbc: ff48 bb00 | 0000 0000 

  0x0000022c59668fc4: ;   {runtime_call}
  0x0000022c59668fc4: 0000 00e9 | fbff ffff 

  0x0000022c59668fcc: ;   {static_stub}
  0x0000022c59668fcc: 48bb 0000 | 0000 0000 

  0x0000022c59668fd4: ;   {runtime_call}
  0x0000022c59668fd4: 0000 e9fb 

  0x0000022c59668fd8: ;   {static_stub}
  0x0000022c59668fd8: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000022c59668fe4: ;   {runtime_call}
  0x0000022c59668fe4: 00e9 fbff 

  0x0000022c59668fe8: ;   {static_stub}
  0x0000022c59668fe8: ffff 48bb | 0000 0000 | 0000 0000 

  0x0000022c59668ff4: ;   {runtime_call}
  0x0000022c59668ff4: e9fb ffff 

  0x0000022c59668ff8: ;   {static_stub}
  0x0000022c59668ff8: ff48 bb00 | 0000 0000 

  0x0000022c59669000: ;   {runtime_call}
  0x0000022c59669000: 0000 00e9 | fbff ffff 

  0x0000022c59669008: ;   {static_stub}
  0x0000022c59669008: 48bb 0000 | 0000 0000 

  0x0000022c59669010: ;   {runtime_call}
  0x0000022c59669010: 0000 e9fb 

  0x0000022c59669014: ;   {static_stub}
  0x0000022c59669014: ffff ff48 | bb00 0000 | 0000 0000 

  0x0000022c59669020: ;   {runtime_call}
  0x0000022c59669020: 00e9 fbff 

  0x0000022c59669024: ;   {runtime_call ExceptionBlob}
  0x0000022c59669024: ffff e955 | 2ea7 ffe8 | 0000 0000 | 4883 2c24 

  0x0000022c59669034: ;   {runtime_call DeoptimizationBlob}
  0x0000022c59669034: 05e9 66e2 | a5ff f4f4 | f4f4 f4f4 
[/MachCode]


---------------  P R O C E S S  ---------------

Threads class SMR info:
_java_thread_list=0x0000022c69b35570, length=17, elements={
0x0000022c49bcb6e0, 0x0000022c654d9df0, 0x0000022c654da920, 0x0000022c654de7e0,
0x0000022c654df4d0, 0x0000022c654dfe00, 0x0000022c654e0730, 0x0000022c654e1c70,
0x0000022c654e5ee0, 0x0000022c654ea630, 0x0000022c49c80710, 0x0000022c698ed5c0,
0x0000022c69a94510, 0x0000022c69a94a50, 0x0000022c69a94f90, 0x0000022c69b74fb0,
0x0000022c69b8a010
}

Java Threads: ( => current thread )
  0x0000022c49bcb6e0 JavaThread "main" [_thread_blocked, id=11040, stack(0x00000081af300000,0x00000081af400000)]
  0x0000022c654d9df0 JavaThread "Reference Handler" daemon [_thread_blocked, id=2496, stack(0x00000081afa00000,0x00000081afb00000)]
  0x0000022c654da920 JavaThread "Finalizer" daemon [_thread_blocked, id=6980, stack(0x00000081afb00000,0x00000081afc00000)]
  0x0000022c654de7e0 JavaThread "Signal Dispatcher" daemon [_thread_blocked, id=4008, stack(0x00000081afc00000,0x00000081afd00000)]
  0x0000022c654df4d0 JavaThread "Attach Listener" daemon [_thread_blocked, id=9124, stack(0x00000081afd00000,0x00000081afe00000)]
  0x0000022c654dfe00 JavaThread "Service Thread" daemon [_thread_blocked, id=8476, stack(0x00000081afe00000,0x00000081aff00000)]
  0x0000022c654e0730 JavaThread "Monitor Deflation Thread" daemon [_thread_blocked, id=6036, stack(0x00000081aff00000,0x00000081b0000000)]
  0x0000022c654e1c70 JavaThread "C2 CompilerThread0" daemon [_thread_in_native, id=11188, stack(0x00000081b0000000,0x00000081b0100000)]
  0x0000022c654e5ee0 JavaThread "C1 CompilerThread0" daemon [_thread_blocked, id=8860, stack(0x00000081b0100000,0x00000081b0200000)]
  0x0000022c654ea630 JavaThread "Sweeper thread" daemon [_thread_blocked, id=11884, stack(0x00000081b0200000,0x00000081b0300000)]
  0x0000022c49c80710 JavaThread "Common-Cleaner" daemon [_thread_blocked, id=11284, stack(0x00000081b0300000,0x00000081b0400000)]
  0x0000022c698ed5c0 JavaThread "Notification Thread" daemon [_thread_blocked, id=7896, stack(0x00000081b0400000,0x00000081b0500000)]
  0x0000022c69a94510 JavaThread "Java2D Disposer" daemon [_thread_blocked, id=7764, stack(0x00000081b0600000,0x00000081b0700000)]
  0x0000022c69a94a50 JavaThread "AWT-Shutdown" [_thread_blocked, id=4240, stack(0x00000081b0700000,0x00000081b0800000)]
  0x0000022c69a94f90 JavaThread "AWT-Windows" daemon [_thread_in_native, id=10524, stack(0x00000081b0800000,0x00000081b0900000)]
  0x0000022c69b74fb0 JavaThread "AWT-EventQueue-0" [_thread_blocked, id=6280, stack(0x00000081b0900000,0x00000081b0a00000)]
=>0x0000022c69b8a010 JavaThread "Image Fetcher 0" daemon [_thread_in_vm, id=5212, stack(0x00000081b0a00000,0x00000081b0b00000)]

Other Threads:
  0x0000022c49c8f140 VMThread "VM Thread" [stack: 0x00000081af900000,0x00000081afa00000] [id=11904]
  0x0000022c698edb00 WatcherThread "VM Periodic Task Thread" [stack: 0x00000081b0500000,0x00000081b0600000] [id=7416]
  0x0000022c49c0c650 WorkerThread "GC Thread#0" [stack: 0x00000081af400000,0x00000081af500000] [id=3268]
  0x0000022c6a395d80 WorkerThread "GC Thread#1" [stack: 0x00000081b0b00000,0x00000081b0c00000] [id=11980]
  0x0000022c6a37f9f0 WorkerThread "GC Thread#2" [stack: 0x00000081b0c00000,0x00000081b0d00000] [id=1400]
  0x0000022c6a37fcc0 WorkerThread "GC Thread#3" [stack: 0x00000081b0d00000,0x00000081b0e00000] [id=10904]
  0x0000022c49c152b0 ConcurrentGCThread "G1 Main Marker" [stack: 0x00000081af500000,0x00000081af600000] [id=4536]
  0x0000022c49c16320 WorkerThread "G1 Conc#0" [stack: 0x00000081af600000,0x00000081af700000] [id=6948]
  0x0000022c49c6af30 ConcurrentGCThread "G1 Refine#0" [stack: 0x00000081af700000,0x00000081af800000] [id=5204]
  0x0000022c49c6b910 ConcurrentGCThread "G1 Service" [stack: 0x00000081af800000,0x00000081af900000] [id=6916]

Threads with active compile tasks:
C2 CompilerThread0     5912 1237   !   4       sun.awt.image.PNGImageDecoder::produceImage (1917 bytes)

VM state: not at safepoint (normal execution)

VM Mutex/Monitor currently owned by a thread:  ([mutex/lock_event])
[0x0000022c49bc5120] Heap_lock - owner thread: 0x0000022c69b8a010

Heap address: 0x00000000c1a00000, size: 998 MB, Compressed Oops mode: 32-bit

CDS archive(s) mapped at: [0x0000000800000000-0x0000000800c40000-0x0000000800c40000), size 12845056, SharedBaseAddress: 0x0000000800000000, ArchiveRelocationMode: 0.
Compressed class space mapped at: 0x0000000801000000-0x0000000841000000, reserved size: 1073741824
Narrow klass base: 0x0000000800000000, Narrow klass shift: 0, Narrow klass range: 0x100000000

GC Precious Log:
 CardTable entry size: 512
 Card Set container configuration: InlinePtr #cards 5 size 8 Array Of Cards #cards 12 size 40 Howl #buckets 4 coarsen threshold 1843 Howl Bitmap #cards 512 size 80 coarsen threshold 460 Card regions per heap region 1 cards per card region 2048
 CPUs: 4 total, 4 available
 Memory: 3985M
 Large Page Support: Disabled
 NUMA Support: Disabled
 Compressed Oops: Enabled (32-bit)
 Heap Region Size: 1M
 Heap Min Capacity: 8M
 Heap Initial Capacity: 64M
 Heap Max Capacity: 998M
 Pre-touch: Disabled
 Parallel Workers: 4
 Concurrent Workers: 1
 Concurrent Refinement Workers: 4
 Periodic GC: Disabled

Heap:
 garbage-first heap   total 180224K, used 100298K [0x00000000c1a00000, 0x0000000100000000)
  region size 1024K, 3 young (3072K), 3 survivors (3072K)
 Metaspace       used 8097K, committed 8320K, reserved 1114112K
  class space    used 878K, committed 960K, reserved 1048576K

Heap Regions: E=young(eden), S=young(survivor), O=old, HS=humongous(starts), HC=humongous(continues), CS=collection set, F=free, OA=open archive, CA=closed archive, TAMS=top-at-mark-start (previous, next)
|   0|0x00000000c1a00000, 0x00000000c1b00000, 0x00000000c1b00000|100%| O|  |TAMS 0x00000000c1b00000, 0x00000000c1b00000| Untracked 
|   1|0x00000000c1b00000, 0x00000000c1c00000, 0x00000000c1c00000|100%| O|  |TAMS 0x00000000c1c00000, 0x00000000c1c00000| Untracked 
|   2|0x00000000c1c00000, 0x00000000c1d00000, 0x00000000c1d00000|100%| O|  |TAMS 0x00000000c1d00000, 0x00000000c1d00000| Untracked 
|   3|0x00000000c1d00000, 0x00000000c1d9a200, 0x00000000c1e00000| 60%| O|  |TAMS 0x00000000c1d9a200, 0x00000000c1d9a200| Untracked 
|   4|0x00000000c1e00000, 0x00000000c1e00000, 0x00000000c1f00000|  0%| F|  |TAMS 0x00000000c1e00000, 0x00000000c1e00000| Untracked 
|   5|0x00000000c1f00000, 0x00000000c1f00000, 0x00000000c2000000|  0%| F|  |TAMS 0x00000000c1f00000, 0x00000000c1f00000| Untracked 
|   6|0x00000000c2000000, 0x00000000c2000000, 0x00000000c2100000|  0%| F|  |TAMS 0x00000000c2000000, 0x00000000c2000000| Untracked 
|   7|0x00000000c2100000, 0x00000000c2100000, 0x00000000c2200000|  0%| F|  |TAMS 0x00000000c2100000, 0x00000000c2100000| Untracked 
|   8|0x00000000c2200000, 0x00000000c2200000, 0x00000000c2300000|  0%| F|  |TAMS 0x00000000c2200000, 0x00000000c2200000| Untracked 
|   9|0x00000000c2300000, 0x00000000c2300000, 0x00000000c2400000|  0%| F|  |TAMS 0x00000000c2300000, 0x00000000c2300000| Untracked 
|  10|0x00000000c2400000, 0x00000000c2400000, 0x00000000c2500000|  0%| F|  |TAMS 0x00000000c2400000, 0x00000000c2400000| Untracked 
|  11|0x00000000c2500000, 0x00000000c2500000, 0x00000000c2600000|  0%| F|  |TAMS 0x00000000c2500000, 0x00000000c2500000| Untracked 
|  12|0x00000000c2600000, 0x00000000c2600000, 0x00000000c2700000|  0%| F|  |TAMS 0x00000000c2600000, 0x00000000c2600000| Untracked 
|  13|0x00000000c2700000, 0x00000000c2700000, 0x00000000c2800000|  0%| F|  |TAMS 0x00000000c2700000, 0x00000000c2700000| Untracked 
|  14|0x00000000c2800000, 0x00000000c2800000, 0x00000000c2900000|  0%| F|  |TAMS 0x00000000c2800000, 0x00000000c2800000| Untracked 
|  15|0x00000000c2900000, 0x00000000c2900000, 0x00000000c2a00000|  0%| F|  |TAMS 0x00000000c2900000, 0x00000000c2900000| Untracked 
|  16|0x00000000c2a00000, 0x00000000c2a00000, 0x00000000c2b00000|  0%| F|  |TAMS 0x00000000c2a00000, 0x00000000c2a00000| Untracked 
|  17|0x00000000c2b00000, 0x00000000c2b00000, 0x00000000c2c00000|  0%| F|  |TAMS 0x00000000c2b00000, 0x00000000c2b00000| Untracked 
|  18|0x00000000c2c00000, 0x00000000c2c00000, 0x00000000c2d00000|  0%| F|  |TAMS 0x00000000c2c00000, 0x00000000c2c00000| Untracked 
|  19|0x00000000c2d00000, 0x00000000c2d00000, 0x00000000c2e00000|  0%| F|  |TAMS 0x00000000c2d00000, 0x00000000c2d00000| Untracked 
|  20|0x00000000c2e00000, 0x00000000c2e00000, 0x00000000c2f00000|  0%| F|  |TAMS 0x00000000c2e00000, 0x00000000c2e00000| Untracked 
|  21|0x00000000c2f00000, 0x00000000c2f00000, 0x00000000c3000000|  0%| F|  |TAMS 0x00000000c2f00000, 0x00000000c2f00000| Untracked 
|  22|0x00000000c3000000, 0x00000000c3000000, 0x00000000c3100000|  0%| F|  |TAMS 0x00000000c3000000, 0x00000000c3000000| Untracked 
|  23|0x00000000c3100000, 0x00000000c3100000, 0x00000000c3200000|  0%| F|  |TAMS 0x00000000c3100000, 0x00000000c3100000| Untracked 
|  24|0x00000000c3200000, 0x00000000c3200000, 0x00000000c3300000|  0%| F|  |TAMS 0x00000000c3200000, 0x00000000c3200000| Untracked 
|  25|0x00000000c3300000, 0x00000000c3300000, 0x00000000c3400000|  0%| F|  |TAMS 0x00000000c3300000, 0x00000000c3300000| Untracked 
|  26|0x00000000c3400000, 0x00000000c3458660, 0x00000000c3500000| 34%| S|CS|TAMS 0x00000000c3400000, 0x00000000c3400000| Complete 
|  27|0x00000000c3500000, 0x00000000c3600000, 0x00000000c3600000|100%| S|CS|TAMS 0x00000000c3500000, 0x00000000c3500000| Complete 
|  28|0x00000000c3600000, 0x00000000c3700000, 0x00000000c3700000|100%| S|CS|TAMS 0x00000000c3600000, 0x00000000c3600000| Complete 
|  29|0x00000000c3700000, 0x00000000c3700000, 0x00000000c3800000|  0%| F|  |TAMS 0x00000000c3700000, 0x00000000c3700000| Untracked 
|  30|0x00000000c3800000, 0x00000000c3800000, 0x00000000c3900000|  0%| F|  |TAMS 0x00000000c3800000, 0x00000000c3800000| Untracked 
|  31|0x00000000c3900000, 0x00000000c3900000, 0x00000000c3a00000|  0%| F|  |TAMS 0x00000000c3900000, 0x00000000c3900000| Untracked 
|  32|0x00000000c3a00000, 0x00000000c3a00000, 0x00000000c3b00000|  0%| F|  |TAMS 0x00000000c3a00000, 0x00000000c3a00000| Untracked 
|  33|0x00000000c3b00000, 0x00000000c3b00000, 0x00000000c3c00000|  0%| F|  |TAMS 0x00000000c3b00000, 0x00000000c3b00000| Untracked 
|  34|0x00000000c3c00000, 0x00000000c3c00000, 0x00000000c3d00000|  0%| F|  |TAMS 0x00000000c3c00000, 0x00000000c3c00000| Untracked 
|  35|0x00000000c3d00000, 0x00000000c3d00000, 0x00000000c3e00000|  0%| F|  |TAMS 0x00000000c3d00000, 0x00000000c3d00000| Untracked 
|  36|0x00000000c3e00000, 0x00000000c3e00000, 0x00000000c3f00000|  0%| F|  |TAMS 0x00000000c3e00000, 0x00000000c3e00000| Untracked 
|  37|0x00000000c3f00000, 0x00000000c3f00000, 0x00000000c4000000|  0%| F|  |TAMS 0x00000000c3f00000, 0x00000000c3f00000| Untracked 
|  38|0x00000000c4000000, 0x00000000c4000000, 0x00000000c4100000|  0%| F|  |TAMS 0x00000000c4000000, 0x00000000c4000000| Untracked 
|  39|0x00000000c4100000, 0x00000000c4100000, 0x00000000c4200000|  0%| F|  |TAMS 0x00000000c4100000, 0x00000000c4100000| Untracked 
|  40|0x00000000c4200000, 0x00000000c4200000, 0x00000000c4300000|  0%| F|  |TAMS 0x00000000c4200000, 0x00000000c4200000| Untracked 
|  41|0x00000000c4300000, 0x00000000c4300000, 0x00000000c4400000|  0%| F|  |TAMS 0x00000000c4300000, 0x00000000c4300000| Untracked 
|  42|0x00000000c4400000, 0x00000000c4400000, 0x00000000c4500000|  0%| F|  |TAMS 0x00000000c4400000, 0x00000000c4400000| Untracked 
|  43|0x00000000c4500000, 0x00000000c4500000, 0x00000000c4600000|  0%| F|  |TAMS 0x00000000c4500000, 0x00000000c4500000| Untracked 
|  44|0x00000000c4600000, 0x00000000c4600000, 0x00000000c4700000|  0%| F|  |TAMS 0x00000000c4600000, 0x00000000c4600000| Untracked 
|  45|0x00000000c4700000, 0x00000000c4700000, 0x00000000c4800000|  0%| F|  |TAMS 0x00000000c4700000, 0x00000000c4700000| Untracked 
|  46|0x00000000c4800000, 0x00000000c4800000, 0x00000000c4900000|  0%| F|  |TAMS 0x00000000c4800000, 0x00000000c4800000| Untracked 
|  47|0x00000000c4900000, 0x00000000c4900000, 0x00000000c4a00000|  0%| F|  |TAMS 0x00000000c4900000, 0x00000000c4900000| Untracked 
|  48|0x00000000c4a00000, 0x00000000c4a00000, 0x00000000c4b00000|  0%| F|  |TAMS 0x00000000c4a00000, 0x00000000c4a00000| Untracked 
|  49|0x00000000c4b00000, 0x00000000c4b00000, 0x00000000c4c00000|  0%| F|  |TAMS 0x00000000c4b00000, 0x00000000c4b00000| Untracked 
|  50|0x00000000c4c00000, 0x00000000c4c00000, 0x00000000c4d00000|  0%| F|  |TAMS 0x00000000c4c00000, 0x00000000c4c00000| Untracked 
|  51|0x00000000c4d00000, 0x00000000c4d00000, 0x00000000c4e00000|  0%| F|  |TAMS 0x00000000c4d00000, 0x00000000c4d00000| Untracked 
|  52|0x00000000c4e00000, 0x00000000c4f00000, 0x00000000c4f00000|100%|HS|  |TAMS 0x00000000c4f00000, 0x00000000c4f00000| Complete 
|  53|0x00000000c4f00000, 0x00000000c5000000, 0x00000000c5000000|100%|HC|  |TAMS 0x00000000c5000000, 0x00000000c5000000| Complete 
|  54|0x00000000c5000000, 0x00000000c5100000, 0x00000000c5100000|100%|HC|  |TAMS 0x00000000c5100000, 0x00000000c5100000| Complete 
|  55|0x00000000c5100000, 0x00000000c5200000, 0x00000000c5200000|100%|HC|  |TAMS 0x00000000c5200000, 0x00000000c5200000| Complete 
|  56|0x00000000c5200000, 0x00000000c5300000, 0x00000000c5300000|100%|HC|  |TAMS 0x00000000c5300000, 0x00000000c5300000| Complete 
|  57|0x00000000c5300000, 0x00000000c5400000, 0x00000000c5400000|100%|HC|  |TAMS 0x00000000c5400000, 0x00000000c5400000| Complete 
|  58|0x00000000c5400000, 0x00000000c5500000, 0x00000000c5500000|100%|HC|  |TAMS 0x00000000c5500000, 0x00000000c5500000| Complete 
|  59|0x00000000c5500000, 0x00000000c5600000, 0x00000000c5600000|100%|HC|  |TAMS 0x00000000c5600000, 0x00000000c5600000| Complete 
|  60|0x00000000c5600000, 0x00000000c5700000, 0x00000000c5700000|100%|HC|  |TAMS 0x00000000c5700000, 0x00000000c5700000| Complete 
|  61|0x00000000c5700000, 0x00000000c5800000, 0x00000000c5800000|100%|HC|  |TAMS 0x00000000c5800000, 0x00000000c5800000| Complete 
|  62|0x00000000c5800000, 0x00000000c5900000, 0x00000000c5900000|100%|HC|  |TAMS 0x00000000c5900000, 0x00000000c5900000| Complete 
|  63|0x00000000c5900000, 0x00000000c5a00000, 0x00000000c5a00000|100%|HC|  |TAMS 0x00000000c5a00000, 0x00000000c5a00000| Complete 
|  64|0x00000000c5a00000, 0x00000000c5b00000, 0x00000000c5b00000|100%|HC|  |TAMS 0x00000000c5b00000, 0x00000000c5b00000| Complete 
|  65|0x00000000c5b00000, 0x00000000c5c00000, 0x00000000c5c00000|100%|HC|  |TAMS 0x00000000c5c00000, 0x00000000c5c00000| Complete 
|  66|0x00000000c5c00000, 0x00000000c5d00000, 0x00000000c5d00000|100%|HC|  |TAMS 0x00000000c5d00000, 0x00000000c5d00000| Complete 
|  67|0x00000000c5d00000, 0x00000000c5e00000, 0x00000000c5e00000|100%|HC|  |TAMS 0x00000000c5e00000, 0x00000000c5e00000| Complete 
|  68|0x00000000c5e00000, 0x00000000c5f00000, 0x00000000c5f00000|100%|HC|  |TAMS 0x00000000c5f00000, 0x00000000c5f00000| Complete 
|  69|0x00000000c5f00000, 0x00000000c6000000, 0x00000000c6000000|100%|HC|  |TAMS 0x00000000c6000000, 0x00000000c6000000| Complete 
|  70|0x00000000c6000000, 0x00000000c6100000, 0x00000000c6100000|100%|HC|  |TAMS 0x00000000c6100000, 0x00000000c6100000| Complete 
|  71|0x00000000c6100000, 0x00000000c6200000, 0x00000000c6200000|100%|HC|  |TAMS 0x00000000c6200000, 0x00000000c6200000| Complete 
|  72|0x00000000c6200000, 0x00000000c6300000, 0x00000000c6300000|100%|HC|  |TAMS 0x00000000c6300000, 0x00000000c6300000| Complete 
|  73|0x00000000c6300000, 0x00000000c6400000, 0x00000000c6400000|100%|HC|  |TAMS 0x00000000c6400000, 0x00000000c6400000| Complete 
|  74|0x00000000c6400000, 0x00000000c6500000, 0x00000000c6500000|100%|HC|  |TAMS 0x00000000c6500000, 0x00000000c6500000| Complete 
|  75|0x00000000c6500000, 0x00000000c6600000, 0x00000000c6600000|100%|HC|  |TAMS 0x00000000c6600000, 0x00000000c6600000| Complete 
|  76|0x00000000c6600000, 0x00000000c6700000, 0x00000000c6700000|100%|HC|  |TAMS 0x00000000c6700000, 0x00000000c6700000| Complete 
|  77|0x00000000c6700000, 0x00000000c6800000, 0x00000000c6800000|100%|HC|  |TAMS 0x00000000c6800000, 0x00000000c6800000| Complete 
|  78|0x00000000c6800000, 0x00000000c6900000, 0x00000000c6900000|100%|HC|  |TAMS 0x00000000c6900000, 0x00000000c6900000| Complete 
|  79|0x00000000c6900000, 0x00000000c6a00000, 0x00000000c6a00000|100%|HC|  |TAMS 0x00000000c6a00000, 0x00000000c6a00000| Complete 
|  80|0x00000000c6a00000, 0x00000000c6b00000, 0x00000000c6b00000|100%|HC|  |TAMS 0x00000000c6b00000, 0x00000000c6b00000| Complete 
|  81|0x00000000c6b00000, 0x00000000c6c00000, 0x00000000c6c00000|100%|HC|  |TAMS 0x00000000c6c00000, 0x00000000c6c00000| Complete 
|  82|0x00000000c6c00000, 0x00000000c6d00000, 0x00000000c6d00000|100%|HC|  |TAMS 0x00000000c6d00000, 0x00000000c6d00000| Complete 
|  83|0x00000000c6d00000, 0x00000000c6e00000, 0x00000000c6e00000|100%|HC|  |TAMS 0x00000000c6e00000, 0x00000000c6e00000| Complete 
|  84|0x00000000c6e00000, 0x00000000c6f00000, 0x00000000c6f00000|100%|HC|  |TAMS 0x00000000c6f00000, 0x00000000c6f00000| Complete 
|  85|0x00000000c6f00000, 0x00000000c7000000, 0x00000000c7000000|100%|HC|  |TAMS 0x00000000c7000000, 0x00000000c7000000| Complete 
|  86|0x00000000c7000000, 0x00000000c7100000, 0x00000000c7100000|100%|HC|  |TAMS 0x00000000c7100000, 0x00000000c7100000| Complete 
|  87|0x00000000c7100000, 0x00000000c7200000, 0x00000000c7200000|100%|HC|  |TAMS 0x00000000c7200000, 0x00000000c7200000| Complete 
|  88|0x00000000c7200000, 0x00000000c7300000, 0x00000000c7300000|100%|HC|  |TAMS 0x00000000c7300000, 0x00000000c7300000| Complete 
|  89|0x00000000c7300000, 0x00000000c7400000, 0x00000000c7400000|100%|HC|  |TAMS 0x00000000c7400000, 0x00000000c7400000| Complete 
|  90|0x00000000c7400000, 0x00000000c7500000, 0x00000000c7500000|100%|HC|  |TAMS 0x00000000c7500000, 0x00000000c7500000| Complete 
|  91|0x00000000c7500000, 0x00000000c7600000, 0x00000000c7600000|100%|HC|  |TAMS 0x00000000c7600000, 0x00000000c7600000| Complete 
|  92|0x00000000c7600000, 0x00000000c7700000, 0x00000000c7700000|100%|HC|  |TAMS 0x00000000c7700000, 0x00000000c7700000| Complete 
|  93|0x00000000c7700000, 0x00000000c7800000, 0x00000000c7800000|100%|HC|  |TAMS 0x00000000c7800000, 0x00000000c7800000| Complete 
|  94|0x00000000c7800000, 0x00000000c7900000, 0x00000000c7900000|100%|HC|  |TAMS 0x00000000c7900000, 0x00000000c7900000| Complete 
|  95|0x00000000c7900000, 0x00000000c7a00000, 0x00000000c7a00000|100%|HC|  |TAMS 0x00000000c7a00000, 0x00000000c7a00000| Complete 
|  96|0x00000000c7a00000, 0x00000000c7b00000, 0x00000000c7b00000|100%|HC|  |TAMS 0x00000000c7b00000, 0x00000000c7b00000| Complete 
|  97|0x00000000c7b00000, 0x00000000c7c00000, 0x00000000c7c00000|100%|HC|  |TAMS 0x00000000c7c00000, 0x00000000c7c00000| Complete 
|  98|0x00000000c7c00000, 0x00000000c7d00000, 0x00000000c7d00000|100%|HC|  |TAMS 0x00000000c7d00000, 0x00000000c7d00000| Complete 
|  99|0x00000000c7d00000, 0x00000000c7e00000, 0x00000000c7e00000|100%|HC|  |TAMS 0x00000000c7e00000, 0x00000000c7e00000| Complete 
| 100|0x00000000c7e00000, 0x00000000c7f00000, 0x00000000c7f00000|100%|HC|  |TAMS 0x00000000c7f00000, 0x00000000c7f00000| Complete 
| 101|0x00000000c7f00000, 0x00000000c8000000, 0x00000000c8000000|100%|HC|  |TAMS 0x00000000c8000000, 0x00000000c8000000| Complete 
| 102|0x00000000c8000000, 0x00000000c8100000, 0x00000000c8100000|100%|HC|  |TAMS 0x00000000c8100000, 0x00000000c8100000| Complete 
| 103|0x00000000c8100000, 0x00000000c8200000, 0x00000000c8200000|100%|HC|  |TAMS 0x00000000c8200000, 0x00000000c8200000| Complete 
| 104|0x00000000c8200000, 0x00000000c8300000, 0x00000000c8300000|100%|HC|  |TAMS 0x00000000c8300000, 0x00000000c8300000| Complete 
| 105|0x00000000c8300000, 0x00000000c8400000, 0x00000000c8400000|100%|HC|  |TAMS 0x00000000c8400000, 0x00000000c8400000| Complete 
| 106|0x00000000c8400000, 0x00000000c8500000, 0x00000000c8500000|100%|HC|  |TAMS 0x00000000c8500000, 0x00000000c8500000| Complete 
| 107|0x00000000c8500000, 0x00000000c8600000, 0x00000000c8600000|100%|HC|  |TAMS 0x00000000c8600000, 0x00000000c8600000| Complete 
| 108|0x00000000c8600000, 0x00000000c8700000, 0x00000000c8700000|100%|HC|  |TAMS 0x00000000c8700000, 0x00000000c8700000| Complete 
| 109|0x00000000c8700000, 0x00000000c8800000, 0x00000000c8800000|100%|HC|  |TAMS 0x00000000c8800000, 0x00000000c8800000| Complete 
| 110|0x00000000c8800000, 0x00000000c8900000, 0x00000000c8900000|100%|HC|  |TAMS 0x00000000c8900000, 0x00000000c8900000| Complete 
| 111|0x00000000c8900000, 0x00000000c8a00000, 0x00000000c8a00000|100%|HC|  |TAMS 0x00000000c8a00000, 0x00000000c8a00000| Complete 
| 112|0x00000000c8a00000, 0x00000000c8b00000, 0x00000000c8b00000|100%|HC|  |TAMS 0x00000000c8b00000, 0x00000000c8b00000| Complete 
| 113|0x00000000c8b00000, 0x00000000c8c00000, 0x00000000c8c00000|100%|HC|  |TAMS 0x00000000c8c00000, 0x00000000c8c00000| Complete 
| 114|0x00000000c8c00000, 0x00000000c8d00000, 0x00000000c8d00000|100%|HC|  |TAMS 0x00000000c8d00000, 0x00000000c8d00000| Complete 
| 115|0x00000000c8d00000, 0x00000000c8e00000, 0x00000000c8e00000|100%|HC|  |TAMS 0x00000000c8e00000, 0x00000000c8e00000| Complete 
| 116|0x00000000c8e00000, 0x00000000c8f00000, 0x00000000c8f00000|100%|HC|  |TAMS 0x00000000c8f00000, 0x00000000c8f00000| Complete 
| 117|0x00000000c8f00000, 0x00000000c9000000, 0x00000000c9000000|100%|HC|  |TAMS 0x00000000c9000000, 0x00000000c9000000| Complete 
| 118|0x00000000c9000000, 0x00000000c9100000, 0x00000000c9100000|100%|HC|  |TAMS 0x00000000c9100000, 0x00000000c9100000| Complete 
| 119|0x00000000c9100000, 0x00000000c9200000, 0x00000000c9200000|100%|HC|  |TAMS 0x00000000c9200000, 0x00000000c9200000| Complete 
| 120|0x00000000c9200000, 0x00000000c9300000, 0x00000000c9300000|100%|HC|  |TAMS 0x00000000c9300000, 0x00000000c9300000| Complete 
| 121|0x00000000c9300000, 0x00000000c9400000, 0x00000000c9400000|100%|HC|  |TAMS 0x00000000c9400000, 0x00000000c9400000| Complete 
| 122|0x00000000c9400000, 0x00000000c9500000, 0x00000000c9500000|100%|HC|  |TAMS 0x00000000c9500000, 0x00000000c9500000| Complete 
| 123|0x00000000c9500000, 0x00000000c9600000, 0x00000000c9600000|100%|HC|  |TAMS 0x00000000c9600000, 0x00000000c9600000| Complete 
| 124|0x00000000c9600000, 0x00000000c9700000, 0x00000000c9700000|100%|HC|  |TAMS 0x00000000c9700000, 0x00000000c9700000| Complete 
| 125|0x00000000c9700000, 0x00000000c9800000, 0x00000000c9800000|100%|HC|  |TAMS 0x00000000c9800000, 0x00000000c9800000| Complete 
| 126|0x00000000c9800000, 0x00000000c9900000, 0x00000000c9900000|100%|HC|  |TAMS 0x00000000c9900000, 0x00000000c9900000| Complete 
| 127|0x00000000c9900000, 0x00000000c9a00000, 0x00000000c9a00000|100%|HC|  |TAMS 0x00000000c9a00000, 0x00000000c9a00000| Complete 
| 128|0x00000000c9a00000, 0x00000000c9b00000, 0x00000000c9b00000|100%|HC|  |TAMS 0x00000000c9b00000, 0x00000000c9b00000| Complete 
| 129|0x00000000c9b00000, 0x00000000c9c00000, 0x00000000c9c00000|100%|HC|  |TAMS 0x00000000c9c00000, 0x00000000c9c00000| Complete 
| 130|0x00000000c9c00000, 0x00000000c9d00000, 0x00000000c9d00000|100%|HC|  |TAMS 0x00000000c9d00000, 0x00000000c9d00000| Complete 
| 131|0x00000000c9d00000, 0x00000000c9e00000, 0x00000000c9e00000|100%|HC|  |TAMS 0x00000000c9e00000, 0x00000000c9e00000| Complete 
| 132|0x00000000c9e00000, 0x00000000c9f00000, 0x00000000c9f00000|100%|HC|  |TAMS 0x00000000c9f00000, 0x00000000c9f00000| Complete 
| 133|0x00000000c9f00000, 0x00000000ca000000, 0x00000000ca000000|100%|HC|  |TAMS 0x00000000ca000000, 0x00000000ca000000| Complete 
| 134|0x00000000ca000000, 0x00000000ca100000, 0x00000000ca100000|100%|HC|  |TAMS 0x00000000ca100000, 0x00000000ca100000| Complete 
| 135|0x00000000ca100000, 0x00000000ca200000, 0x00000000ca200000|100%|HC|  |TAMS 0x00000000ca200000, 0x00000000ca200000| Complete 
| 136|0x00000000ca200000, 0x00000000ca300000, 0x00000000ca300000|100%|HC|  |TAMS 0x00000000ca300000, 0x00000000ca300000| Complete 
| 137|0x00000000ca300000, 0x00000000ca400000, 0x00000000ca400000|100%|HC|  |TAMS 0x00000000ca400000, 0x00000000ca400000| Complete 
| 138|0x00000000ca400000, 0x00000000ca500000, 0x00000000ca500000|100%|HC|  |TAMS 0x00000000ca500000, 0x00000000ca500000| Complete 
| 139|0x00000000ca500000, 0x00000000ca600000, 0x00000000ca600000|100%|HC|  |TAMS 0x00000000ca600000, 0x00000000ca600000| Complete 
| 140|0x00000000ca600000, 0x00000000ca700000, 0x00000000ca700000|100%|HC|  |TAMS 0x00000000ca700000, 0x00000000ca700000| Complete 
| 141|0x00000000ca700000, 0x00000000ca800000, 0x00000000ca800000|100%|HC|  |TAMS 0x00000000ca800000, 0x00000000ca800000| Complete 
| 142|0x00000000ca800000, 0x00000000ca900000, 0x00000000ca900000|100%|HC|  |TAMS 0x00000000ca900000, 0x00000000ca900000| Complete 
| 143|0x00000000ca900000, 0x00000000caa00000, 0x00000000caa00000|100%|HC|  |TAMS 0x00000000caa00000, 0x00000000caa00000| Complete 
| 144|0x00000000caa00000, 0x00000000caa00000, 0x00000000cab00000|  0%| F|  |TAMS 0x00000000caa00000, 0x00000000caa00000| Untracked 
| 145|0x00000000cab00000, 0x00000000cab00000, 0x00000000cac00000|  0%| F|  |TAMS 0x00000000cab00000, 0x00000000cab00000| Untracked 
| 146|0x00000000cac00000, 0x00000000cac00000, 0x00000000cad00000|  0%| F|  |TAMS 0x00000000cac00000, 0x00000000cac00000| Untracked 
| 147|0x00000000cad00000, 0x00000000cad00000, 0x00000000cae00000|  0%| F|  |TAMS 0x00000000cad00000, 0x00000000cad00000| Untracked 
| 148|0x00000000cae00000, 0x00000000cae00000, 0x00000000caf00000|  0%| F|  |TAMS 0x00000000cae00000, 0x00000000cae00000| Untracked 
| 149|0x00000000caf00000, 0x00000000caf00000, 0x00000000cb000000|  0%| F|  |TAMS 0x00000000caf00000, 0x00000000caf00000| Untracked 
| 150|0x00000000cb000000, 0x00000000cb000000, 0x00000000cb100000|  0%| F|  |TAMS 0x00000000cb000000, 0x00000000cb000000| Untracked 
| 151|0x00000000cb100000, 0x00000000cb100000, 0x00000000cb200000|  0%| F|  |TAMS 0x00000000cb100000, 0x00000000cb100000| Untracked 
| 152|0x00000000cb200000, 0x00000000cb200000, 0x00000000cb300000|  0%| F|  |TAMS 0x00000000cb200000, 0x00000000cb200000| Untracked 
| 153|0x00000000cb300000, 0x00000000cb300000, 0x00000000cb400000|  0%| F|  |TAMS 0x00000000cb300000, 0x00000000cb300000| Untracked 
| 154|0x00000000cb400000, 0x00000000cb400000, 0x00000000cb500000|  0%| F|  |TAMS 0x00000000cb400000, 0x00000000cb400000| Untracked 
| 155|0x00000000cb500000, 0x00000000cb500000, 0x00000000cb600000|  0%| F|  |TAMS 0x00000000cb500000, 0x00000000cb500000| Untracked 
| 156|0x00000000cb600000, 0x00000000cb600000, 0x00000000cb700000|  0%| F|  |TAMS 0x00000000cb600000, 0x00000000cb600000| Untracked 
| 157|0x00000000cb700000, 0x00000000cb700000, 0x00000000cb800000|  0%| F|  |TAMS 0x00000000cb700000, 0x00000000cb700000| Untracked 
| 158|0x00000000cb800000, 0x00000000cb800000, 0x00000000cb900000|  0%| F|  |TAMS 0x00000000cb800000, 0x00000000cb800000| Untracked 
| 159|0x00000000cb900000, 0x00000000cb900000, 0x00000000cba00000|  0%| F|  |TAMS 0x00000000cb900000, 0x00000000cb900000| Untracked 
| 160|0x00000000cba00000, 0x00000000cba00000, 0x00000000cbb00000|  0%| F|  |TAMS 0x00000000cba00000, 0x00000000cba00000| Untracked 
| 161|0x00000000cbb00000, 0x00000000cbb00000, 0x00000000cbc00000|  0%| F|  |TAMS 0x00000000cbb00000, 0x00000000cbb00000| Untracked 
| 162|0x00000000cbc00000, 0x00000000cbc00000, 0x00000000cbd00000|  0%| F|  |TAMS 0x00000000cbc00000, 0x00000000cbc00000| Untracked 
| 163|0x00000000cbd00000, 0x00000000cbd00000, 0x00000000cbe00000|  0%| F|  |TAMS 0x00000000cbd00000, 0x00000000cbd00000| Untracked 
| 164|0x00000000cbe00000, 0x00000000cbe00000, 0x00000000cbf00000|  0%| F|  |TAMS 0x00000000cbe00000, 0x00000000cbe00000| Untracked 
| 165|0x00000000cbf00000, 0x00000000cbf00000, 0x00000000cc000000|  0%| F|  |TAMS 0x00000000cbf00000, 0x00000000cbf00000| Untracked 
| 166|0x00000000cc000000, 0x00000000cc000000, 0x00000000cc100000|  0%| F|  |TAMS 0x00000000cc000000, 0x00000000cc000000| Untracked 
| 167|0x00000000cc100000, 0x00000000cc100000, 0x00000000cc200000|  0%| F|  |TAMS 0x00000000cc100000, 0x00000000cc100000| Untracked 
| 168|0x00000000cc200000, 0x00000000cc200000, 0x00000000cc300000|  0%| F|  |TAMS 0x00000000cc200000, 0x00000000cc200000| Untracked 
| 169|0x00000000cc300000, 0x00000000cc300000, 0x00000000cc400000|  0%| F|  |TAMS 0x00000000cc300000, 0x00000000cc300000| Untracked 
| 170|0x00000000cc400000, 0x00000000cc400000, 0x00000000cc500000|  0%| F|  |TAMS 0x00000000cc400000, 0x00000000cc400000| Untracked 
| 171|0x00000000cc500000, 0x00000000cc500000, 0x00000000cc600000|  0%| F|  |TAMS 0x00000000cc500000, 0x00000000cc500000| Untracked 
| 172|0x00000000cc600000, 0x00000000cc600000, 0x00000000cc700000|  0%| F|  |TAMS 0x00000000cc600000, 0x00000000cc600000| Untracked 
| 173|0x00000000cc700000, 0x00000000cc700000, 0x00000000cc800000|  0%| F|  |TAMS 0x00000000cc700000, 0x00000000cc700000| Untracked 
| 174|0x00000000cc800000, 0x00000000cc800000, 0x00000000cc900000|  0%| F|  |TAMS 0x00000000cc800000, 0x00000000cc800000| Untracked 
| 175|0x00000000cc900000, 0x00000000cc900000, 0x00000000cca00000|  0%| F|  |TAMS 0x00000000cc900000, 0x00000000cc900000| Untracked 

Card table byte_map: [0x0000022c60d30000,0x0000022c60f30000] _byte_map_base: 0x0000022c60723000

Marking Bits (Prev, Next): (CMBitMap*) 0x0000022c49c0cb60, (CMBitMap*) 0x0000022c49c0cb20
 Prev Bits: [0x0000022c620d0000, 0x0000022c63068000)
 Next Bits: [0x0000022c61130000, 0x0000022c620c8000)

Polling page: 0x0000022c47ae0000

Metaspace:

Usage:
  Non-class:      7.05 MB used.
      Class:    878.55 KB used.
       Both:      7.91 MB used.

Virtual space:
  Non-class space:       64.00 MB reserved,       7.19 MB ( 11%) committed,  1 nodes.
      Class space:        1.00 GB reserved,     960.00 KB ( <1%) committed,  1 nodes.
             Both:        1.06 GB reserved,       8.12 MB ( <1%) committed. 

Chunk freelists:
   Non-Class:  482.00 KB
       Class:  3.08 MB
        Both:  3.55 MB

MaxMetaspaceSize: unlimited
CompressedClassSpaceSize: 1.00 GB
Initial GC threshold: 21.00 MB
Current GC threshold: 21.00 MB
CDS: on
MetaspaceReclaimPolicy: balanced
 - commit_granule_bytes: 65536.
 - commit_granule_words: 8192.
 - virtual_space_node_default_size: 8388608.
 - enlarge_chunks_in_place: 1.
 - new_chunks_are_fully_committed: 0.
 - uncommit_free_chunks: 1.
 - use_allocation_guard: 0.


Internal statistics:

num_allocs_failed_limit: 0.
num_arena_births: 154.
num_arena_deaths: 0.
num_vsnodes_births: 2.
num_vsnodes_deaths: 0.
num_space_committed: 130.
num_space_uncommitted: 0.
num_chunks_returned_to_freelist: 0.
num_chunks_taken_from_freelist: 179.
num_chunk_merges: 0.
num_chunk_splits: 117.
num_chunks_enlarged: 75.
num_inconsistent_stats: 0.

CodeHeap 'non-profiled nmethods': size=120000Kb used=464Kb max_used=464Kb free=119535Kb
 bounds [0x0000022c59600000, 0x0000022c59870000, 0x0000022c60b30000]
CodeHeap 'profiled nmethods': size=120000Kb used=2152Kb max_used=2152Kb free=117847Kb
 bounds [0x0000022c51b30000, 0x0000022c51da0000, 0x0000022c59060000]
CodeHeap 'non-nmethods': size=5760Kb used=1355Kb max_used=1384Kb free=4404Kb
 bounds [0x0000022c59060000, 0x0000022c592d0000, 0x0000022c59600000]
 total_blobs=1850 nmethods=1251 adapters=511
 compilation: enabled
              stopped_count=0, restarted_count=0
 full_count=0

Compilation events (20 events):
Event: 4.305 Thread 0x0000022c654e5ee0 1245       1       java.awt.Component::isMaximumSizeSet (5 bytes)
Event: 4.305 Thread 0x0000022c654e5ee0 nmethod 1245 0x0000022c59673790 code [0x0000022c59673920, 0x0000022c596739f8]
Event: 4.305 Thread 0x0000022c654e5ee0 1246       1       java.awt.Container::getLayout (5 bytes)
Event: 4.305 Thread 0x0000022c654e5ee0 nmethod 1246 0x0000022c59673a90 code [0x0000022c59673c20, 0x0000022c59673cf8]
Event: 4.317 Thread 0x0000022c654e5ee0 1247       1       java.nio.DirectByteBuffer::isReadOnly (2 bytes)
Event: 4.317 Thread 0x0000022c654e5ee0 nmethod 1247 0x0000022c59673d90 code [0x0000022c59673f20, 0x0000022c59673ff8]
Event: 4.317 Thread 0x0000022c654e5ee0 1248       3       java.awt.Component::isDisplayable (13 bytes)
Event: 4.317 Thread 0x0000022c654e5ee0 nmethod 1248 0x0000022c51d47790 code [0x0000022c51d47920, 0x0000022c51d47a98]
Event: 4.320 Thread 0x0000022c654e5ee0 1249       3       jdk.internal.jimage.ImageStringsReader::match (11 bytes)
Event: 4.320 Thread 0x0000022c654e5ee0 nmethod 1249 0x0000022c51d47b10 code [0x0000022c51d47cc0, 0x0000022c51d47e88]
Event: 4.320 Thread 0x0000022c654e5ee0 1251       3       jdk.internal.jimage.ImageReader::requireOpen (18 bytes)
Event: 4.321 Thread 0x0000022c654e5ee0 nmethod 1251 0x0000022c51d47f90 code [0x0000022c51d48140, 0x0000022c51d48348]
Event: 4.321 Thread 0x0000022c654e5ee0 1252       3       jdk.internal.loader.BuiltinClassLoader::moduleReaderFor (45 bytes)
Event: 4.322 Thread 0x0000022c654e5ee0 nmethod 1252 0x0000022c51d48410 code [0x0000022c51d48600, 0x0000022c51d48c98]
Event: 4.322 Thread 0x0000022c654e5ee0 1253       3       jdk.internal.jimage.BasicImageReader::getLocationIndex (52 bytes)
Event: 4.323 Thread 0x0000022c654e5ee0 nmethod 1253 0x0000022c51d48e90 code [0x0000022c51d490a0, 0x0000022c51d49538]
Event: 4.323 Thread 0x0000022c654e5ee0 1254       3       jdk.internal.jimage.ImageStringsReader::hashCode (8 bytes)
Event: 4.323 Thread 0x0000022c654e5ee0 nmethod 1254 0x0000022c51d49790 code [0x0000022c51d49940, 0x0000022c51d49af8]
Event: 4.323 Thread 0x0000022c654e5ee0 1250       3       jdk.internal.jimage.BasicImageReader::match (37 bytes)
Event: 4.324 Thread 0x0000022c654e5ee0 nmethod 1250 0x0000022c51d49c10 code [0x0000022c51d49de0, 0x0000022c51d4a018]

GC Heap History (10 events):
Event: 1.885 GC heap before
{Heap before GC invocations=0 (full 0):
 garbage-first heap   total 65536K, used 11264K [0x00000000c1a00000, 0x0000000100000000)
  region size 1024K, 12 young (12288K), 0 survivors (0K)
 Metaspace       used 7971K, committed 8192K, reserved 1114112K
  class space    used 853K, committed 960K, reserved 1048576K
}
Event: 1.897 GC heap after
{Heap after GC invocations=1 (full 0):
 garbage-first heap   total 65536K, used 3848K [0x00000000c1a00000, 0x0000000100000000)
  region size 1024K, 2 young (2048K), 2 survivors (2048K)
 Metaspace       used 7971K, committed 8192K, reserved 1114112K
  class space    used 853K, committed 960K, reserved 1048576K
}
Event: 2.288 GC heap before
{Heap before GC invocations=1 (full 0):
 garbage-first heap   total 147456K, used 109320K [0x00000000c1a00000, 0x0000000100000000)
  region size 1024K, 14 young (14336K), 2 survivors (2048K)
 Metaspace       used 7999K, committed 8256K, reserved 1114112K
  class space    used 854K, committed 960K, reserved 1048576K
}
Event: 2.296 GC heap after
{Heap after GC invocations=2 (full 0):
 garbage-first heap   total 147456K, used 98112K [0x00000000c1a00000, 0x0000000100000000)
  region size 1024K, 1 young (1024K), 1 survivors (1024K)
 Metaspace       used 7999K, committed 8256K, reserved 1114112K
  class space    used 854K, committed 960K, reserved 1048576K
}
Event: 2.458 GC heap before
{Heap before GC invocations=2 (full 0):
 garbage-first heap   total 147456K, used 113472K [0x00000000c1a00000, 0x0000000100000000)
  region size 1024K, 17 young (17408K), 1 survivors (1024K)
 Metaspace       used 8000K, committed 8256K, reserved 1114112K
  class space    used 854K, committed 960K, reserved 1048576K
}
Event: 2.460 GC heap after
{Heap after GC invocations=3 (full 0):
 garbage-first heap   total 147456K, used 97968K [0x00000000c1a00000, 0x0000000100000000)
  region size 1024K, 1 young (1024K), 1 survivors (1024K)
 Metaspace       used 8000K, committed 8256K, reserved 1114112K
  class space    used 854K, committed 960K, reserved 1048576K
}
Event: 2.797 GC heap before
{Heap before GC invocations=4 (full 0):
 garbage-first heap   total 171008K, used 121520K [0x00000000c1a00000, 0x0000000100000000)
  region size 1024K, 25 young (25600K), 1 survivors (1024K)
 Metaspace       used 8000K, committed 8256K, reserved 1114112K
  class space    used 854K, committed 960K, reserved 1048576K
}
Event: 2.798 GC heap after
{Heap after GC invocations=5 (full 0):
 garbage-first heap   total 171008K, used 97914K [0x00000000c1a00000, 0x0000000100000000)
  region size 1024K, 1 young (1024K), 1 survivors (1024K)
 Metaspace       used 8000K, committed 8256K, reserved 1114112K
  class space    used 854K, committed 960K, reserved 1048576K
}
Event: 4.325 GC heap before
{Heap before GC invocations=5 (full 0):
 garbage-first heap   total 171008K, used 141946K [0x00000000c1a00000, 0x0000000100000000)
  region size 1024K, 46 young (47104K), 1 survivors (1024K)
 Metaspace       used 8097K, committed 8320K, reserved 1114112K
  class space    used 878K, committed 960K, reserved 1048576K
}
Event: 4.329 GC heap after
{Heap after GC invocations=6 (full 0):
 garbage-first heap   total 171008K, used 100298K [0x00000000c1a00000, 0x0000000100000000)
  region size 1024K, 3 young (3072K), 3 survivors (3072K)
 Metaspace       used 8097K, committed 8320K, reserved 1114112K
  class space    used 878K, committed 960K, reserved 1048576K
}

Dll operation events (9 events):
Event: 0.030 Loaded shared library C:\Program Files\Java\jdk-19\bin\java.dll
Event: 0.065 Loaded shared library C:\Program Files\Java\jdk-19\bin\jsvml.dll
Event: 0.252 Loaded shared library C:\Program Files\Java\jdk-19\bin\net.dll
Event: 0.257 Loaded shared library C:\Program Files\Java\jdk-19\bin\nio.dll
Event: 0.334 Loaded shared library C:\Program Files\Java\jdk-19\bin\zip.dll
Event: 0.384 Loaded shared library C:\Program Files\Java\jdk-19\bin\jimage.dll
Event: 0.432 Loaded shared library C:\Program Files\Java\jdk-19\bin\awt.dll
Event: 1.413 Loaded shared library C:\Program Files\Java\jdk-19\bin\freetype.dll
Event: 1.416 Loaded shared library C:\Program Files\Java\jdk-19\bin\fontmanager.dll

Deoptimization events (20 events):
Event: 4.290 Thread 0x0000022c69b8a010 DEOPT PACKING pc=0x0000022c51d43bfd sp=0x00000081b0aff4b0
Event: 4.290 Thread 0x0000022c69b8a010 DEOPT UNPACKING pc=0x0000022c590c7525 sp=0x00000081b0afe920 mode 0
Event: 4.291 Thread 0x0000022c69b8a010 DEOPT PACKING pc=0x0000022c51d43bfd sp=0x00000081b0aff4b0
Event: 4.291 Thread 0x0000022c69b8a010 DEOPT UNPACKING pc=0x0000022c590c7525 sp=0x00000081b0afe920 mode 0
Event: 4.291 Thread 0x0000022c69b8a010 DEOPT PACKING pc=0x0000022c51d43bfd sp=0x00000081b0aff4b0
Event: 4.291 Thread 0x0000022c69b8a010 DEOPT UNPACKING pc=0x0000022c590c7525 sp=0x00000081b0afe920 mode 0
Event: 4.291 Thread 0x0000022c69b8a010 DEOPT PACKING pc=0x0000022c51d43bfd sp=0x00000081b0aff4b0
Event: 4.291 Thread 0x0000022c69b8a010 DEOPT UNPACKING pc=0x0000022c590c7525 sp=0x00000081b0afe920 mode 0
Event: 4.292 Thread 0x0000022c69b8a010 DEOPT PACKING pc=0x0000022c51d43bfd sp=0x00000081b0aff4b0
Event: 4.292 Thread 0x0000022c69b8a010 DEOPT UNPACKING pc=0x0000022c590c7525 sp=0x00000081b0afe920 mode 0
Event: 4.292 Thread 0x0000022c69b8a010 DEOPT PACKING pc=0x0000022c51d43bfd sp=0x00000081b0aff4b0
Event: 4.292 Thread 0x0000022c69b8a010 DEOPT UNPACKING pc=0x0000022c590c7525 sp=0x00000081b0afe920 mode 0
Event: 4.292 Thread 0x0000022c69b8a010 DEOPT PACKING pc=0x0000022c51d43bfd sp=0x00000081b0aff4b0
Event: 4.292 Thread 0x0000022c69b8a010 DEOPT UNPACKING pc=0x0000022c590c7525 sp=0x00000081b0afe920 mode 0
Event: 4.293 Thread 0x0000022c69b8a010 DEOPT PACKING pc=0x0000022c51d43bfd sp=0x00000081b0aff4b0
Event: 4.293 Thread 0x0000022c69b8a010 DEOPT UNPACKING pc=0x0000022c590c7525 sp=0x00000081b0afe920 mode 0
Event: 4.293 Thread 0x0000022c69b8a010 DEOPT PACKING pc=0x0000022c51d43bfd sp=0x00000081b0aff4b0
Event: 4.293 Thread 0x0000022c69b8a010 DEOPT UNPACKING pc=0x0000022c590c7525 sp=0x00000081b0afe920 mode 0
Event: 4.324 Thread 0x0000022c69b8a010 DEOPT PACKING pc=0x0000022c51d43c44 sp=0x00000081b0aff430
Event: 4.324 Thread 0x0000022c69b8a010 DEOPT UNPACKING pc=0x0000022c590c7525 sp=0x00000081b0afe8d0 mode 0

Classes loaded (20 events):
Event: 1.881 Loading class javax/swing/RepaintManager$2$1
Event: 1.881 Loading class javax/swing/RepaintManager$2$1 done
Event: 1.883 Loading class sun/awt/dnd/SunDropTargetEvent
Event: 1.883 Loading class sun/awt/dnd/SunDropTargetEvent done
Event: 1.883 Loading class java/awt/event/FocusEvent
Event: 1.884 Loading class java/awt/event/FocusEvent done
Event: 1.903 Loading class java/awt/event/ContainerEvent
Event: 1.903 Loading class java/awt/event/ContainerEvent done
Event: 3.294 Loading class java/awt/image/ReplicateScaleFilter
Event: 3.294 Loading class java/awt/image/ImageFilter
Event: 3.295 Loading class java/awt/image/ImageFilter done
Event: 3.295 Loading class java/awt/image/ReplicateScaleFilter done
Event: 3.295 Loading class java/awt/image/FilteredImageSource
Event: 3.296 Loading class java/awt/image/FilteredImageSource done
Event: 4.221 Loading class java/lang/InstantiationException
Event: 4.222 Loading class java/lang/InstantiationException done
Event: 4.222 Loading class javax/swing/UnsupportedLookAndFeelException
Event: 4.222 Loading class javax/swing/UnsupportedLookAndFeelException done
Event: 4.295 Loading class javax/swing/GroupLayout$BaselineGroup
Event: 4.295 Loading class javax/swing/GroupLayout$BaselineGroup done

Classes unloaded (0 events):
No events

Classes redefined (0 events):
No events

Internal exceptions (20 events):
Event: 0.263 Thread 0x0000022c49bcb6e0 Exception <a 'sun/nio/fs/WindowsException'{0x00000000c58413a0}> (0x00000000c58413a0) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 517]
Event: 0.268 Thread 0x0000022c49bcb6e0 Exception <a 'sun/nio/fs/WindowsException'{0x00000000c58861a8}> (0x00000000c58861a8) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 517]
Event: 0.268 Thread 0x0000022c49bcb6e0 Exception <a 'sun/nio/fs/WindowsException'{0x00000000c5886c48}> (0x00000000c5886c48) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 517]
Event: 0.403 Thread 0x0000022c49bcb6e0 Exception <a 'java/lang/ClassNotFoundException'{0x00000000c572dd58}: sun/awt/resources/spi/awtProvider> (0x00000000c572dd58) 
thrown [s\open\src\hotspot\share\classfile\systemDictionary.cpp, line 255]
Event: 0.484 Thread 0x0000022c49bcb6e0 Exception <a 'java/io/FileNotFoundException'{0x00000000c57855c0}> (0x00000000c57855c0) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 517]
Event: 0.510 Thread 0x0000022c49bcb6e0 Exception <a 'java/io/FileNotFoundException'{0x00000000c57b1df0}> (0x00000000c57b1df0) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 517]
Event: 0.648 Thread 0x0000022c49bcb6e0 Exception <a 'java/lang/NoSuchMethodError'{0x00000000c57fa350}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.invokeStaticInit(java.lang.Object)'> (0x00000000c57fa350) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 774]
Event: 0.762 Thread 0x0000022c49bcb6e0 Exception <a 'java/lang/NoSuchMethodError'{0x00000000c56d4a68}: 'void java.lang.invoke.DirectMethodHandle$Holder.invokeSpecial(java.lang.Object, java.lang.Object, java.lang.Object)'> (0x00000000c56d4a68) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 774]
Event: 0.796 Thread 0x0000022c49bcb6e0 Exception <a 'java/lang/NoSuchMethodError'{0x00000000c56ff580}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)'> (0x00000000c56ff580) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 774]
Event: 0.821 Thread 0x0000022c49bcb6e0 Exception <a 'java/lang/NoSuchMethodError'{0x00000000c55316e0}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.invokeStatic(java.lang.Object, int, java.lang.Object)'> (0x00000000c55316e0) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 774]
Event: 0.927 Thread 0x0000022c49bcb6e0 Exception <a 'java/lang/ClassNotFoundException'{0x00000000c55ed6c8}: com/sun/swing/internal/plaf/metal/resources/spi/metalProvider> (0x00000000c55ed6c8) 
thrown [s\open\src\hotspot\share\classfile\systemDictionary.cpp, line 255]
Event: 0.930 Thread 0x0000022c49bcb6e0 Exception <a 'java/lang/ClassNotFoundException'{0x00000000c55f1648}: com/sun/swing/internal/plaf/basic/resources/spi/basicProvider> (0x00000000c55f1648) 
thrown [s\open\src\hotspot\share\classfile\systemDictionary.cpp, line 255]
Event: 0.969 Thread 0x0000022c49bcb6e0 Exception <a 'java/lang/NoSuchMethodError'{0x00000000c5411788}: 'int java.lang.invoke.Invokers$Holder.invokeExact_MT(java.lang.Object, java.lang.Object)'> (0x00000000c5411788) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 774]
Event: 1.282 Thread 0x0000022c69b8a010 Exception <a 'java/lang/NoSuchMethodError'{0x00000000c5272f88}: 'java.lang.Object java.lang.invoke.DirectMethodHandle$Holder.newInvokeSpecial(java.lang.Object, java.lang.Object, java.lang.Object, int, int, int, int, int)'> (0x00000000c5272f88) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 774]
Event: 1.359 Thread 0x0000022c69a94f90 Exception <a 'java/lang/NoSuchMethodError'{0x00000000c5694ff8}: 'void java.lang.invoke.DirectMethodHandle$Holder.invokeVirtual(java.lang.Object, java.lang.Object)'> (0x00000000c5694ff8) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 774]
Event: 1.401 Thread 0x0000022c49bcb6e0 Exception <a 'java/lang/NoSuchMethodError'{0x00000000c5484728}: 'void java.lang.invoke.DirectMethodHandle$Holder.invokeStaticInit(java.lang.Object)'> (0x00000000c5484728) 
thrown [s\open\src\hotspot\share\interpreter\linkResolver.cpp, line 774]
Event: 1.616 Thread 0x0000022c49bcb6e0 Exception <a 'java/io/FileNotFoundException'{0x00000000c50a7d90}> (0x00000000c50a7d90) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 517]
Event: 1.625 Thread 0x0000022c49bcb6e0 Exception <a 'java/io/FileNotFoundException'{0x00000000c50b6c00}> (0x00000000c50b6c00) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 517]
Event: 1.712 Thread 0x0000022c49bcb6e0 Exception <a 'java/io/FileNotFoundException'{0x00000000c4f5b098}> (0x00000000c4f5b098) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 517]
Event: 1.774 Thread 0x0000022c49bcb6e0 Exception <a 'java/io/FileNotFoundException'{0x00000000c4fda7c0}> (0x00000000c4fda7c0) 
thrown [s\open\src\hotspot\share\prims\jni.cpp, line 517]

VM Operations (20 events):
Event: 1.838 Executing VM operation: HandshakeAllThreads
Event: 1.838 Executing VM operation: HandshakeAllThreads done
Event: 1.885 Executing VM operation: G1TryInitiateConcMark
Event: 1.897 Executing VM operation: G1TryInitiateConcMark done
Event: 2.288 Executing VM operation: G1CollectForAllocation
Event: 2.296 Executing VM operation: G1CollectForAllocation done
Event: 2.458 Executing VM operation: G1CollectForAllocation
Event: 2.460 Executing VM operation: G1CollectForAllocation done
Event: 2.477 Executing VM operation: G1PauseRemark
Event: 2.480 Executing VM operation: G1PauseRemark done
Event: 2.486 Executing VM operation: G1PauseCleanup
Event: 2.486 Executing VM operation: G1PauseCleanup done
Event: 2.797 Executing VM operation: G1CollectForAllocation
Event: 2.798 Executing VM operation: G1CollectForAllocation done
Event: 3.295 Executing VM operation: HandshakeAllThreads
Event: 3.295 Executing VM operation: HandshakeAllThreads done
Event: 4.301 Executing VM operation: Cleanup
Event: 4.301 Executing VM operation: Cleanup done
Event: 4.325 Executing VM operation: G1TryInitiateConcMark
Event: 4.329 Executing VM operation: G1TryInitiateConcMark done

Events (19 events):
Event: 0.066 Thread 0x0000022c49bcb6e0 Thread added: 0x0000022c49bcb6e0
Event: 0.112 Thread 0x0000022c654d9df0 Thread added: 0x0000022c654d9df0
Event: 0.113 Thread 0x0000022c654da920 Thread added: 0x0000022c654da920
Event: 0.114 Thread 0x0000022c654de7e0 Thread added: 0x0000022c654de7e0
Event: 0.115 Thread 0x0000022c654df4d0 Thread added: 0x0000022c654df4d0
Event: 0.115 Thread 0x0000022c654dfe00 Thread added: 0x0000022c654dfe00
Event: 0.115 Thread 0x0000022c654e0730 Thread added: 0x0000022c654e0730
Event: 0.116 Thread 0x0000022c654e1c70 Thread added: 0x0000022c654e1c70
Event: 0.116 Thread 0x0000022c654e5ee0 Thread added: 0x0000022c654e5ee0
Event: 0.117 Thread 0x0000022c654ea630 Thread added: 0x0000022c654ea630
Event: 0.210 Thread 0x0000022c49c80710 Thread added: 0x0000022c49c80710
Event: 0.315 Thread 0x0000022c698ed5c0 Thread added: 0x0000022c698ed5c0
Event: 0.651 Thread 0x0000022c69a94510 Thread added: 0x0000022c69a94510
Event: 0.653 Thread 0x0000022c69a94a50 Thread added: 0x0000022c69a94a50
Event: 0.658 Thread 0x0000022c69a94f90 Thread added: 0x0000022c69a94f90
Event: 1.083 Thread 0x0000022c69b74fb0 Thread added: 0x0000022c69b74fb0
Event: 1.103 Thread 0x0000022c69b8a010 Thread added: 0x0000022c69b8a010
Event: 2.694 Thread 0x0000022c69bfe3a0 Thread added: 0x0000022c69bfe3a0
Event: 3.103 Thread 0x0000022c69bfe3a0 Thread exited: 0x0000022c69bfe3a0


Dynamic libraries:
0x00007ff6fcc20000 - 0x00007ff6fcc30000 	C:\Program Files\Java\jdk-19\bin\java.exe
0x00007ffc94730000 - 0x00007ffc94928000 	C:\WINDOWS\SYSTEM32\ntdll.dll
0x00007ffc93cb0000 - 0x00007ffc93d6f000 	C:\WINDOWS\System32\KERNEL32.DLL
0x00007ffc92260000 - 0x00007ffc92532000 	C:\WINDOWS\System32\KERNELBASE.dll
0x00007ffc925e0000 - 0x00007ffc926e0000 	C:\WINDOWS\System32\ucrtbase.dll
0x00007ffc657c0000 - 0x00007ffc657db000 	C:\Program Files\Java\jdk-19\bin\VCRUNTIME140.dll
0x00007ffc6f920000 - 0x00007ffc6f938000 	C:\Program Files\Java\jdk-19\bin\jli.dll
0x00007ffc93980000 - 0x00007ffc93a2e000 	C:\WINDOWS\System32\ADVAPI32.dll
0x00007ffc92770000 - 0x00007ffc9280e000 	C:\WINDOWS\System32\msvcrt.dll
0x00007ffc938e0000 - 0x00007ffc9397c000 	C:\WINDOWS\System32\sechost.dll
0x00007ffc93a90000 - 0x00007ffc93bb5000 	C:\WINDOWS\System32\RPCRT4.dll
0x00007ffc92810000 - 0x00007ffc929b1000 	C:\WINDOWS\System32\USER32.dll
0x00007ffc91f30000 - 0x00007ffc91f52000 	C:\WINDOWS\System32\win32u.dll
0x00007ffc93740000 - 0x00007ffc9376b000 	C:\WINDOWS\System32\GDI32.dll
0x00007ffc91e20000 - 0x00007ffc91f2f000 	C:\WINDOWS\System32\gdi32full.dll
0x00007ffc92540000 - 0x00007ffc925dd000 	C:\WINDOWS\System32\msvcp_win.dll
0x00007ffc7a2a0000 - 0x00007ffc7a53a000 	C:\WINDOWS\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.19041.1110_none_60b5254171f9507e\COMCTL32.dll
0x00007ffc83150000 - 0x00007ffc8315a000 	C:\WINDOWS\SYSTEM32\VERSION.dll
0x00007ffc938a0000 - 0x00007ffc938d2000 	C:\WINDOWS\System32\IMM32.DLL
0x00007ffc69ad0000 - 0x00007ffc69adc000 	C:\Program Files\Java\jdk-19\bin\vcruntime140_1.dll
0x00007ffc5ad50000 - 0x00007ffc5adde000 	C:\Program Files\Java\jdk-19\bin\msvcp140.dll
0x00007ffc2a730000 - 0x00007ffc2b3f0000 	C:\Program Files\Java\jdk-19\bin\server\jvm.dll
0x00007ffc82a60000 - 0x00007ffc82a87000 	C:\WINDOWS\SYSTEM32\WINMM.dll
0x00007ffc829f0000 - 0x00007ffc829f9000 	C:\WINDOWS\SYSTEM32\WSOCK32.dll
0x00007ffc93e20000 - 0x00007ffc93e8b000 	C:\WINDOWS\System32\WS2_32.dll
0x00007ffc8fce0000 - 0x00007ffc8fcf2000 	C:\WINDOWS\SYSTEM32\kernel.appcore.dll
0x00007ffc69560000 - 0x00007ffc6956a000 	C:\Program Files\Java\jdk-19\bin\jimage.dll
0x00007ffc79d60000 - 0x00007ffc79f44000 	C:\WINDOWS\SYSTEM32\DBGHELP.DLL
0x00007ffc7bc20000 - 0x00007ffc7bc55000 	C:\WINDOWS\SYSTEM32\dbgcore.DLL
0x00007ffc926e0000 - 0x00007ffc92762000 	C:\WINDOWS\System32\bcryptPrimitives.dll
0x00007ffc641a0000 - 0x00007ffc641c6000 	C:\Program Files\Java\jdk-19\bin\java.dll
0x00007ffc5af80000 - 0x00007ffc5b057000 	C:\Program Files\Java\jdk-19\bin\jsvml.dll
0x00007ffc93e90000 - 0x00007ffc945d4000 	C:\WINDOWS\System32\SHELL32.dll
0x00007ffc8fee0000 - 0x00007ffc90672000 	C:\WINDOWS\SYSTEM32\windows.storage.dll
0x00007ffc92f90000 - 0x00007ffc932e5000 	C:\WINDOWS\System32\combase.dll
0x00007ffc917a0000 - 0x00007ffc917d0000 	C:\WINDOWS\SYSTEM32\Wldp.dll
0x00007ffc93d70000 - 0x00007ffc93e1d000 	C:\WINDOWS\System32\SHCORE.dll
0x00007ffc93680000 - 0x00007ffc936d5000 	C:\WINDOWS\System32\shlwapi.dll
0x00007ffc91d60000 - 0x00007ffc91d7f000 	C:\WINDOWS\SYSTEM32\profapi.dll
0x00007ffc61480000 - 0x00007ffc61493000 	C:\Program Files\Java\jdk-19\bin\net.dll
0x00007ffc87aa0000 - 0x00007ffc87bac000 	C:\WINDOWS\SYSTEM32\WINHTTP.dll
0x00007ffc91500000 - 0x00007ffc9156a000 	C:\WINDOWS\system32\mswsock.dll
0x00007ffc5eea0000 - 0x00007ffc5eeb6000 	C:\Program Files\Java\jdk-19\bin\nio.dll
0x00007ffc5ec90000 - 0x00007ffc5eca8000 	C:\Program Files\Java\jdk-19\bin\zip.dll
0x00007ffc5ade0000 - 0x00007ffc5af71000 	C:\Program Files\Java\jdk-19\bin\awt.dll
0x00007ffc93530000 - 0x00007ffc935fd000 	C:\WINDOWS\System32\OLEAUT32.dll
0x00007ffc8f620000 - 0x00007ffc8f6b1000 	C:\WINDOWS\SYSTEM32\apphelp.dll
0x00007ffc8f8f0000 - 0x00007ffc8f91f000 	C:\WINDOWS\system32\DWMAPI.DLL
0x00007ffc8f7c0000 - 0x00007ffc8f85e000 	C:\WINDOWS\system32\uxtheme.dll
0x00007ffc674d0000 - 0x00007ffc675f5000 	C:\WINDOWS\system32\opengl32.dll
0x00007ffc686a0000 - 0x00007ffc686cc000 	C:\WINDOWS\SYSTEM32\GLU32.dll
0x00007ffc93780000 - 0x00007ffc93895000 	C:\WINDOWS\System32\MSCTF.dll
0x00007ffc92e50000 - 0x00007ffc92f7a000 	C:\WINDOWS\System32\ole32.dll
0x00007ffc5a200000 - 0x00007ffc5a286000 	C:\Program Files\Java\jdk-19\bin\freetype.dll
0x00007ffc4fe10000 - 0x00007ffc4feb9000 	C:\Program Files\Java\jdk-19\bin\fontmanager.dll

dbghelp: loaded successfully - version: 4.0.5 - missing functions: none
symbol engine: initialized successfully - sym options: 0x614 - pdb path: .;C:\Program Files\Java\jdk-19\bin;C:\WINDOWS\SYSTEM32;C:\WINDOWS\WinSxS\amd64_microsoft.windows.common-controls_6595b64144ccf1df_6.0.19041.1110_none_60b5254171f9507e;C:\Program Files\Java\jdk-19\bin\server

VM Arguments:
jvm_args: -Dfile.encoding=UTF-8 --module-path=C:\Users\jazam\OneDrive\Escritorio\miniProyecto4\build\classes 
java_command: SupermercadoUV.MiniProyecto4
java_class_path (initial): C:\Program Files\NetBeans-14\netbeans\java\modules\ext\AbsoluteLayout.jar;C:\Users\jazam\OneDrive\Documents\MiniProyecto3-master\a.miniproyecto3\a.miniproyecto3\lib\unknown\binary\AbsoluteLayout\SNAPSHOT\AbsoluteLayout-SNAPSHOT.jar;C:\Users\jazam\OneDrive\Escritorio\miniProyecto4\build\classes
Launcher Type: SUN_STANDARD

[Global flags]
     intx CICompilerCount                          = 3                                         {product} {ergonomic}
     uint ConcGCThreads                            = 1                                         {product} {ergonomic}
     uint G1ConcRefinementThreads                  = 4                                         {product} {ergonomic}
   size_t G1HeapRegionSize                         = 1048576                                   {product} {ergonomic}
    uintx GCDrainStackTargetSize                   = 64                                        {product} {ergonomic}
   size_t InitialHeapSize                          = 67108864                                  {product} {ergonomic}
   size_t MarkStackSize                            = 4194304                                   {product} {ergonomic}
   size_t MaxHeapSize                              = 1046478848                                {product} {ergonomic}
   size_t MaxNewSize                               = 627048448                                 {product} {ergonomic}
   size_t MinHeapDeltaBytes                        = 1048576                                   {product} {ergonomic}
   size_t MinHeapSize                              = 8388608                                   {product} {ergonomic}
    uintx NonNMethodCodeHeapSize                   = 5832780                                {pd product} {ergonomic}
    uintx NonProfiledCodeHeapSize                  = 122912730                              {pd product} {ergonomic}
    uintx ProfiledCodeHeapSize                     = 122912730                              {pd product} {ergonomic}
    uintx ReservedCodeCacheSize                    = 251658240                              {pd product} {ergonomic}
     bool SegmentedCodeCache                       = true                                      {product} {ergonomic}
   size_t SoftMaxHeapSize                          = 1046478848                             {manageable} {ergonomic}
     bool UseCompressedClassPointers               = true                           {product lp64_product} {ergonomic}
     bool UseCompressedOops                        = true                           {product lp64_product} {ergonomic}
     bool UseG1GC                                  = true                                      {product} {ergonomic}
     bool UseLargePagesIndividualAllocation        = false                                  {pd product} {ergonomic}

Logging:
Log output configuration:
 #0: stdout all=warning uptime,level,tags foldmultilines=false
 #1: stderr all=off uptime,level,tags foldmultilines=false

Environment Variables:
PATH=C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Users\jazam\AppData\Local\Programs\Python\Python310\Scripts\;C:\Users\jazam\AppData\Local\Programs\Python\Python310\;C:\Users\jazam\AppData\Local\Microsoft\WindowsApps;;C:\Users\jazam\AppData\Local\Programs\Microsoft VS Code\bin
USERNAME=jazam
OS=Windows_NT
PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 55 Stepping 8, GenuineIntel
TMP=C:\Users\jazam\AppData\Local\Temp
TEMP=C:\Users\jazam\AppData\Local\Temp



---------------  S Y S T E M  ---------------

OS:
 Windows 10 , 64 bit Build 19041 (10.0.19041.2364)
OS uptime: 0 days 3:40 hours

CPU: total 4 (initial active 4) (4 cores per cpu, 1 threads per core) family 6 model 55 stepping 8 microcode 0x838, cx8, cmov, fxsr, mmx, 3dnowpref, sse, sse2, sse3, ssse3, sse4.1, sse4.2, popcnt, tsc, tscinvbit, erms, clmul, clflush, rdtscp

Memory: 4k page, system-wide physical 3985M (521M free)
TotalPageFile size 6545M (AvailPageFile size 5M)
current process WorkingSet (physical memory assigned to process): 207M, peak: 207M
current process commit charge ("private bytes"): 276M, peak: 277M

vm_info: Java HotSpot(TM) 64-Bit Server VM (19+36-2238) for windows-amd64 JRE (19+36-2238), built on 2022-08-12T20:29:01Z by "mach5one" with MS VC++ 17.1 (VS2022)

END.
